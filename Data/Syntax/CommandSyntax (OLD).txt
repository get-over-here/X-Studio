HIDDEN
X2
1
* $0
Comment
-------------- END DEFINITION ---------------
HIDDEN
X2
2
NOP
-------------- END DEFINITION ---------------
HIDDEN
X2
3
Command Comment
-------------- END DEFINITION ---------------
HIDDEN
X2
4
end
-------------- END DEFINITION ---------------
HIDDEN
X2
5
else
-------------- END DEFINITION ---------------
HIDDEN
X2
6
continue
-------------- END DEFINITION ---------------
HIDDEN
X2
7
break
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
100
goto label $0:
Label Number
-------------- END DEFINITION ---------------
HIDDEN
X2
101
$0:
Label Name
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
102
$1 $2 call script $0 :
Script Name
RetVar/IF/START
RefObj
-------------- END DEFINITION ---------------
HIDDEN
X2
103
return $0
Value
-------------- END DEFINITION ---------------
HIDDEN
X2
104
$0 $1
RetVar/IF
Expression
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
105
$0 wait $1 ms
@RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
MATHS
X2
106
$0 random value from zero to $1
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
107
$0 wait randomly from $1 to $2 ms
@RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
108
$0 get script priority
RetVar
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
109
set script priority to $0
Var/Number
-------------- END DEFINITION ---------------
MATHS
X2
110
$0 random value between $1 and $2
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
111
$0 interrupt with script $1 and prio $2
RefObj
Script Name
Var/Number
-------------- END DEFINITION ---------------
HIDDEN
X2
112
hidden goto label $0
Label Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
113
$0 connect ship command/signal $1 to script $2 with prio $3
RefObj
Object Command/Signal
Script Name
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
114
$0 set ship command/signal $1 to global default behaviour
RefObj
Object Command/Signal
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
115
$0 ignore ship command/signal $1
RefObj
Object Command/Signal
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
116
enable signal/interrupt handling: $0
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
117
$0 is signal/interrupt handling on
RetVar/IF
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
118
global script map: set: key=$0, class=$3, race=$4, script=$1, prio=$2
Object Command/Signal
Script Name
Var/Number
Var/Class
Var/Race
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
119
global script map: remove: key=$0, class=$1, race=$2
Object Command/Signal
Var/Class
Var/Race
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
120
set script command: $0
Object Command/Signal
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
121
$0 get script command
RetVar/IF
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
122
set script command target: $0
Value
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
123
$0 get script command target
RetVar/IF
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
124
$0 datatyp[ $1 ]
RetVar
Value
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
125
$0 is datatyp[ $1 ] == $2
RetVar/IF
Value
Var/Script Data Type
-------------- END DEFINITION ---------------
STRING
X2
126
$0 read text: page=$1 id=$2
RetVar
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
127
global script map: ignore: key=$0, class=$1, race=$2
Object Command/Signal
Var/Class
Var/Race
-------------- END DEFINITION ---------------
ARRAY
X2
128
$0 array alloc: size=$1
RetVar
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
129
$0 $1[$2]
RetVar/IF
Var/Array
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
130
$0[$1] = $2
Var/Array
Var/Number
Value
-------------- END DEFINITION ---------------
ARRAY
X2
131
$0 size of array $1
RetVar/IF
Var/Array
-------------- END DEFINITION ---------------
ARRAY
X2
132
$0 clone array $1 : index $2 ... $3
RetVar
Var/Array
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
133
copy array $2 index $3 ... $4 into array $0 at index $1
Var/Array
Var/Number
Var/Array
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
134
insert $2 into array $0 at index $1
Var/Array
Var/Number
Value
-------------- END DEFINITION ---------------
ARRAY
X2
135
append $1 to array $0
Var/Array
Value
-------------- END DEFINITION ---------------
ARRAY
X2
136
remove element from array $0 at index $1
Var/Array
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
137
resize array $0 to $1
Var/Array
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
138
$0 state of news article: page=$1 id=$2
RetVar
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
139
set state of news article page=$0 id=$1 to $2
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X2
140
$0 system date is month=$1, day=$2
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X2
141
$0 playing time
RetVar
-------------- END DEFINITION ---------------
MATHS
X2
142
inc $0
Var
-------------- END DEFINITION ---------------
MATHS
X2
143
dec $0
Var
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
144
set script command upgrade: command=$0  upgrade=$1
Object Command/Signal
Var/Ware
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
145
$0 get script command upgrade: command=$1
RetVar
Object Command/Signal
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
146
$0 is script with prio $1 on stack
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
147
$0 get task ID
RetVar/IF
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
148
$0 get PID
RetVar/IF
-------------- END DEFINITION ---------------
STRING
X2
149
$0 sprintf: fmt=$1, $2, $3, $4, $5, $6
RetVar
Var/String
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
STRING
X2
150
$0 sprintf: pageid=$1 textid=$2, $3, $4, $5, $6, $7
RetVar
Var/Number
Var/Number
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
STRING
X2
151
load text: id=$0
Var/Number
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X2
152
$0 script engine version
RetVar
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
153
infinite loop detection enabled=$0
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
154
set script command upgrade: command=$0  upgrade=$1  script=$2
Object Command/Signal
Var/Ware
Script Name
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
155
$0 set local variable: name=$1 value=$2
RefObj
Var/String
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
156
$2 $0 get local variable: name=$1
RefObj
Var/String
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
157
set global variable: name=$0 value=$1
Var/String
Value
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
158
$1 get global variable: name=$0
Var/String
RetVar/IF
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
159
$0 interrupt with script $1 and prio $2: arg1=$3 arg2=$4 arg3=$5 arg4=$6
RefObj
Script Name
Var/Number
Value
Value
Value
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
200
play sample $0
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
201
play sample: incoming transmission $0, from object $1
Var/Number
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
202
$0 send audio message $1 to player
RefObj
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
203
send incoming message $0 to player: display it=$1
Var/String
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X3R
212
send incoming question $0 to player: callback=$1
Var/String
Script Name
-------------- END DEFINITION ---------------
USER_INTERFACE
X3R
213
send incoming question $0 to player: callback=$1 flags=$2
Var/String
Script Name
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
400
write to player logbook $0
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
401
$0 write to logbook $1
RefObj
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
402
write to player logbook: printf: fmt=$0, $1, $2, $3, $4, $5
Var/String
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
403
write to player logbook: printf: pageid=$0 textid=$1, $2, $3, $4, $5, $6
Var/Number
Var/Number
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
ENGINE
X2
404
write to log file $0  append=$1  value=$2
Var/Number
Var/Number
Value
-------------- END DEFINITION ---------------
ENGINE
X2
405
write to log file $0  append=$1  printf: fmt=$2, $3, $4, $5, $6, $7
Var/Number
Var/Number
Var/String
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
ENGINE
X2
406
write to log file $0  append=$1  printf: pageid=$2 textid=$3, $4, $5, $6, $7, $8
Var/Number
Var/Number
Var/Number
Var/Number
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
500
$1 $0 fly to home base
RefObj
@RetVar/IF
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
501
$1 $0 fly to station $2
RefObj
@RetVar/IF
Var/Station
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
502
$1 $0 fly to sector $2
RefObj
@RetVar/IF
Var/Sector
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
503
$1 $0 find nearest enemy ship: max.dist=$2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
504
$1 $0 find nearest enemy station: max.dist=$2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
505
$1 $0 fire lasers on target $2 using turret $3
RefObj
RetVar/IF
Value
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
506
$1 $0 attack run on target $2 : timeout=$3 ms
RefObj
@RetVar/IF
Value
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
507
$1 $0 move around $2 ms
RefObj
@RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
508
$1 $0 escort ship $2
RefObj
@RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
509
$0 set formation $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
510
$0 add to formation with leader $1
RefObj
Var/Ship
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
511
$0 remove from any formation
RefObj
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
512
$1 $0 get formation leader
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
513
$1 $0 is docking allowed at $2
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
514
START $0 command $1 : arg1=$2, arg2=$3, arg3=$4, arg4=$5
RefObj
Object Command
Value
Value
Value
Value
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
515
$0 send signal $1 : arg1=$2, arg2=$3, arg3=$4, arg4=$5
RefObj
Object Signal
Value
Value
Value
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
516
$1 $0 follow object $2 with precision $3 m
RefObj
@RetVar/IF
Var/Ship
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
517
$0 set follow mode $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
518
$1 $0 get follow mode
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
519
$0 set destination to $1
RefObj
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
520
$1 $0 get destination
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
521
$0 set attack target to $1
RefObj
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
522
$1 $0 get attack target
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
523
$1 $0 move to position: x=$2 y=$3 z=$4 with precision $5 m
RefObj
@RetVar/IF
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
524
$0 set command: $1
RefObj
Object Command
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
525
$1 $0 get command
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
526
$0 set command target: $1
RefObj
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
527
$1 $0 get command target
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
528
$0 set command target2: $1
RefObj
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
529
$1 $0 get command target2
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
530
$1 $0 select new formation leader by: ship class=$2 strength=$3 min.speed=$4
RefObj
RetVar/IF
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
531
$1 $0 has formation ships
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
532
$0 give formation leadership to $1
RefObj
Var/Ship
-------------- END DEFINITION ---------------
PILOT
X2
533
$0 set pilot fightskill to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
PILOT
X2
534
$1 $0 get pilot fightskill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PLAYER
X2
535
$0 get player tracking aim
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
536
$1 $0 is $2 in firing range of turret $3
RefObj
RetVar/IF
Var/Ship/Station
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
537
$1 $0 find enemy in firing range of turret $2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
538
$0 set command: $1  target=$2 target2=$3 par1=$4 par2=$5
RefObj
Object Command
Value
Value
Value
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
539
$1 $0 turn turret $3 to target $2 : timeout=$4 ms
RefObj
@RetVar/IF
Value
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
540
$1 $0 move to ware object $2 for collecting: timeout=$3 ms
RefObj
@RetVar/IF
Value
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
541
$1 $0 catch ware object $2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
542
$1 $0 fire missile $3 on $2
RefObj
RetVar/IF
Var/Ware
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
543
$1 $0 get current missile
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
544
$1 $0 find best missile for target $2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X2
545
$0 best missile type for target $1
RetVar
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
546
$1 $0 launch $2 fight drones: protect me or attack target=$3
RefObj
RetVar/IF
Var/Number
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
547
$1 $0 is missile $2 ready to fire
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
548
$1 $0 should a missile be fired
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
549
$1 $0 get fire missile probability
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
550
$1 $0 get fire missile time difference in seconds
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
551
$0 set fire missile probability to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
552
$0 set fire missile time difference to $1 ms
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
553
$1 $0 fits laser $2 into turret $3
RefObj
RetVar/IF
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
554
$1 $0 get max. number of lasers in turret $2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
555
$1 $0 get laser type in turret $2 at slot $3
RefObj
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
556
$1 $0 get number of turrets
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X2
557
$0 get range of missile type $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
558
$1 $0 find nearest missile aiming to me
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
559
$1 $0 get formation follower ships
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
560
$1 $0 decouple ships
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
561
$1 $0 is decoupled ships leader
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
562
$1 $0 escort ship $2: timeout=$3 ms
RefObj
@RetVar/IF
Var/Ship
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
563
$1 $0 follow $2 with precision $3 m : timeout=$4 ms
RefObj
@RetVar/IF
Var/Ship
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
564
$1 $0 get current galaxy flight timestep in ms
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
565
$1 $0 defensive move: type=$2, intensity=$3, timeout=$4 ms, avoid object=$5
RefObj
@RetVar/IF
Var/Number
Var/Number
Var/Number
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
566
$1 $0 use jump drive: target=$2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
567
$1 $0 needed jump drive energy for jump to sector $2
RefObj
RetVar/IF
Var/Sector
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
568
$1 $0 check, select and fire missile on $2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
570
$1 $0 move to position continue: x=$2 y=$3 z=$4 with precision $5 m
RefObj
@RetVar/IF
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
571
$1 $0 can missile $2 be installed
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
PLAYER
X2
600
$1 $0 get money
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
601
$1 $0 buy $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
602
$1 $0 buy $2 units of $3 to a max. price of $4 Cr
RefObj
RetVar/IF
Var/Number
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
603
$1 $0 sell $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
604
$0 get volume of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
605
$0 get transport class of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
606
$0 find station: product $1 with best price:  max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
607
$0 find station: product $1 with min. jumps:  max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
608
$0 find station: resource $1 with best price: min.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
609
$0 find station: resource $1 with min. jumps: min.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
610
$1 $0 get max. ware transport class
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
611
$1 $0 get cargo bay size
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
612
$1 $0 get free volume of cargo bay
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
613
$1 $0 get volume of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
614
$1 $0 get true volume of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
615
$1 $0 get free volume of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
616
$1 $0 get total volume in cargo bay
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
617
$1 $0 can transport ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
618
$1 $0 get amount of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
619
$1 $0 get true amount of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
620
$1 $0 get free amount of ware $2 in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
621
$1 $0 get max amount of ware $2 that can be stored in cargo bay
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
622
$1 $0 get best store amount of ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
623
$1 $0 get max. store amount of ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
624
$1 $0 can buy ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
625
$1 $0 can sell ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
PLAYER
X2
626
$0 get player money
RetVar/IF
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
627
$1 $0 get price of ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
628
$1 $0 query average price of ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
629
$0 get average price of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
630
$0 get max price of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
631
$0 get min price of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
632
$0 get max price of ware $1 as secondary resource
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
633
$0 get min price of ware $1 as secondary resource
RetVar
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
634
$0 set price of ware $1 to $2 Cr
RefObj
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
635
$1 $0 uses ware $2 as primary resource
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
636
$1 $0 uses ware $2 as secondary resource
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
637
$1 $0 trades with ware $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
638
$1 $0 get product ware
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
639
$1 $0 load $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
640
$1 $0 unload $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
641
$1 $0 get number of resources
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
642
$1 $0 get number of primary resources
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
643
$1 $0 get number of secondary resources
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
644
$1 $0 get max trade jumps
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
645
$0 add default items to ship
RefObj
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
646
$1 $0 add $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X2
647
$1 $0 install $2 units of $3
RefObj
RetVar/IF
Var/Number
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
648
$0 switch laser in turret $2 gun $3 to $1
RefObj
Var/Ware
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
649
$0 set wanted ware count to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
650
$0 set wanted ware to $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
651
$1 $0 get wanted ware count
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
652
$1 $0 get wanted ware
RefObj
RetVar
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
653
$0 is ware $1 illegal in $2 sectors
RetVar/IF
Var/Ware
Var/Race
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
654
$1 $0 has illegal ware onboard: race=$2
RefObj
RetVar/IF
Var/Race
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
655
$0 get maintype of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
656
$0 get subtype of ware $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
657
$0 get ware from maintype $1 and subtype $2
RetVar
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
658
$0 get number of subtypes of maintype $1
RetVar
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
659
$1 $0 get maintype
RefObj
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
660
$1 $0 get subtype
RefObj
RetVar
-------------- END DEFINITION ---------------
PLAYER
X2
661
$0 add money: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X2
662
add money to player: $0
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
663
$0 find station sells: resource $1 with best price: max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
664
$0 find station sells: resource $1 with min. jumps: max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
665
$1 $0 only player own ships can trade with
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
700
$1 $0 get object class
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
701
$1 $0 get owner race
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
702
$1 $0 get environment
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
703
$1 $0 get sector
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
704
$1 $0 get homebase
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
705
$1 $0 is of class $2
RefObj
RetVar/IF
Var/Class
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
706
$1 $0 exists
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
707
$1 $0 get ware type code of object
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
708
$1 $0 get serial name of station
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
709
$0 find station in galaxy: startsector=$1 class or type=$2 race=$3 flags=$4 refobj=$5 serial=$6 max.jumps=$7
RetVar/IF
Var/Sector
Value
Var/Race
Var/Number
Value
Var/Stations Serial
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
710
$1 $0 is of type $2
RefObj
RetVar/IF
Var/Ship Type/Station Type
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
711
$0 get jumps from sector $1 to sector $2
RetVar/IF
Var/Sector
Var/Sector
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
712
$0 get next sector on route from sector $1 to sector $2
RetVar/IF
Var/Sector
Var/Sector
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
713
$0 set homebase to $1
RefObj
Var/Ship/Station
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
714
$1 $0 get current shield strength
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
715
$1 $0 get maximum shield strength
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
716
$1 $0 get current laser strength
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
717
$1 $0 get maximum laser strength
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
718
$1 $0 get max. shield type that can be installed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
719
$1 $0 get max. laser type that can be installed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
720
$1 $0 get number of shield bays
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
721
$1 $0 get number of laser bays
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
722
$1 $0 get most destructive missile type that can be installed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
723
$1 $0 get relation to object $2
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
724
$1 $0 get relation to race $2
RefObj
RetVar/IF
Var/Race
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
725
$1 $0 get notoriety to race $2
RefObj
RetVar/IF
Var/Race
-------------- END DEFINITION ---------------
PLAYER
X2
726
$0 get notoriety from race $1 to race $2
RetVar/IF
Var/Race
Var/Race
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
727
$1 $0 is $2 a enemy
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
728
$1 $0 is $2 a friend
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
729
$1 $0 is $2 neutral to me
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
730
$1 $0 get shield type in bay $2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
731
$1 $0 get laser type in bay $2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
732
$1 $0 has same environment as $2
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
733
$1 $0 is in same sector as $2
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
734
$1 $0 is landed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
735
$1 $0 is in a sector
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
736
$1 $0 get attacker
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
737
$0 set attacker to $1
RefObj
Var/Ship/Station
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
738
$0 get distance between $1 and $2
RetVar
Var/Ship/Station
Var/Ship/Station
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
739
$0 create ship: type=$1 owner=$2 addto=$3 x=$4 y=$5 z=$6
RetVar
Var/Ship Type
Var/Race
Value
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
740
$1 $0 get x position
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
741
$1 $0 get y position
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
742
$1 $0 get z position
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PLAYER
X2
743
$0 get player ship
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
744
$0 set relation against $1 to $2
RefObj
Value
Relation
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
745
$1 $0 is docked
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
746
$1 $0 is docking possible of $2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
747
$0 create station: type=$1 owner=$2 addto=$3 x=$4 y=$5 z=$6
RetVar
Var/Station Type
Var/Race
Var/Sector
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
748
$0 create gate: type=$1 addto=$2 gateid=$6 dstsecx=$7 dstsecy=$8 dstgateid=$9 x=$3 y=$4 z=$5
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
749
$0 create asteroid: type=$1 addto=$2 resource=$3 yield=$4 x=$5 y=$6 z=$7
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
STATION_ACTION
X2
750
$0 add product to factory or dock: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
STATION_ACTION
X2
751
$0 add primary resource to factory: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
STATION_ACTION
X2
752
$0 add second resource to factory: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
753
$0 create nebula: type=$1 addto=$2 x=$3 y=$4 z=$5
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
754
$0 create sun: subtype=$8 r=$1 g=$2 b=$3 addto=$4 x=$5 y=$6 z=$7
RetVar
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
755
$0 create planet: subtype=$1 addto=$2 x=$3 y=$4 z=$5
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
756
$0 create special: type=$1 addto=$2 x=$3 y=$4 z=$5
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
757
$0 find ship: sector=$1 class or type=$2 race=$3 flags=$4 refobj=$5 maxdist=$6 maxnum=$7 refpos=$8
RetVar/IF
Var/Sector
Value
Var/Race
Var/Number
Value
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
758
$0 find asteroid: sector=$1 resourcetype=$2 min.yield=$3 flags=$4 refobj=$5 maxdist=$6 maxnum=$7 refpos=$8
RetVar/IF
Var/Sector
Var/Number
Var/Number
Var/Number
Value
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
759
$1 $0 is disabled
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
760
$0 station trade and production tasks: on=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
761
$1 $0 is in active sector
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
762
$1 get ware type of SectorObject $0
Var/Number
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
763
$1 exists SectorObject $0
Var/Number
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
764
$1 get object from SectorObject $0
Var/Number
RetVar
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
765
$0 destruct: show no explosion=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
766
$0 find flying ware: sector=$1 maintype=$2 subtype=$3 flags=$4 refobj=$5 maxdist=$6 maxnum=$7, refpos=$8
RetVar/IF
Var/Sector
Var/Number
Var/Number
Var/Number
Value
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
767
$0 set position: x=$1 y=$2 z=$3
RefObj
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
768
$0 set rotation: alpha=$1 beta=$2 gamma=$3
RefObj
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
769
set position of sector object $0 : x=$1 y=$2 z=$3
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
770
set safe position of sector object $0 : x=$1 y=$2 z=$3
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
771
set rotation of sector object $0 : x=$1 y=$2 z=$3
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
772
$0 create sector object: maintype=$1 subtype=$2
RetVar
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
773
free sector object $0
Var/Number
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
774
kill sector object $0 : reason=$1 , killer sector object=$2
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
775
initialise sector object $0 in space $1
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
776
$0 create flying ware: maintype=$1 subtype=$2 count=$3 sector=$4 x=$5 y=$6 z=$7 selfdestruct=$8
RetVar
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
777
$1 $0 get rot alpha
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
778
$1 $0 get rot beta
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
779
$1 $0 get rot gamma
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
780
$1 $0 get size of object
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_ACTION
X2
781
$0 remove product from factory or dock: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
STATION_ACTION
X2
782
$0 remove primary resource from factory: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
STATION_ACTION
X2
783
$0 remove second resource from factory: $1
RefObj
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
784
$1 $0 get max upgrades for upgrade $2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
785
$1 $0 get max speed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
786
$1 $0 get max hull
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
787
$1 $0 get hull
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
788
$1 $0 get max upgraded speed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
789
$1 $0 get dock bay size
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
790
$1 $0 get number of landed ships
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PLAYER
X2
791
player loses police licence for race $0
Var/Race
-------------- END DEFINITION ---------------
PLAYER
X2
792
$0 add notoriety: race=$1 value=$2
Var/Race
Var/Race
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
793
$0 set ship disabled to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
794
$0 find station: sector=$1 class or type=$2 race=$3 flags=$4 refobj=$5 maxdist=$6 maxnum=$7 refpos=$8
RetVar/IF
Var/Sector
Value
Var/Race
Var/Number
Value
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
795
$1 $0 get position as array
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
796
$1 $0 get distance to: x=$2 y=$3 z=$4
RefObj
RetVar
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
797
$1 $0 get distance to: position array=$2
RefObj
RetVar
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
798
$0 get distance: position array1=$1  array2=$2
RetVar
Var/Array
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
799
$0 create debris: type=$1 addto=$2 resource=$3 yield=$4 x=$5 y=$6 z=$7
RetVar
Var/Number
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
800
$0 get sector from universe index: x=$1, y=$2
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
801
$0 get max sectors in x direction
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
802
$0 get max sectors in y direction
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
803
$1 $0 is sector known by the player
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
804
$1 $0 get universe x index
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
805
$1 $0 get universe y index
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
806
$1 $0 get north warp gate
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
807
$1 $0 get south warp gate
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
808
$1 $0 get east warp gate
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
809
$1 $0 get west warp gate
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
810
$0 find a random sector: startsector=$1, jumps=$2, owner=$3
RetVar
Var/Sector
Var/Number
Var/Race
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
811
$1 $0 get warp gate: gate id=$2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
900
$1 $0 get hull percent
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
901
$1 $0 get shield percent
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
902
$1 $0 get shield and hull percent
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
903
$1 $0 get max laser strength in turret $2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
904
$1 $0 is landing
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
905
$1 $0 is starting
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
906
$0 put into environment $1
RefObj
RefObj
-------------- END DEFINITION ---------------
ENGINE
X2
1000
al engine: register script=$0
Script Name
-------------- END DEFINITION ---------------
ENGINE
X2
1001
al engine: unregister script $0
Script Name
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1002
$1 $0 find station: product $2 with best price:  max.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1003
$1 $0 find station: product $2 with min. jumps:  max.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1004
$1 $0 find station: resource $2 with best price: min.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1005
$1 $0 find station: resource $2 with min. jumps: min.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1006
$1 $0 find station sells: resource $2 with best price: max.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1007
$1 $0 find station sells: resource $2 with min. jumps: max.price=$3, amount=$4, max.jumps=$5, startsector=$6, trader=$7, exclude array=$8
RefObj
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1008
$1 $0 get ship array from sector/ship/station
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1009
$1 $0 get station array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1010
$1 $0 get factory array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1011
$1 $0 get dock array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1012
$1 $0 get player owned ship array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1013
$1 $0 get player owned station array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1014
$1 $0 get asteroid array from sector
RefObj
RetVar
-------------- END DEFINITION ---------------
STATION_ACTION
X2
1015
$0 station send defend squad against ship $1
RefObj
Var/Ship/Station
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
1016
$0 interrupt task $2 with script $1 and prio $3: arg1=$4 arg2=$5 arg3=$6 arg4=$7
RefObj
Script Name
Var/Number
Var/Number
Value
Value
Value
Value
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
1017
$0 begin task $2 with script $1 and prio $3: arg1=$4 arg2=$5 arg3=$6 arg4=$7 arg5=$8
RefObj
Script Name
Var/Number
Var/Number
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1018
$1 $0 add big ship $2
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1019
$1 $0 has a free big ship dock
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1019
$1 $0 has a free ship dock port: ship subtype = $2
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1020
$1 $0 can be controlled by race logic
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1021
$0 set race logic control enabled to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1022
$1 $0 can execute StartAction
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1023
$0 set StartAction enabled to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X2
1024
al engine: set plugin $0 description to $1
Var/String
Var/String
-------------- END DEFINITION ---------------
ENGINE
X2
1025
al engine: set plugin $0 timer interval to $1 s
Var/String
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1026
$0 set as player wingman: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1027
$1 $0 is player wingman
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1028
$1 $0 get name
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1029
$0 set name to $1
RefObj
Var/String
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1030
$0 set owner race to $1
RefObj
Var/Race
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1031
$0 get script version
RetVar
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1032
$0 get script name
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1033
$1 $0 find ship: class or type=$2 race=$3 flags=$4 refobj=$5 maxnum=$6  with homebase=$7
RefObj
RetVar/IF
Value
Var/Race
Var/Number
Value
Var/Number
Value
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1034
$0is plot $1 state flag $2
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1035
$0 find station in galaxy: startsector=$1 class or type=$2 race=$3 flags=$4 refobj=$5 serial=$6 max.jumps=$7 num=$8
RetVar/IF
Var/Sector
Value
Var/Race
Var/Number
Value
Var/Stations Serial
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1036
$1 $0 get ID code
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PILOT
X2
1037
$1 $0 get pilot name
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PILOT
X2
1038
$0 set pilot name to $1
RefObj
Var/String
-------------- END DEFINITION ---------------
PILOT
X2
1039
$0 get random name: race=$1
RetVar
Var/Race
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1040
$0 set pilot speaker: voice=$1, face=$2, Pirate subrace=$3, Argon female=$4
RefObj
Value
Value
Value
Value
-------------- END DEFINITION ---------------
STATION_TRADE
X2
1041
$1 $0 get tradeable ware array from station
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1042
$0 speak text: page=$1 id=$2 priority=$3
RetVar/IF/START
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
STATION_PROPERTY
X2
1043
$0 set serial name of station to $1
RefObj
Var/Stations Serial
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1044
$0 get Kha'ak aggression level
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1045
set Kha'ak aggression level to $0
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X3R
1046
set player tracking aim to $0
RefObj
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1047
$0 set hull to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1048
$0 set current shield strength to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1049
$1 $0 get current max speed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MATHS
X3R
1050
$0 fixed sin $1
RetVar
Var/Number
-------------- END DEFINITION ---------------
MATHS
X3R
1051
$0 fixed cos $1
RetVar
Var/Number
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1052
$1 $0 get production cycle time: account for secondary resources=$2
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1053
$1 $0 get remaining production cycle time
RefObj
RetVar
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1054
$1 $0 get number of products per cycle
RefObj
RetVar
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1055
$1 $0 get number of resources per cycle for ware $2
RefObj
RetVar
Var/Ware
-------------- END DEFINITION ---------------
STATION_PROPERTY
X3R
1056
$1 $0 get production status: as percentage=$2
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1057
$1 $0 get gate destination: return sector=$2
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1058
$1 $0 get gate id
RefObj
RetVar
-------------- END DEFINITION ---------------
PLAYER
X3R
1059
$0 get fight rank
RetVar
-------------- END DEFINITION ---------------
PLAYER
X3R
1060
$0 get trade rank
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1061
$1 $0 is known
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1062
$0 set known status to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1063
$1 $0 is detectable
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1064
$1 $0 is hired
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1065
$1 $0 get formation
RefObj
RetVar
-------------- END DEFINITION ---------------
ENGINE
X3R
1066
$1 $0 serialise object
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1067
$1 $0 get owned ships: class/type=$2
RefObj
RetVar
Value
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1068
$1 get ship array: of race $0 class/type=$2
Var/Race
RetVar
Value
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1069
$1 get station array: of race $0 class/type=$2
Var/Race
RetVar
Value
-------------- END DEFINITION ---------------
PLAYER
X3R
1070
$0 get player name
RetVar
-------------- END DEFINITION ---------------
SHIP_TRADE
X3R
1071
$1 $0 get tradeable ware array from ship
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X3R
1072
$1 $0 is script $2 on stack of task=$3
RefObj
RetVar/IF
Script Name
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X3R
1073
$1 $0 is task $2 in use
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1074
$0 get next gate on route from $1 to $2
RetVar/IF
Var/Sector
Var/Sector
-------------- END DEFINITION ---------------
STRING
X3R
1075
$0 get length of string $1
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
STRING
X3R
1076
$0 find position of pattern $2 in $1
RetVar
Var/String
Var/String
-------------- END DEFINITION ---------------
STRING
X3R
1077
$0 get substring of $1 offset=$2 length=$3
RetVar
Var/String
Var/Number
Var/Number
-------------- END DEFINITION ---------------
STRING
X3R
1078
$0 string $1 to integer
RetVar
Var/String
-------------- END DEFINITION ---------------
STRING
X3R
1079
$0 substitute in string $1: pattern $2 with $3
RetVar
Var/String
Var/String
Var/String
-------------- END DEFINITION ---------------
STRING
X3R
1080
$0 format seconds=$1 to Zura time string
RetVar
Var/String
-------------- END DEFINITION ---------------
ARRAY
X3R
1081
$0 $1[$2][$3]
RetVar/IF
Var/Array
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X3R
1082
$0[$1][$2] = $3
Var/Array
Var/Number
Var/Number
Value
-------------- END DEFINITION ---------------
ARRAY
X3R
1083
$0 get index of $2 in array $1 offset=$3
RetVar
Var/Array
Value
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X3R
1084
register quest script $0 instance multiple=$1
Script Name
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X3R
1085
set quest state with message: quest=$0 state=$1 msg=$2
Var/Quest
Var/Number
Var/String
-------------- END DEFINITION ---------------
ENGINE
X3R
1086
set quest/event $0 timer to $1ms
Var/Quest
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X3R
1087
set quest $0 timeout to $1
Var/Quest
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X3R
1088
$0 add event listener: quest/event=$1 objevent=$2 script=$3
RefObj
Var/Quest
Var/Number
Script Name
-------------- END DEFINITION ---------------
ENGINE
X3R
1089
$0 remove event listener: quest/event=$1
RefObj
Var/Quest
-------------- END DEFINITION ---------------
ENGINE
X3R
1090
$0 display news article: page=$1 newsid=$2 occurrences=$3 maxoffertime=$4 maxtime=$5 placeholder:race1=$6 race2=$7 customarray=$8
RetVar/IF
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
ENGINE
X3R
1091
change event news availability: $0 race=$1 sector=$2 jumps=$3
Var/Number
Var/Race
Var/Sector
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X3R
1092
$0[$1] = $2[$3]
Var/Array
Var/Number
Var/Array
Var/Number
-------------- END DEFINITION ---------------
MATHS
X3R
1093
$0 square root of $1
RetVar
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1094
$1 $0 get current action
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1095
$1 $0 get array of missiles aiming to me
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1096
$0 disable ship rebuild
RefObj
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1097
$1 $0 turret $2 can use laser $3 
RefObj
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1098
$0 set pirate cover state to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1099
$1 $0 scan potential pirate $2 for illegal wares
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X3R
1100
$0 register hotkey $1 to call script $2
RetVar
Var/String
Script Name
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X3R
1101
unregister hotkey $0
Var/Number
-------------- END DEFINITION ---------------
MERCHANT
X3R
1110
add merchant $0 base=$1 wanted wares=$2 owned wares=$3 cash=$4 rank=$5
Var/String
RefObj
Var/Array
Var/Array
Var/Number
Var/Number
-------------- END DEFINITION ---------------
MERCHANT
X3R
1111
$1 $0 get merchants
RefObj
RetVar
-------------- END DEFINITION ---------------
MERCHANT
X3R
1112
remove merchant $0
Var/String
-------------- END DEFINITION ---------------
MERCHANT
X3R
1113
merchant $0 got ware $1: quantity=$2
Var/String
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
MERCHANT
X3R
1114
merchant $0 sold ware $1: quantity=$2
Var/String
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
MERCHANT
X3R
1115
reset merchant $0 expiry
Var/String
-------------- END DEFINITION ---------------
MERCHANT
X3R
1116
$0 get data for merchant $1: item number=$2 
RetVar
Var/String
Var/Number
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1120
$0 get random NPC
RetVar
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1121
$1 $0 get NPC personal ship
RefObj
RetVar
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1122
$0 NPC send voice message: id=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1123
$0 release NPC personal ship
RefObj
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1124
$0 release NPC
RefObj
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1125
$1 $0 NPC wants to bail
RefObj
RetVar
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1126
$1 $0 NPC is aggressive
RefObj
RetVar
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1127
$0 spawn NPC personal ship: rank=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1128
$0 spawn NPC fleet: rank=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
NON_PLAYER
X3R
1129
$1 $0 get NPC fleet
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
1130
$1 $0 attack run on target $2 : timeout=$3 ms speedlimit=$4
RefObj
@RetVar/IF
Value
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1131
$1 $0 get current speed
RefObj
RetVar
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1132
$1 get power generator of ship/station type $0
Var/Ware
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1133
$1 $0 get power generator 
RefObj
RetVar
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1134
$0 get range of laser $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1135
$0 get shield damage of laser $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1136
$0 get hull damage of laser $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1137
$0 get ammunition of laser $1
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1138
$0 get missile range of $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X3R
1139
$0 get missile max damage of $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X3R
1140
$0 get relvalue of $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
ENGINE
X3R
1141
register god event: script=$0 mask=$1
Script Name
Var/Number
-------------- END DEFINITION ---------------
OBJECT_TRADE
X3R
1142
$0 order ship in next shipyard: owner=$1 sector=$2 class=$3 optional: default shiptype for race:$4
RetVar
Var/Race
Var/Sector
Var/Class
Var/Race
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1143
$0 find nebula: sector=$1 type=$2 effect=$3 flags=$4 refobj=$5 maxdist=$6 maxnum=$7 refpos=$8
RetVar
Var/Sector
Var/Number
Var/Number
Var/Number
Var/Ship/Station
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1144
$1 $0 is hidden
RefObj
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1145
$1 $0 is target visible $2
RefObj
RetVar/IF
Var/Ship/Station
-------------- END DEFINITION ---------------
ENGINE
X3R
1146
abort god event: $0
Var/Quest
-------------- END DEFINITION ---------------
ENGINE
X3R
1147
finish god event: $0
Var/Quest
-------------- END DEFINITION ---------------
STATION_ACTION
X3R
1148
$0 factory production task: on=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1149
$1 $0 get scanner range
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1150
$0 select and switch lasers for target $1 in turret $2: scan for friends $3
RefObj
Var/Ship/Station
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1151
$0 trademaster: is $1 a trader
RetVar
Value
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1152
$0 get warearray for $1
RetVar
Value
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1153
$0 trademaster: add trader=$1 to dock as merchant
RefObj
Value
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1154
trademaster: remove trader=$0 from dock
Value
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1155
$0 trademaster: is trader=$1 a merchant
RetVar
Value
-------------- END DEFINITION ---------------
STATION_TRADE
X2
1156
station $0: lock ware $1 for race $2
Var/Station
Var/Ware
Var/Race
-------------- END DEFINITION ---------------
STATION_TRADE
X2
1157
station $0: unlock ware $1 for race $2
Var/Station
Var/Ware
Var/Race
-------------- END DEFINITION ---------------
STATION_TRADE
X2
1158
$0 station $1: is ware $2 for race $3 locked
RetVar
Var/Station
Var/Ware
Var/Race
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1159
trademaster order: trader=$0 delivery of amount=$1 successful
Value
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1160
trademaster order: trader=$0 delivery aborted
Value
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1161
$0 trademaster order: find and register order for $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1162
$1 $0 get homesector
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1163
$0 set homesector to $1
RefObj
Var/Sector
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1164
$1 $0 get products
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_TRADE
X2
1165
$1 $0 uses ware $2 as product
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X3R
1166
$1 $0 get upgrade price: cargo-speed-rot $2 units:$3
RefObj
RetVar
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X3R
1167
gosub $0:
Label Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X3R
1168
endsub
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1169
$0 find station: product $1 with best price depend on jumps:  max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1170
$0 find station: resource $1 with best price depend on jumps: min.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1171
$0 find station sells: resource $1 with best price depend on jumps: max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1172
$1 $0 lock ware: $2 on station: $3 for this
RefObj
RetVar/IF
Var/Ware
Var/Station
-------------- END DEFINITION ---------------
SHIP_TRADE
X3R
1173
$1 $0 get defined amount of ware $2 as ship hardware
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X3R
1174
$1 $0 set defined amount of ware $2 as ship hardware
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_TRADE
X3R
1175
$1 $0 get ship hardware as array
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1176
$0 find station: product $1 with best price random:  max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1177
$0 find station: resource $1 with best price random: min.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1178
$0 find station sells: resource $1 with best price random: max.price=$2, amount=$3, max.jumps=$4, startsector=$5, trader=$6, exclude array=$7
RetVar/IF
Var/Ware
Var/Number
Var/Number
Var/Number
Var/Sector
Var/Ship/Station
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1179
$1 $0 get asteroid yield
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1180
$1 $0 get job leader
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1181
$1 $0 get job idle rate
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1182
$1 $0 get flight time
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X3R
1183
$1 $0 get job jump range
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1184
$0 begin job
RefObj
-------------- END DEFINITION ---------------
FLOW_CONTROL
X3R
1185
START $0 delayed command $1 : arg1=$2, arg2=$3, arg3=$4, arg4=$5
RefObj
Object Command
Value
Value
Value
Value
-------------- END DEFINITION ---------------
SHIP_WING
X3R
1186
$0 connect wing command/signal $1 to script $2 with prio $3
RefObj
Object Command/Signal
Script Name
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1187
$1 $0 get true owner
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1188
$1 $0 wait idle rate minimum:$2 ms
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1189
$1 $0 fire laser of turret $2 ahead
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1190
$1 $0 turn turret $2 to pos $3 relativ:$4 timeout:$5
RefObj
@RetVar/IF
Var/Number
Var/Array
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1191
$0 reset flight time
RefObj
-------------- END DEFINITION ---------------
SHIP_WING
X3R
1192
$0 auto sync patrol sector with environment: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X3R
1193
$0 add to patrol group for sector: $1
RefObj
Var/Sector
-------------- END DEFINITION ---------------
SHIP_WING
X3R
1194
$0 remove from patrol group for sector: $1
RefObj
Var/Sector
-------------- END DEFINITION ---------------
SHIP_WING
X3R
1195
$0 remove all patrol group references
RefObj
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1196
$0 add lasers per value:$1 flags:$2
RefObj
Var/Number
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1197
$0 add shields per value:$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1198
$1 $0 is asteroid scanned
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1199
$0 set asteroid scanned to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X3R
1200
$0 set relations from notoriety: include player as target and race &gt; teladi as owner=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X3R
1201
$0 is a new script version available
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1202
$1 $0 get job id
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1203
$1 $0 get flying ware count
RefObj
RetVar
-------------- END DEFINITION ---------------
PILOT
X3R
1204
$1 $0 get pilot morale
RefObj
RetVar
-------------- END DEFINITION ---------------
PILOT
X3R
1205
$1 $0 get pilot aggression
RefObj
RetVar
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1206
$0 find a random sector: startsector=$1, jumps=$2, owner=$3, security level=$4
RetVar
Var/Sector
Var/Number
Var/Race
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1207
set notoriety between $0 and $1 to $2 points
Var/Race
Var/Race
Var/Number
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1208
$1 $0 get intermediates buyable
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1209
$0 set intermediates buyable to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1210
$1 $0 get intermediates sellable
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STATION_TRADE
X3R
1211
$0 set intermediates sellable to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X3R
1212
$0 find debris: sector=$1 resource=$2 min yield=$3 flags=$4 refobj=$5 num=$6 max distance=$7 refpos=$8
RetVar/IF
Var/Sector
Var/Ware
Var/Number
Var/Number
Value
Var/Number
Var/Number
Var/Array
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1213
$1 $0 get resource waretype of asteroid
RefObj
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1214
$1 $0 has collectible rocks
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
USER_INTERFACE
X3R
1215
$0 send incoming message: text=$1 temporary=$2
RefObj
Var/String
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X3R
1216
$1 $0 move to debris/asteroid $2 and turn turret $3 to target: timeout=$4
RefObj
RetVar/IF
Value
Var/Number
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X3R
1217
add blueprints to player HQ: type=$0
Var/Ship Type
-------------- END DEFINITION ---------------
PLAYER
X3R
1218
$0 player HQ has blueprints for: type=$1
RetVar/IF
Var/Ship Type
-------------- END DEFINITION ---------------
PLAYER
X3R
1219
remove blueprints from player HQ: type=$0
Var/Ship Type
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X3R
1220
$0 last load time
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1221
$0 ignore collisions: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
PILOT
X3R
1222
$0 set pilot morale: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
PILOT
X3R
1223
$0 set pilot aggression: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X3R
1224
$0 force position: x=$1 y=$2 z=$3
RefObj
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X3R
1230
$0 open custom menu: title=$1 description=$2 option array=$3
RetVar/IF
Var/String
Var/String
Var/Array
-------------- END DEFINITION ---------------
PASSENGER
X3R
1231
$1 $0 create passenger in ship: name=$2 race=$3 voice=$4 face=$5
RefObj
RetVar/IF
Var/String
Var/Race
Var/Number
Var/Number
-------------- END DEFINITION ---------------
PASSENGER
X3R
1233
$1 $0 move passenger to ship $2: set passenger as pilot=$3
RefObj
RetVar/IF
Var/Ship
Var/Boolean
-------------- END DEFINITION ---------------
PASSENGER
X3R
1234
$1 $0 get passenger array
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X3R
1235
$1 $0 enslave passenger
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X3R
1236
$1 $0 eject passenger
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X3R
1237
$1 $0 destroy passenger
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PILOT
X3R
1238
$1 $0 add pilot of ship $2 as passenger: disable ship=$3
RefObj
RetVar/IF
Var/Ship
Var/Boolean
-------------- END DEFINITION ---------------
PILOT
X3R
1245
$1 $0 pilot eject from ship
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PILOT
X3R
1246
$1 $0 move pilot to ship $2: disable=$3
RefObj
RetVar/IF
Var/Ship
Var/Boolean
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X3R
1250
$1 $0 get repair cost of ship $2
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
WARE_PROPERTY
X3R
1300
$0 get missile flags of $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
PLAYER
X2
1320
$0 player has police licence for race $1
RetVar/IF
Var/Race
-------------- END DEFINITION ---------------
PILOT
X2
1325
$1 $0 get pilot tradeskill
RefObj
RetVar
-------------- END DEFINITION ---------------
PILOT
X2
1326
$0 set pilot tradeskill to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
1327
$1 $0 fire missile $4 from turret $2 on $3
RefObj
RetVar/IF
Var/Number
Value
Var/Ware
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1328
$1 $0 find nearest enemy ship in range: class=$2
RefObj
RetVar/IF
Var/Class
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1329
$1 $0 get user input: type=$2, title=$3
RefObj
RetVar/IF
Script Reference Type
Var/String
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
1330
$1 $0 select best lasers for target $2 in turret $3: scan for friends $4
RefObj
RetVar/IF
Var/Ship/Station
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1331
$1 $0 is core sector
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1332
$0 set ship speed to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1333
$0 set laser energy to $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1334
$1 $0 find all sectors within $2 jumps: Only known sectors=$3
RefObj
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X2
1335
$0 move player to ship $1: Teleport=$2
RetVar/IF
Var/Ship
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1336
$0 find gate: flags=$1, refobj=$2, max dist=$3, refpos=$4
RetVar/IF
Var/Number
Value
Var/Number
Var/Array
-------------- END DEFINITION ---------------
STRING
X2
1337
$0 read text: page id=$1, from $2 to $3 to array, include empty=$4
RetVar/IF
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
STRING
X2
1338
$0 read text: page id=$1, id=$2 exists
RetVar/IF
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1339
$0 add secondary signal: signal=$1, script=$2, prio=$3, name=$4
RefObj
Object Signal
Script Name
Var/Number
Var/String
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1340
$0 remove secondary signal: signal=$1, name=$2
RefObj
Object Signal
Var/String
-------------- END DEFINITION ---------------
OBJECT_ACTION
X2
1341
$0 destroy object: killer=$1, show no explosion=$2
RefObj
Value
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1342
$0 get freight scanner range
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1343
$0 get transporter range
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1344
$0 get mineral scanner range
RetVar
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1345
$1 $0 is in freight scanning range: ship=$2
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1346
$1 $0 is in transporter range: ship=$2
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1347
$1 $0 is in mineral scanner range: asteroid=$2
RefObj
RetVar/IF
Var/Asteroid
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1348
$0 create a new flight wing: name=$1 race=$2
RetVar/IF
Var/String
Var/Race
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1349
$0 get maker race: shiptype=$1
RetVar
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1350
$1 $0 get maker race
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1351
$0 add to flight wing: wing=$1
RefObj
Var/Wing
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1352
$1 $0 get ware storage percentage: ware=$2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1353
$1 $0 is civilian ship
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1354
disband flight wing: wing=$0
Var/Wing
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1355
$0 find flight wing: name=$1 race=$2
RetVar/IF
Var/String
Var/Race
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1356
$0 get flight wing ship array: wing=$1
RetVar/IF
Var/Wing
-------------- END DEFINITION ---------------
SHIP_WING
X2
1357
$0 remove from flight wing
RefObj
-------------- END DEFINITION ---------------
SHIP_WING
X2
1358
remove ship from flight wing: wing=$0 ship=$1
Var/Wing
Var/Ship
-------------- END DEFINITION ---------------
SHIP_WING
X2
1359
add ship to flight wing: wing=$0 ship=$1
Var/Wing
Var/Ship
-------------- END DEFINITION ---------------
SHIP_WING
X2
1360
$0 get flight wing array
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1361
$0 get predefined wing: wing=$1
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1362
$1 $0 is autojump activated
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1363
$0 set autojump active: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1364
$1 $0 get autojump minimum jumps
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1365
$0 autojump minimum jumps= $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1366
$1 $0 is emergency jump activated
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1367
$0 set emergency jump active: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1368
$1 $0 get emergency jump minimum shield threshold
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1369
$0 autojump emergency jump shield threshold=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
1370
$0 jump out of existence
RefObj
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1371
$0 add default wares to station/dock
RefObj
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1372
$0 get ship type array: maker race=$1 class=$2
RetVar
Var/Race
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1373
$1 $0 get missile resupply: missile=$2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1374
$0 set missile resupply: missile=$1 amount=$2
RefObj
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
ARRAY
X2
1375
$0 sort array $1
RetVar
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1376
$1 $0 get jumpdrive fuel resupply
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1377
$1 $0 get ammo resupply: ammo=$2
RefObj
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1378
$0 set jumpdrive fuel resupply: amount=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1379
$0 set ammo resupply: ammo=$1 amount=$2
RefObj
Var/Ware
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1380
set script command upgrade: wing command=$0 upgrade=$1
Var/Wing Command
Var/Ware
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1381
set script command upgrade: wing command=$0 upgrade=$1 script=$2
Var/Wing Command
Var/Ware
Script Name
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1382
global script map for wings: key=$0 race=$1 script=$2 prio=$3
Var/Wing Command
Var/Race
Script Name
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X2
1383
$0 set wing command: $1
RefObj
Var/Wing Command
-------------- END DEFINITION ---------------
SHIP_WING
X2
1384
$0 set wing command: $1  target=$2 target2=$3
RefObj
Var/Wing Command
Value
Value
-------------- END DEFINITION ---------------
SHIP_WING
X2
1385
$1 $0 get flight wing
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1386
$1 $0 get wing natural formation
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1387
$0 set max trade jumps: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X2
1388
$0 get default launch time difference for missile type: $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
SHIP_WING
X2
1389
$0 set wing natural formation: formation=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X2
1390
$1 $0 is temporarily removed from wing
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1391
$0 temporarily remove from wing
RefObj
-------------- END DEFINITION ---------------
SHIP_WING
X2
1392
$0 return to wing
RefObj
-------------- END DEFINITION ---------------
SHIP_WING
X2
1393
$0 add wing additional ship command: id=$1 script=$2 pageid=$3 textid=$4
RefObj
Var/String
Script Name
Var/Number
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X2
1394
$0 remove wing additional ship command: id=$1
RefObj
Var/String
-------------- END DEFINITION ---------------
SHIP_WING
X2
1395
$1 $0 does wing additional ship command exists: id=$2
RefObj
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
SHIP_WING
X2
1396
$0 get wing command upgrade: command=$1
RetVar
Var/Wing Command
-------------- END DEFINITION ---------------
SHIP_WING
X2
1397
$1 $0 ship has wing command upgrade: command=$2
RefObj
RetVar/IF
Var/Wing Command
-------------- END DEFINITION ---------------
SHIP_WING
X2
1398
$0 add wing additional ship command: id=$1 script=$2 pageid=$3 textid=$4 checkscript=$5
RefObj
Var/String
Script Name
Var/Number
Var/Number
Script Name
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1399
$1 $0 get ship array for wing command upgrade: command=$2
RefObj
RetVar/IF
Var/Wing Command
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X2
1400
$0 get bullet speed of laser $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
SHIP_WING
X2
1401
add wing custom command: id=$0
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X2
1402
remove wing custom command: id=$0
Var/Number
-------------- END DEFINITION ---------------
SHIP_WING
X2
1403
$0 wing custom command exists: id=$1
RetVar
Var/Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
1404
START $0 wing command $1 : arg1=$2, arg2=$3, arg3=$4, arg4=$5
RefObj
Var/Wing Command
Value
Value
Value
Value
-------------- END DEFINITION ---------------
SHIP_WING
X2
1405
$1 $0 is in same wing as $2
RefObj
RetVar/IF
Var/Ship
-------------- END DEFINITION ---------------
ARRAY
X2
1406
$0 find $1 in array: $2
RetVar/IF
Value
Value
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1407
global secondary signal map: add signal=$0 race=$1 class=$2 script=$3 prio=$4 name=$5
Object Signal
Var/Race
Var/Class
Script Name
Var/Number
Var/String
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1408
global secondary signal map: remove signal=$0 race=$1 class=$2 name=$3
Object Signal
Var/Race
Var/Class
Var/String
-------------- END DEFINITION ---------------
SHIP_WING
X2
1409
$1 $0 get wing formation leaders
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X2
1410
$0 set passenger transport, destination=$1, payment=$2
RefObj
Var/Station
Var/Number
-------------- END DEFINITION ---------------
PASSENGER
X2
1411
$1 $0 is passenger to be transported
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X2
1412
$1 $0 get passenger transport destination
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
PASSENGER
X2
1413
$1 $0 get passenger transport payment
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1414
$1 $0 get all local variable keys, starting with=$2
RefObj
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
ARRAY
X2
1415
$0 create new array, arguments=$1, $2, $3, $4, $5
RetVar
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1416
$0 create custom menu array: heading=$1
RetVar
Var/String
-------------- END DEFINITION ---------------
ARRAY
X2
1417
$0 sort array: data=$1 sort values=$2
RetVar
Value
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1418
display subtitle text: text=$0 duration=$1 ms
Var/String
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1419
$0 train passenger to marine
RefObj
-------------- END DEFINITION ---------------
MARINE
X2
1420
$0 create marine from passenger: fighting=$1 hacking=$2 mechanical=$3 engineering=$4
RefObj
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1421
$0 set marine skill: fighting=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1422
$0 set marine skill: mechanical=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1423
$0 set marine skill: hacking=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1424
$0 set marine skill: engineering=$1
RefObj
Var/Number
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
1425
$1 $0 call named script: script=$2, $3, $4, $5, $6, $7
RefObj
RetVar/IF
Var/String
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
FLOW_CONTROL
X2
1426
$0 launch named script: task=$1 scriptname=$2 prio=$3, $4, $5, $6, $7, $8
RefObj
Var/Number
Var/String
Var/Number
Value
Value
Value
Value
Value
-------------- END DEFINITION ---------------
MARINE
X2
1427
$1 $0 get maximum number of marines
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1428
$0 is marine: passenger/astronaut=$1
RetVar/IF
Var/Passenger
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1429
$1 $0 can transport passenger: $2
RefObj
RetVar/IF
Var/Passenger
-------------- END DEFINITION ---------------
MARINE
X2
1430
$1 $0 send marines to board ship: $2 marines=$3
RefObj
RetVar/IF
Var/Ship
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1431
$1 $0 can launch marines
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1432
$1 $0 is ship boardable
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1433
$1 $0 get marines array
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1434
$1 $0 free space for marines
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1435
$1 $0 get temporarily removed ship array from wing
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1436
$0 get all global variable keys, starting with=$1
RetVar
Var/String
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1437
$1 $0 get number of decks on ship
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1438
$1 $0 get ship boarding defence level
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1439
$1 $0 get hacking security level
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1440
$1 $0 get number of marines can board
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1441
$1 $0 get number of marines attacking
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1442
$1 $0 add marine $2 to attack group on ship
RefObj
RetVar/IF
Value
-------------- END DEFINITION ---------------
ARRAY
X2
1443
$0 reverse array $1
RetVar/IF
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1444
$0 create custom menu array, info lines=$1, $2, $3, $4, $5
RetVar
Var/String
Var/String
Var/String
Var/String
Var/String
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1445
$0 create custom menu array
RetVar
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1446
add custom menu info line to array $0: text=$1
Value
Var/String
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1447
add custom menu item to array $0: text=$1 returnvalue=$2
Value
Var/String
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1448
add custom menu heading to array $0: title=$1
Value
Var/String
-------------- END DEFINITION ---------------
MARINE
X2
1449
$1 $0 get marine buy price
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1450
$1 $0 get local variables: regular expression=$2
RefObj
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1451
$0 get global variables: regular expression=$1
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
WEAPON_PROPERTY
X2
1452
$1 $0 get compatible laser array: turret=$2
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1453
$1 $0 realign gate: gatenum=$2 gate to link=$3 force=$4
RefObj
RetVar/IF
Value
Var/Warpgate
Var/Boolean
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1454
$1 $0 can buy ware $2 at station $3
RefObj
RetVar/IF
Var/Ware
Var/Station
-------------- END DEFINITION ---------------
OBJECT_TRADE
X2
1455
$1 $0 can buy ware $2 from race $3
RefObj
RetVar/IF
Var/Ware
Var/Race
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1456
$0 get notoriety required to buy ware: $1
RetVar
Var/Ware
-------------- END DEFINITION ---------------
MATHS
X2
1457
$0 get maximum, $1, $2, $3, $4, $5
RetVar
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1458
$0 change destination gate to $1
RefObj
Var/Warpgate
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1459
$0 get station array: product=$1 include empty=$2
RetVar
Var/Ware
Var/Boolean
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1460
$0 get station array: resource=$1 include empty=$2
RetVar
Var/Ware
Var/Boolean
-------------- END DEFINITION ---------------
UNIVERSE_PROPERTY
X2
1461
$0 set sector to core security $1
RefObj
Var/Boolean
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1462
$1 $0 get next available task: starting=$2
RefObj
RetVar
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1463
add ship custom command: id=$0
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1464
remove ship custom command: id=$0
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1465
$0 ship custom command exists: id=$1
RetVar
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1466
set ship command preload script: command=$0 script=$1
Object Command/Signal
Script Name
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1467
set wing command preload script: wing command=$0 script=$1
Var/Wing Command
Script Name
-------------- END DEFINITION ---------------
PLAYER
X2
1468
$0 get trade rank title: text=$1
RetVar
Var/Boolean
-------------- END DEFINITION ---------------
PLAYER
X2
1469
$0 get fight rank title: text=$1
RetVar
Var/Boolean
-------------- END DEFINITION ---------------
PLAYER
X2
1470
$0 get trade rank percentage
RetVar
-------------- END DEFINITION ---------------
PLAYER
X2
1471
$0 get fight rank percentage
RetVar
-------------- END DEFINITION ---------------
PLAYER
X2
1472
$1 $0 get notoriety title to race $2: text=$3
RefObj
RetVar
Var/Race
Var/Boolean
-------------- END DEFINITION ---------------
PLAYER
X2
1473
$1 $0 get notoriety percentage to race $2
RefObj
RetVar
Var/Race
-------------- END DEFINITION ---------------
STRING
X2
1474
$0 convert number $1 to string
RetVar
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1475
$1 $0 get ship variation
RefObj
RetVar
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1476
$0 get ship variation: subtype=$1
RetVar
Var/Number
-------------- END DEFINITION ---------------
STRING
X2
1477
$0 format time: $1
RetVar
Var/Number
-------------- END DEFINITION ---------------
STRING
X2
1478
$0 match regular expression: $1 to string $2
RetVar/IF
Var/String
Var/String
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
1479
$0 is equipment: ware=$1
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
WARE_PROPERTY
X2
1480
$0 is upgrade: ware=$1
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_ACTION
X2
1481
$1 $0 launch boarding pod at target: victim=$2 marines=$3
RefObj
RetVar/IF
Var/Ship
Value
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1482
$1 $0 is missile boat
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1483
$1 $0 can turret $2 fire missiles
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1484
$1 $0 is military outpost
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1485
$1 $0 get planet array
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1486
$1 $0 get debris count
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1487
set discovered status: type=$0 status=$1
Value
Var/Boolean
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1488
$0 has $1 been discovered
RetVar/IF
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1489
$0 open custom info menu: title=$1 description=$2 option array=$3 maxoptions=$4
RetVar/IF
Var/String
Var/String
Var/Array
Var/Number
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X2
1490
capture screen
-------------- END DEFINITION ---------------
SYSTEM_PROPERTY
X2
1491
set monitor mode and viewpoint: monitor=$0 cockpit=$1 mode=$2 alpha=$3 beta=$4 gamma=$5 range=$6
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
PLAYER
X2
1492
$0 get mission rank: name=$1
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
PLAYER
X2
1493
set mission rank: name=$0 rank=$1
Var/String
Var/Number
-------------- END DEFINITION ---------------
MARINE
X2
1494
$1 $0 get incoming marines
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1495
$0 stop incoming marines
RefObj
-------------- END DEFINITION ---------------
ARRAY
X2
1496
$1 $0 get object name array
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
STRING
X2
1497
$0 get text id: ware=$1
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1498
$1 $0 is invincible
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1499
$1 $0 get compatible missile array
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1500
$1 $0 get resupply fuel required
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
ARRAY
X2
1501
$0 arrays $1 and $2 are equal
RetVar/IF
Value
Value
-------------- END DEFINITION ---------------
SHIP_WING
X2
1502
$1 $0 get all formation followers
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1503
$1 $0 get highest formation leader
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1504
$1 $0 get all stationary objects: include asteroids=$2
RefObj
RetVar/IF
Var/Boolean
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1505
$1 $0 find nearest military outpost
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1506
$0 is inventory: ware=$1
RetVar/IF
Var/Ware
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1507
$1 $0 get boarding shield threshold
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1508
$1 $0 get maximum laser range: turret=$2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1509
$1 $0 get minimum laser range: turret=$2
RefObj
RetVar/IF
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1510
$0 speak array: $1 prio=$2
RetVar/IF/START
Value
Var/Number
-------------- END DEFINITION ---------------
SCRIPT_PROPERTY
X2
1511
$0 register hotkey $1 to call script name $2
RetVar
Var/String
Var/String
-------------- END DEFINITION ---------------
MARINE
X2
1512
$1 $0 get marine fighting skill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1513
$1 $0 get marine mechanical skill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1514
$1 $0 get marine hacking skill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1515
$1 $0 get marine engineering skill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
MARINE
X2
1516
$1 $0 get marine overall skill
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1517
$1 $0 get number of wing formation leaders
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_WING
X2
1518
$1 $0 get max number of ships per wing formation
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1519
$0 is player warping
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1520
$1 $0 get compatible missile array from cargobay
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
UNIVERSE_DATA
X2
1521
$1 $0 get buyable wares in sector. Include player factories: $2 Include shipyards: $3 Include docks: $4
RefObj
RetVar/IF
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1522
add section to custom menu: $0
Var/Array
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1523
$0 create text for custom menu, left=$1, right=$2
RetVar
Var/String
Var/String
-------------- END DEFINITION ---------------
STRING
X2
1524
$0 get string font length: $1
RetVar/IF
Var/String
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1525
$1 $0 get desired speed
RefObj
RetVar/IF
-------------- END DEFINITION ---------------
SHIP_PROPERTY
X2
1526
$0 set desired speed: $1
RefObj
Var/Number
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1527
add value selection to menu: $0, text=$1, value array=$2, default=$3, return id=$4
Var/Array
Var/String
Var/Array
Var/Number
Var/String
-------------- END DEFINITION ---------------
MARINE
X2
1528
$1 $0 move marine to board: $2, timeout=$3
RefObj
@RetVar/IF
Value
Value
-------------- END DEFINITION ---------------
OBJECT_PROPERTY
X2
1529
$0 get subtype integer of data [ $1 ]
RetVar
Value
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1530
$1 $0 get user input without sector: type=$2, title=$3
RefObj
RetVar/IF
Script Reference Type
Var/String
-------------- END DEFINITION ---------------
ENGINE
X2
1531
add encyclopedia custom article: News, id=$0, title page=$1, title id=$2, text page=$3, text id=$4, timeout=$5
Var/String
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X2
1532
add encyclopedia custom article: Information, id=$0, title page=$1, title id=$2, text page=$3, text id=$4, timeout=$5
Var/String
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X2
1533
add encyclopedia custom article: History, id=$0, title page=$1, title id=$2, text page=$3, text id=$4, timeout=$5
Var/String
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X2
1534
add encyclopedia custom article: Stories, id=$0, title page=$1, title id=$2, text page=$3, text id=$4, timeout=$5
Var/String
Var/Number
Var/Number
Var/Number
Var/Number
Var/Number
-------------- END DEFINITION ---------------
ENGINE
X2
1535
remove encyclopedia custom article: id=$0
Var/String
-------------- END DEFINITION ---------------
ENGINE
X2
1536
set encyclopedia custom article sectors: id=$0, sector array=$1
Var/String
Var/Array
-------------- END DEFINITION ---------------
USER_INTERFACE
X2
1537
$1 $0 get user input type=$2, title=$3, sector=$4
RefObj
RetVar/IF
Script Reference Type
Var/String
Var/Sector
-------------- END DEFINITION ---------------