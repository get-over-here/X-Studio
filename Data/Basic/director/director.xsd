<?xml version="1.0" encoding="ISO-8859-1" ?>
<?xml-stylesheet href="dirschema.xsl" type="text/xsl" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

  <!-- included schemas -->

  <xs:include schemaLocation="dirobjdb.xsd" />

	<!-- text simple types -->

  <xs:simpleType name="boolean">
    <xs:restriction base="xs:string">
      <xs:enumeration value="1">
        <xs:annotation>
          <xs:documentation>
            True
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="0">
        <xs:annotation>
          <xs:documentation>
            False
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="directorname">
		<xs:restriction base="xs:string">
			<xs:pattern value="([a-zA-Z0-9_ ])+" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="cuename">
		<xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="countername">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="valuename">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="questname">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="questionname">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sectorname">
		<xs:restriction base="xs:string">
			<xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="objectname">
		<xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="groupname">
		<xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="actorname">
		<xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="conversationname">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="missionrankname">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z0-9_{}.@ ])+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scriptname">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="text">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="expression">
    <xs:restriction base="xs:string">
      <xs:pattern value="([-])*([a-zA-Z0-9_{}@\*\/\+\-\:\.\,\(\)\| ])+([dhsm]|km|deg|°)*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CutsceneLinkKey">
    <xs:annotation>
      <xs:documentation>
        Any text string; must match a cutscene's Director key.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:simpleType name="csenvname">
    <xs:annotation>
      <xs:documentation>
        Any text string; must match a cutscene environment ID.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z0-9_]+" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cseventname">
    <xs:annotation>
      <xs:documentation>
        Any text string; should match timing event IDs in a cutscene.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z0-9_]+" />
    </xs:restriction>
  </xs:simpleType>

  <!-- enumeration simple types -->

  <xs:simpleType name="versionstatus">
    <xs:annotation>
      <xs:documentation>
        Version status
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="concept">
        <xs:annotation>
          <xs:documentation>
            Proof of concept only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="development">
        <xs:annotation>
          <xs:documentation>
            Under development
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="testing">
        <xs:annotation>
          <xs:documentation>
            Test version
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="candidate">
        <xs:annotation>
          <xs:documentation>
            Release candidate
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="release">
        <xs:annotation>
          <xs:documentation>
            Released
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="waiting">
        <xs:annotation>
          <xs:documentation>
            Waiting for other assets
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cuetype">
    <xs:annotation>
      <xs:documentation>
        Cue type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="utility">
        <xs:annotation>
          <xs:documentation>
            Utility library
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="objective">
        <xs:annotation>
          <xs:documentation>
            Objective library
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="briefing">
        <xs:annotation>
          <xs:documentation>
            Briefing library
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="L0">
        <xs:annotation>
          <xs:documentation>
            Level 0 (library)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="L1">
        <xs:annotation>
          <xs:documentation>
            Level 1 (library)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="L2">
        <xs:annotation>
          <xs:documentation>
            Level 2 (mission)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="L3">
        <xs:annotation>
          <xs:documentation>
            Level 3 (plot)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="todopriority">
    <xs:annotation>
      <xs:documentation>
        Priority of "todo" item
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="trivial">
        <xs:annotation>
          <xs:documentation>
            Trivial (nice to have)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="low">
        <xs:annotation>
          <xs:documentation>
            Low priority
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="medium">
        <xs:annotation>
          <xs:documentation>
            Medium priority
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="high">
        <xs:annotation>
          <xs:documentation>
            High priority
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="critical">
        <xs:annotation>
          <xs:documentation>
            Critical (game cannot ship without)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="paramtype">
    <xs:annotation>
      <xs:documentation>
        Parameter data type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="objectname">
        <xs:annotation>
          <xs:documentation>
            Object name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sectorname">
        <xs:annotation>
          <xs:documentation>
            Sector name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="actorname">
        <xs:annotation>
          <xs:documentation>
            Actor name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="groupname">
        <xs:annotation>
          <xs:documentation>
            Group name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="valuename">
        <xs:annotation>
          <xs:documentation>
            Value name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuename">
        <xs:annotation>
          <xs:documentation>
            Cue name
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="objectid">
        <xs:annotation>
          <xs:documentation>
            Object id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sectorid">
        <xs:annotation>
          <xs:documentation>
            Sector id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="actorid">
        <xs:annotation>
          <xs:documentation>
            Actor id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="number">
        <xs:annotation>
          <xs:documentation>
            Number value
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="chance">
        <xs:annotation>
          <xs:documentation>
            Chance value (percentage)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="boolean">
        <xs:annotation>
          <xs:documentation>
            Boolean value (0 or 1)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="text">
        <xs:annotation>
          <xs:documentation>
            Text value
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="returntype">
    <xs:annotation>
      <xs:documentation>
        Return value data type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="objectid">
        <xs:annotation>
          <xs:documentation>
            Object id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sectorid">
        <xs:annotation>
          <xs:documentation>
            Sector id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="actorid">
        <xs:annotation>
          <xs:documentation>
            Actor id
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="number">
        <xs:annotation>
          <xs:documentation>
            Number value
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="chance">
        <xs:annotation>
          <xs:documentation>
            Chance value (percentage)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="boolean">
        <xs:annotation>
          <xs:documentation>
            Boolean value (0 or 1)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="gamelookup">
    <xs:annotation>
      <xs:documentation>
        Game type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>
            All games (default if not supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="plot">
        <xs:annotation>
          <xs:documentation>
            Plot games only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="noplot">
        <xs:annotation>
          <xs:documentation>
            Non-plot games only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="custom">
        <xs:annotation>
          <xs:documentation>
            Custom games only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="instantiatelookup">
    <xs:annotation>
      <xs:documentation>
        Instantiation type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="none">
        <xs:annotation>
          <xs:documentation>
            No instantiation (default if not supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="static">
        <xs:annotation>
          <xs:documentation>
            Create instances from the static object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="instance">
        <xs:annotation>
          <xs:documentation>
            Created instance (internal use only, should not be used in a cue definition)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="checklookup">
    <xs:annotation>
      <xs:documentation>
        Check action type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="none">
        <xs:annotation>
          <xs:documentation>
            No action after check (default if not supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cancel">
        <xs:annotation>
          <xs:documentation>
            Cancel cue after first check
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="complete">
        <xs:annotation>
          <xs:documentation>
            Complete cue after first check
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="operationlookup">
    <xs:annotation>
      <xs:documentation>
        Operation to perform
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="set">
        <xs:annotation>
          <xs:documentation>
            Set value (default operation if not supplied, default action is to set to 1 if no random range supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="add">
        <xs:annotation>
          <xs:documentation>
            Add to value (default is to add 1 if no random range supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="subtract">
        <xs:annotation>
          <xs:documentation>
            Subtract from value (default is to subtract 1 if no random range supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="multiply">
        <xs:annotation>
          <xs:documentation>
            Multiply value (default is to do nothing if no random range supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="divide">
        <xs:annotation>
          <xs:documentation>
            Divide value (default is to do nothing if no random range supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="notorietyoperationlookup">
    <xs:annotation>
      <xs:documentation>
        Operation to perform
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="set">
        <xs:annotation>
          <xs:documentation>
            Set notoriety (default operation if not supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="add">
        <xs:annotation>
          <xs:documentation>
            Add to notoriety
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="subtract">
        <xs:annotation>
          <xs:documentation>
            Subtract from notoriety
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="profilelookup">
    <xs:annotation>
      <xs:documentation>
        Random number profile type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="flat">
        <xs:annotation>
          <xs:documentation>
            Flat (linear) distribution, default if no profile specified
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="increasing">
        <xs:annotation>
          <xs:documentation>
            Higher numbers are more likely
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="decreasing">
        <xs:annotation>
          <xs:documentation>
            Lower numbers are more likely
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="bell">
        <xs:annotation>
          <xs:documentation>
            Numbers in the middle of the range are more likely
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="inversebell">
        <xs:annotation>
          <xs:documentation>
            Higher and lower numbers are more likely than those in the middle
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="menulookup">
    <xs:annotation>
      <xs:documentation>
        Menu class id
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="dialog">
        <xs:annotation>
          <xs:documentation>
            Dialog (comms) menu
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="objectives">
        <xs:annotation>
          <xs:documentation>
            Objectives (my missions) menu
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="briefing">
        <xs:annotation>
          <xs:documentation>
            Briefing menu
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="messages">
        <xs:annotation>
          <xs:documentation>
            Message log menu
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="message">
        <xs:annotation>
          <xs:documentation>
            Message display
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sector">
        <xs:annotation>
          <xs:documentation>
            Sector map
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="galaxy">
        <xs:annotation>
          <xs:documentation>
            Galaxy map
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="objectivelookup">
    <xs:annotation>
      <xs:documentation>
        Objective type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="custom">
        <xs:annotation>
          <xs:documentation>
            Custom objective
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="deliver">
        <xs:annotation>
          <xs:documentation>
            Deliver ware
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="destroy">
        <xs:annotation>
          <xs:documentation>
            Destroy object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="dockat">
        <xs:annotation>
          <xs:documentation>
            Dock at object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="flyto">
        <xs:annotation>
          <xs:documentation>
            Fly to location or object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="follow">
        <xs:annotation>
          <xs:documentation>
            Follow object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="kill">
        <xs:annotation>
          <xs:documentation>
            Kill actor
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="talkto">
        <xs:annotation>
          <xs:documentation>
            Talk to actor
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="protect">
        <xs:annotation>
          <xs:documentation>
            Protect object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="find">
        <xs:annotation>
          <xs:documentation>
            Find object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="buy">
        <xs:annotation>
          <xs:documentation>
            Buy ware
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sell">
        <xs:annotation>
          <xs:documentation>
            Sell ware
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="build">
        <xs:annotation>
          <xs:documentation>
            Build object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="objectivestatuslookup">
    <xs:annotation>
      <xs:documentation>
        Objective status
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="complete">
        <xs:annotation>
          <xs:documentation>
            Objective complete
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="failed">
        <xs:annotation>
          <xs:documentation>
            Objective failed
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="aborted">
        <xs:annotation>
          <xs:documentation>
            Objective aborted
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="objectivestatuslookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object status
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="objectivestatuslookup expression" />
  </xs:simpleType>

  <xs:simpleType name="typelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="typelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="shiplookupexpression">
    <xs:annotation>
      <xs:documentation>
        Ship type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="shiplookup expression" />
  </xs:simpleType>

  <xs:simpleType name="stationlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Station type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="stationlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="asteroidlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Asteroid type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="asteroidlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="debrislookupexpression">
    <xs:annotation>
      <xs:documentation>
        Debris type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="debrislookup expression" />
  </xs:simpleType>

  <xs:simpleType name="wrecklookupexpression">
    <xs:annotation>
      <xs:documentation>
        Wreck type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="wrecklookup expression" />
  </xs:simpleType>

  <xs:simpleType name="cratelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Crate type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="cratelookup stationlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="findcratelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Crate type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="cratelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="missilelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Missile type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="missilelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="laserlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Laser type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="laserlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="gatelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Gate type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="gatelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="astronautlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Astronaut type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="astronautlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="spaceflylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Spacefly type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="spaceflylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="ufolookupexpression">
    <xs:annotation>
      <xs:documentation>
        Ufo type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="ufolookup expression" />
  </xs:simpleType>

  <xs:simpleType name="stationarylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Stationary type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="stationarylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="dronelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Drone type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="dronelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="resourcelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Resource type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="resourcelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="planetlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Planet type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="planetlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="sunlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Sun type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="sunlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="backgroundlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Background type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression" />
  </xs:simpleType>

  <xs:simpleType name="categorylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="categorylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="stationcategorylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="stationcategorylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="wreckcategorylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="wreckcategorylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="cratecategorylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Object category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="cratecategorylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="createobjectclasslookup">
    <xs:annotation>
      <xs:documentation>
        Object class (create)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="createshipclasslookup createstationclasslookup createstationaryclasslookup createdroneclasslookup otherclass expression" />
  </xs:simpleType>

  <xs:simpleType name="findobjectclasslookup">
    <xs:annotation>
      <xs:documentation>
        Object class (find)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="findshipclasslookup findstationclasslookup otherclass expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="stationary">
            <xs:annotation>
              <xs:documentation>
                Any stationary object (includes mines, lasertowers, beacons and satellites)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="drone">
            <xs:annotation>
              <xs:documentation>
                Any drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="object">
            <xs:annotation>
              <xs:documentation>
                Any object
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="createshipclasslookup">
    <xs:annotation>
      <xs:documentation>
        Ship class (create)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="m1">
            <xs:annotation>
              <xs:documentation>
                M1 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m2">
            <xs:annotation>
              <xs:documentation>
                M2 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m3">
            <xs:annotation>
              <xs:documentation>
                M3 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m4">
            <xs:annotation>
              <xs:documentation>
                M4 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m5">
            <xs:annotation>
              <xs:documentation>
                M5 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m6">
            <xs:annotation>
              <xs:documentation>
                M6 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m7">
            <xs:annotation>
              <xs:documentation>
                M7 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="m8">
            <xs:annotation>
              <xs:documentation>
                M8 class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="tl">
            <xs:annotation>
              <xs:documentation>
                TL class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="tm">
            <xs:annotation>
              <xs:documentation>
                TM class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ts">
            <xs:annotation>
              <xs:documentation>
                TS class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="tp">
            <xs:annotation>
              <xs:documentation>
                TP class ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="khaakcluster">
            <xs:annotation>
              <xs:documentation>
                Kha'ak cluster
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="gonership">
            <xs:annotation>
              <xs:documentation>
                Goner ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="findshipclasslookup">
    <xs:annotation>
      <xs:documentation>
        Ship class (find)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="createshipclasslookup">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="fighter">
            <xs:annotation>
              <xs:documentation>
                Any fighter ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="freighter">
            <xs:annotation>
              <xs:documentation>
                Any freighter ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="carrier">
            <xs:annotation>
              <xs:documentation>
                Any carrier ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="littleship">
            <xs:annotation>
              <xs:documentation>
                Any small ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="bigship">
            <xs:annotation>
              <xs:documentation>
                Any large ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="hugeship">
            <xs:annotation>
              <xs:documentation>
                Any huge ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ship">
            <xs:annotation>
              <xs:documentation>
                Any ship (includes stationary objects, astronauts, drones, UFOS and spaceflies)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="createstationclasslookup">
    <xs:annotation>
      <xs:documentation>
        Station class (create)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="factory">
            <xs:annotation>
              <xs:documentation>
                Factory
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shipyard">
            <xs:annotation>
              <xs:documentation>
                Shipyard
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="bigshipyard">
            <xs:annotation>
              <xs:documentation>
                Big shipyard
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="smallshipyard">
            <xs:annotation>
              <xs:documentation>
                Small shipyard
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="scrapyard">
            <xs:annotation>
              <xs:documentation>
                Scrapyard
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="complex">
            <xs:annotation>
              <xs:documentation>
                Factory complex
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="trade">
            <xs:annotation>
              <xs:documentation>
                Trading station
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="equipment">
            <xs:annotation>
              <xs:documentation>
                Equipment dock
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="piratebase">
            <xs:annotation>
              <xs:documentation>
                Pirate base
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="gonertemple">
            <xs:annotation>
              <xs:documentation>
                Goner temple
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="khaakbase">
            <xs:annotation>
              <xs:documentation>
                Kha'ak base
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="hq">
            <xs:annotation>
              <xs:documentation>
                Player HQ
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="findstationclasslookup">
    <xs:annotation>
      <xs:documentation>
        Station class (find)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="createstationclasslookup">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="dock">
            <xs:annotation>
              <xs:documentation>
                Any dock (includes trading stations, equipment docks, pirate bases, goner temple and kha'ak bases)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="station">
            <xs:annotation>
              <xs:documentation>
                Any station
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="createstationaryclasslookup">
    <xs:annotation>
      <xs:documentation>
        Stationary object class (create)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="lasertower">
            <xs:annotation>
              <xs:documentation>
                Lasertower
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="satellite">
            <xs:annotation>
              <xs:documentation>
                Satellite
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="advancedsatellite">
            <xs:annotation>
              <xs:documentation>
                Advanced satellite
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="mine">
            <xs:annotation>
              <xs:documentation>
                SQUASH mine
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ionmine">
            <xs:annotation>
              <xs:documentation>
                Ion mine
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="trackermine">
            <xs:annotation>
              <xs:documentation>
                Tracker mine
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="terranmine">
            <xs:annotation>
              <xs:documentation>
                Terran mine
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="beacon">
            <xs:annotation>
              <xs:documentation>
                Navigational beacon
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="jumpbeacon">
            <xs:annotation>
              <xs:documentation>
                Jump beacon
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="createdroneclasslookup">
    <xs:annotation>
      <xs:documentation>
        Drone class (create)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="fightdrone">
            <xs:annotation>
              <xs:documentation>
                Fighter drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="mk2fightdrone">
            <xs:annotation>
              <xs:documentation>
                Mk2 fighter drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="terranfightdrone">
            <xs:annotation>
              <xs:documentation>
                Terran fighter drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="freightdrone">
            <xs:annotation>
              <xs:documentation>
                Freight drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="otherclass">
    <xs:annotation>
      <xs:documentation>
        Other object class
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="asteroid">
        <xs:annotation>
          <xs:documentation>
            Asteroid
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="debris">
        <xs:annotation>
          <xs:documentation>
            Asteroid debris (rocks)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="wreck">
        <xs:annotation>
          <xs:documentation>
            Ship or station wreck
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="crate">
        <xs:annotation>
          <xs:documentation>
            Ware crate
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="gate">
        <xs:annotation>
          <xs:documentation>
            Gate
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="astronaut">
        <xs:annotation>
          <xs:documentation>
            Astronaut (space suit)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="spacefly">
        <xs:annotation>
          <xs:documentation>
            Spacefly
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ufo">
        <xs:annotation>
          <xs:documentation>
            UFO
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="special">
        <xs:annotation>
          <xs:documentation>
            Special object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="classlookup">
    <xs:annotation>
      <xs:documentation>
        Class
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="findobjectclasslookup" />
  </xs:simpleType>

  <xs:simpleType name="categorylookup">
    <xs:annotation>
      <xs:documentation>
        Category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="sun">
            <xs:annotation>
              <xs:documentation>
                Sun
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="planet">
            <xs:annotation>
              <xs:documentation>
                Planet
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="dock">
            <xs:annotation>
              <xs:documentation>
                Dock
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="factory">
            <xs:annotation>
              <xs:documentation>
                Factory
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ship">
            <xs:annotation>
              <xs:documentation>
                Ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="laser">
            <xs:annotation>
              <xs:documentation>
                Laser
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shield">
            <xs:annotation>
              <xs:documentation>
                Shield
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="missile">
            <xs:annotation>
              <xs:documentation>
                Missile
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="energy">
            <xs:annotation>
              <xs:documentation>
                Energy
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="natural">
            <xs:annotation>
              <xs:documentation>
                Natural
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="bio">
            <xs:annotation>
              <xs:documentation>
                Bio
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="food">
            <xs:annotation>
              <xs:documentation>
                Food
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="minerals">
            <xs:annotation>
              <xs:documentation>
                Minerals
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="tech">
            <xs:annotation>
              <xs:documentation>
                Tech
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="asteroid">
            <xs:annotation>
              <xs:documentation>
                Asteroid
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="gate">
            <xs:annotation>
              <xs:documentation>
                Gate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="special">
            <xs:annotation>
              <xs:documentation>
                Special
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="debris">
            <xs:annotation>
              <xs:documentation>
                Debris
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="dockwreck">
            <xs:annotation>
              <xs:documentation>
                Dock wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="factorywreck">
            <xs:annotation>
              <xs:documentation>
                Factory wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shipwreck">
            <xs:annotation>
              <xs:documentation>
                Ship wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="stationcategorylookup">
    <xs:annotation>
      <xs:documentation>
        Station category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="dock">
            <xs:annotation>
              <xs:documentation>
                Dock
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="factory">
            <xs:annotation>
              <xs:documentation>
                Factory
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="wreckcategorylookup">
    <xs:annotation>
      <xs:documentation>
        Wreck category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="dockwreck">
            <xs:annotation>
              <xs:documentation>
                Dock wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="factorywreck">
            <xs:annotation>
              <xs:documentation>
                Factory wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shipwreck">
            <xs:annotation>
              <xs:documentation>
                Ship wreck
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="cratecategorylookup">
    <xs:annotation>
      <xs:documentation>
        Crate category
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="dock">
            <xs:annotation>
              <xs:documentation>
                Dock
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="factory">
            <xs:annotation>
              <xs:documentation>
                Factory
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ship">
            <xs:annotation>
              <xs:documentation>
                Ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="laser">
            <xs:annotation>
              <xs:documentation>
                Laser
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shield">
            <xs:annotation>
              <xs:documentation>
                Shield
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="missile">
            <xs:annotation>
              <xs:documentation>
                Missile
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="energy">
            <xs:annotation>
              <xs:documentation>
                Energy
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="natural">
            <xs:annotation>
              <xs:documentation>
                Natural
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="bio">
            <xs:annotation>
              <xs:documentation>
                Bio
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="food">
            <xs:annotation>
              <xs:documentation>
                Food
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="minerals">
            <xs:annotation>
              <xs:documentation>
                Minerals
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="tech">
            <xs:annotation>
              <xs:documentation>
                Tech
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="racelookup">
    <xs:annotation>
      <xs:documentation>
        Race
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="none">
            <xs:annotation>
              <xs:documentation>
                No race
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="argon">
            <xs:annotation>
              <xs:documentation>
                Argon
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="boron">
            <xs:annotation>
              <xs:documentation>
                Boron
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="split">
            <xs:annotation>
              <xs:documentation>
                Split
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="paranid">
            <xs:annotation>
              <xs:documentation>
                Paranid
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="teladi">
            <xs:annotation>
              <xs:documentation>
                Teladi
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="xenon">
            <xs:annotation>
              <xs:documentation>
                Xenon
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="khaak">
            <xs:annotation>
              <xs:documentation>
                Kha'ak
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="pirate">
            <xs:annotation>
              <xs:documentation>
                Pirate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="goner">
            <xs:annotation>
              <xs:documentation>
                Goner
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="player">
            <xs:annotation>
              <xs:documentation>
                Player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="enemy">
            <xs:annotation>
              <xs:documentation>
                Generic enemy race
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="neutral">
            <xs:annotation>
              <xs:documentation>
                Generic neutral race
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="friend">
            <xs:annotation>
              <xs:documentation>
                Generic friend race
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="abandoned">
            <xs:annotation>
              <xs:documentation>
                Abandoned object
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="other1">
            <xs:annotation>
              <xs:documentation>
                Other race 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="other2">
            <xs:annotation>
              <xs:documentation>
                Other race 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="atf">
            <xs:annotation>
              <xs:documentation>
                ATF
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="terran">
            <xs:annotation>
              <xs:documentation>
                Terran
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="yaki">
            <xs:annotation>
              <xs:documentation>
                Yaki
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="racemasklookup">
    <xs:annotation>
      <xs:documentation>
        Race mask
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="racelookup">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="" />
          <xs:enumeration value="default">
            <xs:annotation>
              <xs:documentation>
                All default races (Argon/Boron/Paranid/Split/Teladi)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="pirategroup">
            <xs:annotation>
              <xs:documentation>
                All pirate groups (Pirate/Yaki)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="terrangroup">
            <xs:annotation>
              <xs:documentation>
                All terran groups (Terran/ATF)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="aggressive">
            <xs:annotation>
              <xs:documentation>
                All aggressive races (Xenon/Khaak)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="all">
            <xs:annotation>
              <xs:documentation>
                All NPC races
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="known">
            <xs:annotation>
              <xs:documentation>
                All NPC races known to player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="knowndefault">
            <xs:annotation>
              <xs:documentation>
                All default races (see default) known to player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="knownpirategroup">
            <xs:annotation>
              <xs:documentation>
                All pirate groups (see pirategroup) known to player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="knownterrangroup">
            <xs:annotation>
              <xs:documentation>
                All terran groups (see terrangroup) known to player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="knownaggressive">
            <xs:annotation>
              <xs:documentation>
                All aggressive races (see aggressive) known to player
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="cargoclasslookup">
    <xs:annotation>
      <xs:documentation>
        Cargo class
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="t">
        <xs:annotation>
          <xs:documentation>
            Tiny
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="s">
        <xs:annotation>
          <xs:documentation>
            Small
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="m">
        <xs:annotation>
          <xs:documentation>
            Medium
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="l">
        <xs:annotation>
          <xs:documentation>
            Large
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="xl">
        <xs:annotation>
          <xs:documentation>
            Extra large
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="st">
        <xs:annotation>
          <xs:documentation>
            Station
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="genderlookup">
    <xs:annotation>
      <xs:documentation>
        Gender
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="male">
        <xs:annotation>
          <xs:documentation>
            Male (default)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="female">
        <xs:annotation>
          <xs:documentation>
            Female (Argon only)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="lar">
        <xs:annotation>
          <xs:documentation>
            Lar (Boron only, not currently used)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="relationlookup">
    <xs:annotation>
      <xs:documentation>
        Relation
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="friend">
        <xs:annotation>
          <xs:documentation>
            Friend
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="enemy">
        <xs:annotation>
          <xs:documentation>
            Enemy
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="neutral">
        <xs:annotation>
          <xs:documentation>
            Neutral
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="notorietylookup">
    <xs:annotation>
      <xs:documentation>
        Notoriety
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="notop10">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 10
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop9">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 9
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop8">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 8
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop7">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 7
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop6">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 6
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop5">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop4">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop3">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop2">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="notop1">
            <xs:annotation>
              <xs:documentation>
                Positive notoriety 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noto0">
            <xs:annotation>
              <xs:documentation>
                Zero notoriety
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noton1">
            <xs:annotation>
              <xs:documentation>
                Negative notoriety 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noton2">
            <xs:annotation>
              <xs:documentation>
                Negative notoriety 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noton3">
            <xs:annotation>
              <xs:documentation>
                Negative notoriety 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noton4">
            <xs:annotation>
              <xs:documentation>
                Negative notoriety 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="noton5">
            <xs:annotation>
              <xs:documentation>
                Negative notoriety 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ally">
            <xs:annotation>
              <xs:documentation>
                Ally
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="hero">
            <xs:annotation>
              <xs:documentation>
                Hero
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="knight">
            <xs:annotation>
              <xs:documentation>
                knight
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="friend">
            <xs:annotation>
              <xs:documentation>
                Friend
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="neutral">
            <xs:annotation>
              <xs:documentation>
                Neutral
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="foe">
            <xs:annotation>
              <xs:documentation>
                Foe
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shunned">
            <xs:annotation>
              <xs:documentation>
                Shunned (enemy in main sectors)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="hunted">
            <xs:annotation>
              <xs:documentation>
                Hunted
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="enemy">
            <xs:annotation>
              <xs:documentation>
                Enemy
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="archenemy">
            <xs:annotation>
              <xs:documentation>
                Arch-enemy
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="nodock">
            <xs:annotation>
              <xs:documentation>
                No docking at shipyards and equipment docks
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="nostation">
            <xs:annotation>
              <xs:documentation>
                No docking at stations in core sectors
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="min">
            <xs:annotation>
              <xs:documentation>
                Minimum (fixed)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="max">
            <xs:annotation>
              <xs:documentation>
                Maximum (fixed)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="notorietylookupexpression">
    <xs:annotation>
      <xs:documentation>
        Notoriety
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="notorietylookup expression" />
  </xs:simpleType>

  <xs:simpleType name="ranklookup">
    <xs:annotation>
      <xs:documentation>
        Trade/fight rank
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="rank0">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 0
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank1">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank2">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank3">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank4">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank5">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank6">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 6
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank7">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 7
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank8">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 8
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank9">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 9
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank10">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 10
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank11">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 11
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank12">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 12
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank13">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 13
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank14">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 14
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank15">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 15
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank16">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 16
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank17">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 17
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank18">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 18
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank19">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 19
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank20">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 20
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank21">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 21
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank22">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 22
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank23">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 23
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank24">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 24
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank25">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 25
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank26">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 26
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank27">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 27
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank28">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 28
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank29">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 29
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="rank30">
            <xs:annotation>
              <xs:documentation>
                Trade/fight rank 30
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="ranklookupexpression">
    <xs:annotation>
      <xs:documentation>
        Trade/fight rank
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="ranklookup expression" />
  </xs:simpleType>

  <xs:simpleType name="gateidlookup">
    <xs:annotation>
      <xs:documentation>
        Gate type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="north">
            <xs:annotation>
              <xs:documentation>
                North gate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="south">
            <xs:annotation>
              <xs:documentation>
                South gate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="east">
            <xs:annotation>
              <xs:documentation>
                East gate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="west">
            <xs:annotation>
              <xs:documentation>
                West gate
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="up">
            <xs:annotation>
              <xs:documentation>
                Up gate (normally a special gate)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="down">
            <xs:annotation>
              <xs:documentation>
                Down gate (normally a special gate)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="locationlookup">
    <xs:annotation>
      <xs:documentation>
        Actor sub-location
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="pilot">
        <xs:annotation>
          <xs:documentation>
            Actor is ship pilot (default)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="crew">
        <xs:annotation>
          <xs:documentation>
            Actor is part of the ship's crew
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="passenger">
        <xs:annotation>
          <xs:documentation>
            Actor is passenger
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="loglookup">
    <xs:annotation>
      <xs:documentation>
        Message log type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="normal">
        <xs:annotation>
          <xs:documentation>
            Normal log entry
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="plot">
        <xs:annotation>
          <xs:documentation>
            Plot log entry
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fadelookup">
    <xs:annotation>
      <xs:documentation>
        Fade type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
			<xs:enumeration value="in">
        <xs:annotation>
          <xs:documentation>
            Fade in only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="out">
        <xs:annotation>
          <xs:documentation>
            Fade out only
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="both">
        <xs:annotation>
          <xs:documentation>
            Fade in and out
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="movielookup">
    <xs:annotation>
      <xs:documentation>
        Movie type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="fullscreen">
        <xs:annotation>
          <xs:documentation>
            Full screen movie
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="briefing">
        <xs:annotation>
          <xs:documentation>
            Briefing movie
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="rewardlookup">
    <xs:annotation>
      <xs:documentation>
        Reward/penalty type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
			<xs:enumeration value="money">
        <xs:annotation>
          <xs:documentation>
            Money reward/penalty
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="notoriety">
        <xs:annotation>
          <xs:documentation>
            Race notoriety reward/penalty
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="fightrank">
        <xs:annotation>
          <xs:documentation>
            Fight rank reward/penalty
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="traderank">
        <xs:annotation>
          <xs:documentation>
            Trade rank reward/penalty
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="levellookup">
    <xs:annotation>
      <xs:documentation>
        Difficulty level
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
			<xs:enumeration value="trivial">
        <xs:annotation>
          <xs:documentation>
            Trivial difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="veryeasy">
        <xs:annotation>
          <xs:documentation>
            Very easy difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="easy">
        <xs:annotation>
          <xs:documentation>
            Easy difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="average">
        <xs:annotation>
          <xs:documentation>
            Average difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="hard">
        <xs:annotation>
          <xs:documentation>
            Hard difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="veryhard">
        <xs:annotation>
          <xs:documentation>
            Very hard difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="impossible">
        <xs:annotation>
          <xs:documentation>
            Impossible difficulty level
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="levellookupexpression">
    <xs:annotation>
      <xs:documentation>
        Difficulty level
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="levellookup expression" />
  </xs:simpleType>

  <xs:simpleType name="shiploadoutlookup">
    <xs:annotation>
      <xs:documentation>
        Base loadout for the specified ship
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="none">
        <xs:annotation>
          <xs:documentation>
            No base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="minimum">
        <xs:annotation>
          <xs:documentation>
            Minimum base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="default">
        <xs:annotation>
          <xs:documentation>
            Default base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="maximum">
        <xs:annotation>
          <xs:documentation>
            Maximum base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="stationloadoutlookup">
    <xs:annotation>
      <xs:documentation>
        Base loadout for the specified station
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="none">
        <xs:annotation>
          <xs:documentation>
            No base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="default">
        <xs:annotation>
          <xs:documentation>
            Default base loadout
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="loadoutmasklookup">
    <xs:annotation>
      <xs:documentation>
        Base loadout mask for the specified object (multiple values may be separated by | symbols)
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>
            All loudout elements (default if not supplied)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="shields">
        <xs:annotation>
          <xs:documentation>
            Shields
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="lasers">
        <xs:annotation>
          <xs:documentation>
            Lasers
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="missiles">
        <xs:annotation>
          <xs:documentation>
            Missiles
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="equipment">
        <xs:annotation>
          <xs:documentation>
            Equipment
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="loadoutmasklookupexpression">
    <xs:annotation>
      <xs:documentation>
        Base loadout mask for the specified object (multiple values may be separated by | symbols)
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="loadoutmasklookup expression" />
  </xs:simpleType>

  <xs:simpleType name="commandlookup">
    <xs:annotation>
      <xs:documentation>
        Command
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
			<xs:enumeration value="none">
        <xs:annotation>
          <xs:documentation>
            No action
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="default">
        <xs:annotation>
          <xs:documentation>
            Default action for class
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="follow">
        <xs:annotation>
          <xs:documentation>
            Follow command object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="home">
        <xs:annotation>
          <xs:documentation>
            Return home
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="protect">
        <xs:annotation>
          <xs:documentation>
            Protect command object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="attack">
        <xs:annotation>
          <xs:documentation>
            Attack command object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="attacknearest">
        <xs:annotation>
          <xs:documentation>
            Attack nearest enemy to formation leader
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="killenemies">
        <xs:annotation>
          <xs:documentation>
            Kill all enemies
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="killenemiesrange">
        <xs:annotation>
          <xs:documentation>
            Kill all enemies in range
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="killenemiesland">
        <xs:annotation>
          <xs:documentation>
            Kill all enemies in range and land
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="attacktarget">
        <xs:annotation>
          <xs:documentation>
            Attack player ship target
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="dock">
        <xs:annotation>
          <xs:documentation>
            Dock at command object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="stay">
        <xs:annotation>
          <xs:documentation>
            Stay still
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="idle">
        <xs:annotation>
          <xs:documentation>
            Follow idle flight pattern
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="movesector">
        <xs:annotation>
          <xs:documentation>
            Move to sector
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
			<xs:enumeration value="moveposition">
        <xs:annotation>
          <xs:documentation>
            Move to position
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="movecontinue">
        <xs:annotation>
          <xs:documentation>
            Move to position and continue
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="retreat">
        <xs:annotation>
          <xs:documentation>
            Retreat to position
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="collectware">
        <xs:annotation>
          <xs:documentation>
            Collect ware crate
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="jumpsector">
        <xs:annotation>
          <xs:documentation>
            Jump to sector
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
	</xs:simpleType>

  <xs:simpleType name="formationlookup">
    <xs:annotation>
      <xs:documentation>
        Formation type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="default">
            <xs:annotation>
              <xs:documentation>
                Default formation for ship class
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="delta">
            <xs:annotation>
              <xs:documentation>
                Delta formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="line">
            <xs:annotation>
              <xs:documentation>
                Line formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="x">
            <xs:annotation>
              <xs:documentation>
                X formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="xdelta">
            <xs:annotation>
              <xs:documentation>
                X-Delta formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="pyramid">
            <xs:annotation>
              <xs:documentation>
                Pyramid formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="claw">
            <xs:annotation>
              <xs:documentation>
                Claw formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="shield">
            <xs:annotation>
              <xs:documentation>
                Shield formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="random">
            <xs:annotation>
              <xs:documentation>
                Random formation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="winglookup">
    <xs:annotation>
      <xs:documentation>
        Formation type
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="gold">
            <xs:annotation>
              <xs:documentation>
                Gold wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="red">
            <xs:annotation>
              <xs:documentation>
                Red wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="blue">
            <xs:annotation>
              <xs:documentation>
                Blue wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="green">
            <xs:annotation>
              <xs:documentation>
                Green wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="purple">
            <xs:annotation>
              <xs:documentation>
                Purple wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="white">
            <xs:annotation>
              <xs:documentation>
                White wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="silver">
            <xs:annotation>
              <xs:documentation>
                Silver wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="orange">
            <xs:annotation>
              <xs:documentation>
                Orange wing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="winglookupexpression">
    <xs:annotation>
      <xs:documentation>
        Wing
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="winglookup expression" />
  </xs:simpleType>

  <xs:simpleType name="facelookup">
    <xs:annotation>
      <xs:documentation>
        Face
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="101">
            <xs:annotation>
              <xs:documentation>
                Military Female
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="102">
            <xs:annotation>
              <xs:documentation>
                Military Male
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="103">
            <xs:annotation>
              <xs:documentation>
                Military Officer
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="104">
            <xs:annotation>
              <xs:documentation>
                Transporter Female 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="105">
            <xs:annotation>
              <xs:documentation>
                Transporter Female 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="106">
            <xs:annotation>
              <xs:documentation>
                Transporter Male 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="107">
            <xs:annotation>
              <xs:documentation>
                Normal 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="108">
            <xs:annotation>
              <xs:documentation>
                Normal 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="109">
            <xs:annotation>
              <xs:documentation>
                Normal Female Nia
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="117">
            <xs:annotation>
              <xs:documentation>
                Kyle Brennan
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="120">
            <xs:annotation>
              <xs:documentation>
                Elena
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="121">
            <xs:annotation>
              <xs:documentation>
                Saya
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="122">
            <xs:annotation>
              <xs:documentation>
                Transporter Male 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="126">
            <xs:annotation>
              <xs:documentation>
                Julian
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="131">
            <xs:annotation>
              <xs:documentation>
                Comp 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="142">
            <xs:annotation>
              <xs:documentation>
                MaleFemale NotNormal (?)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="158">
            <xs:annotation>
              <xs:documentation>
                Ban Danna
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="201">
            <xs:annotation>
              <xs:documentation>
                Boron 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="202">
            <xs:annotation>
              <xs:documentation>
                Boron 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="203">
            <xs:annotation>
              <xs:documentation>
                Boron 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="204">
            <xs:annotation>
              <xs:documentation>
                Boron 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="205">
            <xs:annotation>
              <xs:documentation>
                Boron 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="301">
            <xs:annotation>
              <xs:documentation>
                Split 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="302">
            <xs:annotation>
              <xs:documentation>
                Split 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="303">
            <xs:annotation>
              <xs:documentation>
                Split 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="304">
            <xs:annotation>
              <xs:documentation>
                Split 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="305">
            <xs:annotation>
              <xs:documentation>
                Split 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="401">
            <xs:annotation>
              <xs:documentation>
                Paranid 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="402">
            <xs:annotation>
              <xs:documentation>
                Paranid 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="403">
            <xs:annotation>
              <xs:documentation>
                Paranid 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="404">
            <xs:annotation>
              <xs:documentation>
                Paranid 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="405">
            <xs:annotation>
              <xs:documentation>
                Paranid 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="501">
            <xs:annotation>
              <xs:documentation>
                Teladi 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="502">
            <xs:annotation>
              <xs:documentation>
                Teladi 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="503">
            <xs:annotation>
              <xs:documentation>
                Teladi 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="504">
            <xs:annotation>
              <xs:documentation>
                Teladi 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="505">
            <xs:annotation>
              <xs:documentation>
                Teladi 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="811">
            <xs:annotation>
              <xs:documentation>
                Pirate Female
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="812">
            <xs:annotation>
              <xs:documentation>
                Pirate Male 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="813">
            <xs:annotation>
              <xs:documentation>
                Pirate Male 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="815">
            <xs:annotation>
              <xs:documentation>
                Don Tony Marani
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="816">
            <xs:annotation>
              <xs:documentation>
                Miria
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="821">
            <xs:annotation>
              <xs:documentation>
                Pirate Boron 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="822">
            <xs:annotation>
              <xs:documentation>
                Pirate Boron 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="831">
            <xs:annotation>
              <xs:documentation>
                Pirate Split 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="832">
            <xs:annotation>
              <xs:documentation>
                Pirate Split 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="841">
            <xs:annotation>
              <xs:documentation>
                Pirate Paranid 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="842">
            <xs:annotation>
              <xs:documentation>
                Pirate Paranid 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="851">
            <xs:annotation>
              <xs:documentation>
                Pirate Teladi 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="852">
            <xs:annotation>
              <xs:documentation>
                Pirate Teladi 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="901">
            <xs:annotation>
              <xs:documentation>
                Goner Priest 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="902">
            <xs:annotation>
              <xs:documentation>
                Goner Priest 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="910">
            <xs:annotation>
              <xs:documentation>
                Kyle
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="915">
            <xs:annotation>
              <xs:documentation>
                Beckit
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="916">
            <xs:annotation>
              <xs:documentation>
                Ion
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="917">
            <xs:annotation>
              <xs:documentation>
                Dogun
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="facelookupexpression">
    <xs:annotation>
      <xs:documentation>
        Face
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="facelookup expression" />
  </xs:simpleType>

  <xs:simpleType name="statisticlookup">
    <xs:annotation>
      <xs:documentation>
        Player statistic counter id
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="5030">
        <xs:annotation>
          <xs:documentation>
            Jumpgates passed
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5040">
        <xs:annotation>
          <xs:documentation>
            Jump energy used
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5050">
        <xs:annotation>
          <xs:documentation>
            Ships bought
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5060">
        <xs:annotation>
          <xs:documentation>
            Ships sold
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5070">
        <xs:annotation>
          <xs:documentation>
            Stations built
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5080">
        <xs:annotation>
          <xs:documentation>
            Pilots bailed
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5090">
        <xs:annotation>
          <xs:documentation>
            Ore collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5100">
        <xs:annotation>
          <xs:documentation>
            Silicon collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5110">
        <xs:annotation>
          <xs:documentation>
            Nividium collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5120">
        <xs:annotation>
          <xs:documentation>
            Spaceflies collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5140">
        <xs:annotation>
          <xs:documentation>
            Slaves collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5160">
        <xs:annotation>
          <xs:documentation>
            Missions accepted
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5170">
        <xs:annotation>
          <xs:documentation>
            Missions completed
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5220">
        <xs:annotation>
          <xs:documentation>
            Secret containers found
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5310">
        <xs:annotation>
          <xs:documentation>
            Ships claimed
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5320">
        <xs:annotation>
          <xs:documentation>
            Ice collected
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="5330">
        <xs:annotation>
          <xs:documentation>
            Smugglers caught
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="statisticlookupexpression">
    <xs:annotation>
      <xs:documentation>
        Player statistic counter id
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="statisticlookup expression" />
  </xs:simpleType>

  <xs:simpleType name="soundlookup">
    <xs:annotation>
      <xs:documentation>
        Sound
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="100">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="101">
            <xs:annotation>
              <xs:documentation>
                M6;Astronaut
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="102">
            <xs:annotation>
              <xs:documentation>
                M1;M2;TL
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="103">
            <xs:annotation>
              <xs:documentation>
                M3 (Argon;Boron)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="104">
            <xs:annotation>
              <xs:documentation>
                M4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="105">
            <xs:annotation>
              <xs:documentation>
                M5;Fighter drone
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="106">
            <xs:annotation>
              <xs:documentation>
                TS;TP
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="107">
            <xs:annotation>
              <xs:documentation>
                M3 (other races)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="108">
            <xs:annotation>
              <xs:documentation>
                Dock;Factory Complex
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="109">
            <xs:annotation>
              <xs:documentation>
                UFO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="110">
            <xs:annotation>
              <xs:documentation>
                Satellite;Khaak M0
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="111">
            <xs:annotation>
              <xs:documentation>
                Khaak bullet
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="112">
            <xs:annotation>
              <xs:documentation>
                Standard bullet;missiles
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="113">
            <xs:annotation>
              <xs:documentation>
                Flash bullet
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="114">
            <xs:annotation>
              <xs:documentation>
                Khaak ships
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="115">
            <xs:annotation>
              <xs:documentation>
                Shipyard
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="116">
            <xs:annotation>
              <xs:documentation>
                Factory: Tech
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="117">
            <xs:annotation>
              <xs:documentation>
                Factory: Food/Bio
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="118">
            <xs:annotation>
              <xs:documentation>
                Factory: Power plant/Mine
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="119">
            <xs:annotation>
              <xs:documentation>
                Goner Temple
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="120">
            <xs:annotation>
              <xs:documentation>
                Pirate base
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="121">
            <xs:annotation>
              <xs:documentation>
                Spaceflies
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="122">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="123">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="124">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="125">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="800">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="801">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="802">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="803">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="804">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="805">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="806">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="807">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="808">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="809">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="810">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="811">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="812">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="813">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="814">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="815">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="816">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="817">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="818">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="819">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="900">
            <xs:annotation>
              <xs:documentation>
                Missile explosion (hit): Small
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="901">
            <xs:annotation>
              <xs:documentation>
                Missile explosion (hit): Medium
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="902">
            <xs:annotation>
              <xs:documentation>
                Missile explosion (hit): Large
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="903">
            <xs:annotation>
              <xs:documentation>
                Collision: small vs small
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="904">
            <xs:annotation>
              <xs:documentation>
                Collision: medium/large
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="905">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="906">
            <xs:annotation>
              <xs:documentation>
                Laser hit: Mining
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="907">
            <xs:annotation>
              <xs:documentation>
                Laser hit: Small
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="908">
            <xs:annotation>
              <xs:documentation>
                Laser hit: Medium
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="909">
            <xs:annotation>
              <xs:documentation>
                Laser hit: Large
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="910">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="911">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="912">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Alpha IRE
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="913">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Beta IRE
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="914">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Gamma IRE;Mass Driver
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="915">
            <xs:annotation>
              <xs:documentation>
                Launch missile: small
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="916">
            <xs:annotation>
              <xs:documentation>
                Launch missile: medium
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="917">
            <xs:annotation>
              <xs:documentation>
                Launch missile: large
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="918">
            <xs:annotation>
              <xs:documentation>
                Explosion: small
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="919">
            <xs:annotation>
              <xs:documentation>
                Explosion: medium
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="920">
            <xs:annotation>
              <xs:documentation>
                Explosion: large
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="921">
            <xs:annotation>
              <xs:documentation>
                (unused) Schiff nähert sich der Atmosphäre. Steigerungsfähig (Lautstärke wird mit und mit aufgedreht). Bis das Schiff schließlich explodiert.	YES
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="922">
            <xs:annotation>
              <xs:documentation>
                (unused) Auf und wieder abschwellendes BRUMMEN nach einer gewaltigen Explosion	YES
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="923">
            <xs:annotation>
              <xs:documentation>
                Yellow alert
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="924">
            <xs:annotation>
              <xs:documentation>
                (unused) Alert
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="925">
            <xs:annotation>
              <xs:documentation>
                Red alert
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="926">
            <xs:annotation>
              <xs:documentation>
                (unused) Auswurf eines Objektes aus einem Schiff (Schott öffnet sich;DING fliegt raus etc.)	NO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="927">
            <xs:annotation>
              <xs:documentation>
                (unused) Mine in Reichweite;nähert sich (Näherungswarnung;wird von Computerstimme eingeleitet). Eventuell mit sich beschleunigendem loop Intervall.	NO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="928">
            <xs:annotation>
              <xs:documentation>
                (unused) Eigenes Schiff im "target lock" eines Gegners
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="929">
            <xs:annotation>
              <xs:documentation>
                (unused) Warnton einer Raumstation bevor ein Schiff startet
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="930">
            <xs:annotation>
              <xs:documentation>
                Comm crank 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="931">
            <xs:annotation>
              <xs:documentation>
                Comm crank 2 (beep)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="932">
            <xs:annotation>
              <xs:documentation>
                Comm crank 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="933">
            <xs:annotation>
              <xs:documentation>
                (unused) Crank fuer funkuebertragung lang
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="934">
            <xs:annotation>
              <xs:documentation>
                (unused) Eigenes Schiff beschleunigt mit mittlerem Triebwerk START	NO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="935">
            <xs:annotation>
              <xs:documentation>
                (unused) Eigenes Schiff beschleunigt mit mittlerem Triebwerk
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="936">
            <xs:annotation>
              <xs:documentation>
                (unused) Eigenes Schiff beschleunigt mit mittlerem Triebwerk STOP	NO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="937">
            <xs:annotation>
              <xs:documentation>
                (unused) Factory ambient 1
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="938">
            <xs:annotation>
              <xs:documentation>
                (unused) Factory ambient 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="939">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="940">
            <xs:annotation>
              <xs:documentation>
                (unused) Grollen loop nach hits und kollisionen ein / ausfadend
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="941">
            <xs:annotation>
              <xs:documentation>
                (unused) Steuerdüsen des eigenen Schiffs. Ertönen von rechts oder links uns unterschiedlich stark (d.h. laut) je nach stärke des Steuerimpulses. YES
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="942">
            <xs:annotation>
              <xs:documentation>
                (unused) Steuerdüsen des eigenen Schiffs. Ertönen von rechts oder links uns unterschiedlich stark (d.h. laut) je nach stärke des Steuerimpulses. STOP	NO
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="943">
            <xs:annotation>
              <xs:documentation>
                (unused) Großes Schott einer Raumstation wird geöffnet START
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="944">
            <xs:annotation>
              <xs:documentation>
                (unused) Großes Schott einer Raumstation wird geöffnet  (WAS LOOOPING!!)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="945">
            <xs:annotation>
              <xs:documentation>
                (unused) Großes Schott einer Raumstation wird geöffnet STOP
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="946">
            <xs:annotation>
              <xs:documentation>
                (unused) Umgebender Sound bei Flug durch Warp Tunnel	YES
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="947">
            <xs:annotation>
              <xs:documentation>
                (unused) EGOSOFT left
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="948">
            <xs:annotation>
              <xs:documentation>
                (unused) EGOSOFT right
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="949">
            <xs:annotation>
              <xs:documentation>
                (unused) Fac. ambient continued
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="950">
            <xs:annotation>
              <xs:documentation>
                (unused) Fac. ambient continued
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="951">
            <xs:annotation>
              <xs:documentation>
                (unused) Fac. ambient continued
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="952">
            <xs:annotation>
              <xs:documentation>
                (unused) Fac. ambient continued
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="953">
            <xs:annotation>
              <xs:documentation>
                Menu login
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="954">
            <xs:annotation>
              <xs:documentation>
                Menu logout
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="955">
            <xs:annotation>
              <xs:documentation>
                Menu success
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="956">
            <xs:annotation>
              <xs:documentation>
                Menu fail
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="957">
            <xs:annotation>
              <xs:documentation>
                Menu move selection
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="958">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Alpha PAC;Mining laser
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="959">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Beta/Gamma PAC
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="960">
            <xs:annotation>
              <xs:documentation>
                Launch laser: HEPT;PPC;Lasertower;Repair
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="961">
            <xs:annotation>
              <xs:documentation>
                (unused) The eagle has landed (26 sek)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="962">
            <xs:annotation>
              <xs:documentation>
                (unused) Shield on/off
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="963">
            <xs:annotation>
              <xs:documentation>
                Install missile
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="964">
            <xs:annotation>
              <xs:documentation>
                Cargo bay open
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="965">
            <xs:annotation>
              <xs:documentation>
                Warp tunnel thunder
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="966">
            <xs:annotation>
              <xs:documentation>
                Being scanned
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="967">
            <xs:annotation>
              <xs:documentation>
                (unused) Arm moving down;docking
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="968">
            <xs:annotation>
              <xs:documentation>
                Ecliptic projector on/off
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="969">
            <xs:annotation>
              <xs:documentation>
                Cargo bay closed
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="970">
            <xs:annotation>
              <xs:documentation>
                (unused) Arm moving up;undocking
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="971">
            <xs:annotation>
              <xs:documentation>
                (unused) Lightning
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="972">
            <xs:annotation>
              <xs:documentation>
                OK ping of tutorial rings
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="973">
            <xs:annotation>
              <xs:documentation>
                (unused) Rolling thunder LONG!
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="974">
            <xs:annotation>
              <xs:documentation>
                (unused) Elevator 15sek.
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="975">
            <xs:annotation>
              <xs:documentation>
                (unused) Ship boost fade in / loop 6-7s / fade out
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="976">
            <xs:annotation>
              <xs:documentation>
                (unused) Intro Rocket launch
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="977">
            <xs:annotation>
              <xs:documentation>
                (unused) Intro PADS dropped toward planet
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="978">
            <xs:annotation>
              <xs:documentation>
                (unused) Intro Gate destruction
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="979">
            <xs:annotation>
              <xs:documentation>
                Zoom goggles
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="980">
            <xs:annotation>
              <xs:documentation>
                SETA activated
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="981">
            <xs:annotation>
              <xs:documentation>
                SETA wakeup
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="982">
            <xs:annotation>
              <xs:documentation>
                SETA 10% click
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="983">
            <xs:annotation>
              <xs:documentation>
                Entering gate (currently not used)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="984">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="985">
            <xs:annotation>
              <xs:documentation>
                (unused) beep beep
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="986">
            <xs:annotation>
              <xs:documentation>
                (unused) beep
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="987">
            <xs:annotation>
              <xs:documentation>
                Zoom in
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="988">
            <xs:annotation>
              <xs:documentation>
                (unused) Menu special
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="989">
            <xs:annotation>
              <xs:documentation>
                Zoom out
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="990">
            <xs:annotation>
              <xs:documentation>
                (unused) shot
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="991">
            <xs:annotation>
              <xs:documentation>
                Beaming
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="992">
            <xs:annotation>
              <xs:documentation>
                Collision: Spacefly (splash)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="993">
            <xs:annotation>
              <xs:documentation>
                rolling demo Breath 1 intro
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="994">
            <xs:annotation>
              <xs:documentation>
                rolling demo Breath 1 intro
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="995">
            <xs:annotation>
              <xs:documentation>
                rolling demo ZOOM in 0.6s
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="996">
            <xs:annotation>
              <xs:documentation>
                rolling demo ZOOM out 1s
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="997">
            <xs:annotation>
              <xs:documentation>
                rolling demo  Door opening
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="998">
            <xs:annotation>
              <xs:documentation>
                rolling demo  WOOSH long
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="999">
            <xs:annotation>
              <xs:documentation>
                rolling demo  WOOSH short
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>

          <xs:enumeration value="1000">
            <xs:annotation>
              <xs:documentation>
                rolling demo Glass breaking
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1001">
            <xs:annotation>
              <xs:documentation>
                rolling demo CLONG metal
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1002">
            <xs:annotation>
              <xs:documentation>
                rolling demo METALL scrap
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1003">
            <xs:annotation>
              <xs:documentation>
                rolling demo City wind
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1004">
            <xs:annotation>
              <xs:documentation>
                rolling demo Underwater atmo
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1005">
            <xs:annotation>
              <xs:documentation>
                rolling demo TP Atmo (neonlight)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1006">
            <xs:annotation>
              <xs:documentation>
                DING DONG station announcement
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1007">
            <xs:annotation>
              <xs:documentation>
                (unused) DING DA DONG station announcement variation 2
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1008">
            <xs:annotation>
              <xs:documentation>
                Incoming message
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1009">
            <xs:annotation>
              <xs:documentation>
                Tracker activated
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1010">
            <xs:annotation>
              <xs:documentation>
                Install laser
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1011">
            <xs:annotation>
              <xs:documentation>
                Install shield
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1012">
            <xs:annotation>
              <xs:documentation>
                Install equipment
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1013">
            <xs:annotation>
              <xs:documentation>
                Boost activated
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1014">
            <xs:annotation>
              <xs:documentation>
                (unused)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1100">
            <xs:annotation>
              <xs:documentation>
                Promotion of ranking
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1101">
            <xs:annotation>
              <xs:documentation>
                fade to dark
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1102">
            <xs:annotation>
              <xs:documentation>
                fade to bright
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1103">
            <xs:annotation>
              <xs:documentation>
                monitor open/close
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1104">
            <xs:annotation>
              <xs:documentation>
                Hangar Doors Opening
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1105">
            <xs:annotation>
              <xs:documentation>
                jumpdrive leaving
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1106">
            <xs:annotation>
              <xs:documentation>
                jumpdrive entering
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1107">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1108">
            <xs:annotation>
              <xs:documentation>
                breathing in space
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1109">
            <xs:annotation>
              <xs:documentation>
                Door Exploding
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1110">
            <xs:annotation>
              <xs:documentation>
                Hangar Closing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1111">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1112">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1113">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1114">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1115">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1116">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1117">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1118">
            <xs:annotation>
              <xs:documentation>
                Enemy Lock
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1119">
            <xs:annotation>
              <xs:documentation>
                Target Switch; Stereo Activation
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1120">
            <xs:annotation>
              <xs:documentation>
                Target Enemy Switch
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1121">
            <xs:annotation>
              <xs:documentation>
                Bret working on Ship
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1122">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1123">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1124">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1125">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1126">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1127">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1128">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1129">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1130">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1131">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1132">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1133">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1134">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1135">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1136">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1137">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1138">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1139">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1140">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1141">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1142">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1143">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1144">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1145">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1146">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1147">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1148">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1149">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1150">
            <xs:annotation>
              <xs:documentation>
                Explosion #3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1151">
            <xs:annotation>
              <xs:documentation>
                Explosion #4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1152">
            <xs:annotation>
              <xs:documentation>
                Explosion #5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1153">
            <xs:annotation>
              <xs:documentation>
                Explosion #6
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1154">
            <xs:annotation>
              <xs:documentation>
                Explosion #7
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1155">
            <xs:annotation>
              <xs:documentation>
                Explosion #8
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1156">
            <xs:annotation>
              <xs:documentation>
                swoosh - Sign passing in Argon prime
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1157">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1158">
            <xs:annotation>
              <xs:documentation>
                ARHHHHH Saya dies
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1159">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1160">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1161">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1162">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1163">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1164">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1165">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1166">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1167">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1168">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1169">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1170">
            <xs:annotation>
              <xs:documentation>

              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1200">
            <xs:annotation>
              <xs:documentation>
                Hullhit 3
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1201">
            <xs:annotation>
              <xs:documentation>
                Hullhit 4
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1202">
            <xs:annotation>
              <xs:documentation>
                Hullhit 5
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1203">
            <xs:annotation>
              <xs:documentation>
                Missilewarning 1 (short)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1204">
            <xs:annotation>
              <xs:documentation>
                Missilewarning 2 (long)
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="1205">
            <xs:annotation>
              <xs:documentation>
                Launch laser: Alpha Pulsed Beam Emitter
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="datatypelookup">
    <xs:annotation>
      <xs:documentation>
        Data type
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="integer">
        <xs:annotation>
          <xs:documentation>
            Integer
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="string">
        <xs:annotation>
          <xs:documentation>
            String
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ship">
        <xs:annotation>
          <xs:documentation>
            Ship
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="station">
        <xs:annotation>
          <xs:documentation>
            Station
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="object">
        <xs:annotation>
          <xs:documentation>
            Object
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="typename">
        <xs:annotation>
          <xs:documentation>
            Object typename (from types file)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="array">
        <xs:annotation>
          <xs:documentation>
            Array
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="taskslookup">
    <xs:annotation>
      <xs:documentation>
        Task list
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="expression">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="" />
          <xs:enumeration value="trading">
            <xs:annotation>
              <xs:documentation>
                Trading
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="production">
            <xs:annotation>
              <xs:documentation>
                Production
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="reversing">
            <xs:annotation>
              <xs:documentation>
                Reverse engineering
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="repairing">
            <xs:annotation>
              <xs:documentation>
                Repairing
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="recycling">
            <xs:annotation>
              <xs:documentation>
                Recycling
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="instancevariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to cue instances
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{instance@&lt;cue&gt;}">
        <xs:annotation>
          <xs:documentation>
            Instance id of the specified cue
          </xs:documentation>
          <xs:appinfo>
            <example>
              {instance@this}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="versionvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to cue versions
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{version@&lt;cue&gt;}">
        <xs:annotation>
          <xs:documentation>
            Version number of the specified cue
          </xs:documentation>
          <xs:appinfo>
            <example>
              {version@this}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="indexvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to timer counters
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{index@&lt;cue&gt;}">
        <xs:annotation>
          <xs:documentation>
            Index number of the specified timer counter
          </xs:documentation>
          <xs:appinfo>
            <example>
              {index@this}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="countervariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to loop counters
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{counter@&lt;counter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified loop counter
          </xs:documentation>
          <xs:appinfo>
            <example>
              {counter@myloop}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="contextvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to context information
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{question.answer}">
        <xs:annotation>
          <xs:documentation>
            Value selected by the user in answer to the current question
          </xs:documentation>
          <xs:appinfo>
            <example>
              {question.answer}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{question.answer@&lt;question&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value selected by the user in answer to the specified question
          </xs:documentation>
          <xs:appinfo>
            <example>
              {question.answer@myquestion}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.object}">
        <xs:annotation>
          <xs:documentation>
            Object for which the current event was triggered
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.object}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.param}">
        <xs:annotation>
          <xs:documentation>
            Event parameter for the current event (not used by all events)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.param}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.param2}">
        <xs:annotation>
          <xs:documentation>
            Second event parameter for the current event (not used by all events)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.param2}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.object@&lt;event&gt;}">
        <xs:annotation>
          <xs:documentation>
            Object for which the current event of the specifed event type was triggered
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.object@any_object_attacked_by_player}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.param@&lt;event&gt;}">
        <xs:annotation>
          <xs:documentation>
            Event parameter for the current event of the specifed event type (not used by all events)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.param@any_object_attacked_by_player}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{event.param2@&lt;event&gt;}">
        <xs:annotation>
          <xs:documentation>
            Second event parameter for the current event of the specifed event type (not used by all events)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {event.param2@any_object_attacked_by_player}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="parametervariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to parameters passed to library cues
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{param@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (all parameters)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (all parameters)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.cue@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (cue parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.cue@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.cue.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (cue parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.cue.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.condition@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (condition parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.condition@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.condition.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (condition parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.condition.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.timing@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (timing parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.timing@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.timing.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (timing parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.timing.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.action@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (action parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.action@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.action.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (action parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.action.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.cues@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified parameter (sub-cue parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.cues@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{param.cues.exists@&lt;parameter&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified parameter exists, 0 if not (sub-cue parameters only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {param.cues.exists@targetship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sectorvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to named sectors
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{sector@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.exists@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified sector exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.exists@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.name@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.name@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.name.pageid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.name.pageid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.name.textid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.name.textid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.description@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Description of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.description@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.description.pageid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the description of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.description.pageid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.description.textid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the description of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.description.textid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.race@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.race@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.race.name@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of owner of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.race.name@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.race.name.pageid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the owner of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.race.name.pageid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.race.name.textid@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the owner of the specified sector (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.race.name.textid@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.race.image@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the owner of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.race.image@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.x@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.x@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.y@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.y@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.core@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if specified sector is defined as core, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.core@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.border@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if specified sector is defined as border, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.border@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.known@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified sector is known to the player, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.known@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.jumps@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of jumps the specified sector is away from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.jumps@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.route@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the next gate on the player's route to the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.route@targetsector}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.route.name@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the next gate on the player's route to the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.route.name@targetsector}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.quota.&lt;discipline&gt;@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 another mission slot is available for the specified type of mission in the specified sector, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.quota.TXXX@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.background@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Background id for the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.background@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.size@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Size of the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.size@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.size.m@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Size of the specified sector in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.size.m@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.size.km@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Size of the specified sector in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.size.km@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.population@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Population the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.population@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.music@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Music track id for the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.music@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{sector.image@&lt;sector&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {sector.image@argonprime}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="objectvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to named objects
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{object@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.exists@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.exists@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.description@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Description of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.description@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.description.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the description of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.description.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.description.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the description of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.description.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.money@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Money in the object's account (station account for player stations and ships with homebase, player account for other player ships)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.money@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.money.formatted@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Money in the object's account, formatted using digit separators
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.money.formatted@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.code@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            ID code of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.code@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.class@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.class@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.class.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class name of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.class.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.class.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the class of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.class.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.class.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the class of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.class.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.class.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the class of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.class.image@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.isclass.&lt;classlookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.isclass.ship@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the type name of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the type name of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.description@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Description of the type of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.description@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.description.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the description of the type of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.description.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.description.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the description of the type of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.description.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.maker@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the specified object type (should be the same as {object.maker@enemy})
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.maker@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.class@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default class id of the specified object type (normally the same as {object.class@enemy} but differences can be forced)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.class@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.class.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default class name of the specified object type (normally the same as {object.class.name@enemy} but differences can be forced)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.class.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.type.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified object type
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.type.image@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.race@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.race@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.race.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.race.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.race.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the owner of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.race.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.race.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the owner of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.race.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.race.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the owner of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.race.image@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maker@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maker@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maker.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maker.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maker.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the maker of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maker.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maker.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the maker of the specified object (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maker.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.x@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.x@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.x.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the specified object in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.x.m@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.x.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the specified object in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.x.km@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.y@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.y@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.y.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the specified object in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.y.m@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.y.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the specified object in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.y.km@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.z@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.z@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.z.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the specified object in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.z.m@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.position.z.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the specified object in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.position.z.km@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.alpha@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Alpha rotation of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.alpha@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.alpha.deg@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Alpha rotation of the specified object in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.alpha.deg@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.beta@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Beta rotation of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.beta@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.beta.deg@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Beta rotation of the specified object in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.beta.deg@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.gamma@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gamma rotation of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.gamma@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.rotation.gamma.deg@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gamma rotation of the specified object in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.rotation.gamma.deg@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.race@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.race@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.race.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.race.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.x@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.x@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.y@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.y@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.core@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the sector in which the specified object is located is defined as core, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.core@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.border@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the sector in which the specified object is located is defined as border, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.border@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.quota.&lt;discipline&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 another mission slot is available for the specified type of mission in the object's sector, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.quota.TXXX@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sector.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the sector in which the specified object is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sector.image@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.code@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            ID code of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.code@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.class@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.class@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.class.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class name of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.class.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.isclass.&lt;classlookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the object at which the specified object is docked is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.isclass.ship@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.type@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.type@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.type.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.type.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.race@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.race@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.race.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.race.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.maker@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.maker@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockobject.maker.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the object at which the specified object is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockobject.maker.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.known@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is known to the player, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.known@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.hidden@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is hidden in the sector map, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.hidden@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.visible@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is visible (in scanner range and not hidden) in the sector map, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.visible@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.active@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified mine is active, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.active@mine}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.invincible@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is invincible, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.invincible@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.boardable@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object can be boarded even if invincible, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.boardable@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.boarding@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if boarding of the specified object is currently in progress, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.boarding@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.capturable@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object can be captured, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.capturable@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.sellable@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object can be sold by the player, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.sellable@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.minable@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified asteroid can be mined, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.minable@asteroid}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.communicates@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object will communicate with the player, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.communicates@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.racelogic@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object is following standard race logic, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.racelogic@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.covered@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified object's race is covered (pirates only), 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.covered@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destination@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object or sector that is the destination of an object (ship or gate)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destination@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destination.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object or sector that is the destination of an object (ship or gate)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destination.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destinationdistance@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the object or sector that is its destination
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destinationdistance@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destinationdistance.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the object or sector that is its destination in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destinationdistance.m@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destinationdistance.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the object or sector that is its destination in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destinationdistance.km@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destinationjumps@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of jumps from the specified ship to the object or sector that is its destination
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destinationjumps@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.destinationroute@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the next gate on the route from the specified ship to the object or sector that is its destination
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.destinationroute@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.radialdistance@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the center of its sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.radialdistance@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.radialdistance.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the center of its sector in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.radialdistance.m@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.radialdistance.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance from the specified ship to the center of its sector in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.radialdistance.km@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.target@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object that is the attack target of a ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.target@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.target.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object that is the attack target of a ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.target.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.attacker@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object that is the last attacker of a ship or station
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.attacker@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.attacker.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object that is the last attacker of a ship or station
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.attacker.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.incomingmissile@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the nearest incoming missile to a ship or station
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.incomingmissile@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.incomingmissile.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the nearest incoming missile to a ship or station
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.incomingmissile.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.homebase@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object that is the homebase of a ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.homebase@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.homebase.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object at that is the homebase of a ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.homebase.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.race@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.race@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.gender@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gender id of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.gender@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.race.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.race.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.voice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Voice id of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.voice@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.face@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Face id of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.face@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.morale@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Morale level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.morale@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.aggression@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Aggression level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.aggression@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.fightskill@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Fight skill level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.fightskill@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.tradeskill@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Trade skill level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.tradeskill@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.pilot.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.pilot.image@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.formation@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation id of the formation being followed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.formation@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.formation.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation name of the formation being followed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.formation.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.wing@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Wing id of the wing of which the specified ship is a member
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.wing@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.wing.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {wing.name@{object.wing@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.wing.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.job@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Job id of the job being performed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.job@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.job.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Job name of the job being performed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.job.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.job.name.pageid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the job name of the job being performed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.job.name.pageid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.job.name.textid@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the job name of the job being performed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.job.name.textid@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.job.script@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Script used by job being performed by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.job.script@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.hull@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Current hull level of the specified object (as a percentage)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.hull@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxhull@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum hull level of the specified object (as an absolute value)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxhull@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.shields@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Current shield level of the specified object (as a percentage)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.shields@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxshields@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum shield level of the specified object (as an absolute value)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxshields@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.shieldcount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of shields currently installed on the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.shieldcount@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxshieldcount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of shields that can be installed on the specified object (same as current number for stations)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxshieldcount@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxshieldtype@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Ware type of maximum shield that can be installed on the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxshieldtype@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxshieldtype.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name associated with ware type of maximum shield that can be installed on the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxshieldtype.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.shieldrating@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Rating of current shields installed to maximum shields that can be installed on the specified object (as a percentage, ignores shield damage)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.shieldrating@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.strength@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Overall strength rating of the specified object (sum of hull, shields and lasers)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.strength@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.size@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Overall size of the specified object (will be approximate when not in player sector)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.size@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.size.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Overall size of the specified object in metres (will be approximate when not in player sector)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.size.m@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.size.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Overall size of the specified object in kilometres (will be approximate when not in player sector)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.size.km@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargoclass@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum cargo class that can be carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargoclass@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargoclass.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of maximum cargo class that can be carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargoclass.name@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargoclass.description@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Description of maximum cargo class that can be carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargoclass.description@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargospace@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo space free on the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargospace@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxcargospace@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total cargo space on the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxcargospace@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.speed@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Current speed of the specified object (max speed when not in current player sector)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.speed@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.basespeed@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Base maximum speed of the specified object without upgrades or hull damage
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.basespeed@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.maxspeed@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Current maximum speed of the specified object including upgrades and hull damage
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.maxspeed@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.factoryscale@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Scale factor of the specified factory object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.factoryscale@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.factoryscale.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of scale factor of the specified factory object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.factoryscale.name@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.distance@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance of the specified object from the player (even if in another sector)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.distance@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.distance.m@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance of the specified object from the player (even if in another sector) in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.distance.m@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.distance.km@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Distance of the specified object from the player (even if in another sector) in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.distance.km@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.jumps@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of jumps the specified object is away from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.jumps@enemy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.route@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the next gate on the player's route to the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.route@targetobject}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.route.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the next gate on the player's route to the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.route.name@targetobject}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.resource@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Ware type of resource of the specified asteroid or debris
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.resource@asteroid}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.resource.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name associated with ware type of resource of the specified asteroid or debris
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.resource.name@asteroid}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.yield@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Yield of the specified asteroid or debris
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.yield@asteroid}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.scanned@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified asteroid or debris has been scanned, or a ship's cargo is visible, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.scanned@asteroid}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.gate@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gate id associated with the specified gate
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.gate@northgate}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.price@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default sale price of object (30% of actual value including equipment, plus minimum value of cargo)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.price@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.price.&lt;racelookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default sale price of object if sold to the specified race (depends on notoriety)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.price.argon@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.price.dockobject@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Actual sale price of object at the station it's current docked at
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.price.dockobject@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.repairprice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default repair price of object (double hull damage percentage as percentage of ship value)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.repairprice@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.repairprice.&lt;racelookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default repair price of object if repaired by the specified race (depends on notoriety)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.repairprice.argon@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.repairprice.dockobject@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Actual repair price of object at the station it's current docked at
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.repairprice.dockobject@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of different cargo types carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.count@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.select@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting an item of cargo carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.select@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.random@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of a random cargo type carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.random@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.value@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total average value of cargo carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.value@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.minvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total minimum value of cargo carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.minvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.maxvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total maximum value of cargo carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.maxvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.select@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting an item of cargo carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.select@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the first cargo type carried by the specified object (order can change if cargo is added/removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of units of the first cargo type carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.count@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.maxcount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of units of the first cargo type that could be carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.maxcount@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.spacecount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Remaining space for additional units of the first cargo type that could be carried by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.spacecount@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.percent@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Units of the first cargo type carried by the specified object as a percentage of the maximum number.
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.percent@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.name@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.name@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.cargoclass@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.cargoclass@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.cargoclass@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.cargospace@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.cargospace@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.cargospace@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.price@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.price@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.price@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.minprice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.minprice@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.minprice@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.maxprice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.maxprice@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.maxprice@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.value@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.cargo.1.price@tradeship}*{object.cargo.1.count@tradeship}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.value@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.minvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.cargo.1.minprice@tradeship}*{object.cargo.1.count@tradeship}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.minvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.maxvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.cargo.1.maxprice@tradeship}*{object.cargo.1.count@tradeship}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.maxvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.minnotoriety@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.minnotoriety@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.minnotoriety@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;num&gt;.illegal.&lt;racelookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.illegal.argon@{object.cargo.1@tradeship}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.1.illegal.argon@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;type&gt;.exists@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified cargo type exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.SS_WARE_ENERGY.exists@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.cargo.&lt;type&gt;.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of units of the specified cargo type carried by the specified object (other variables as for numbered cargo)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.cargo.SS_WARE_ENERGY.count@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.equipment.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of different equipment types carried by the specified object (other variables as for cargo)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.equipment.count@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of different products produced by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.count@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.select@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a product produced by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.select@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.random@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of a random product produced by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.random@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.value@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total average value of products stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.value@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.minvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total minimum value of products stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.minvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.maxvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Total maximum value of products stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.maxvalue@tradeship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the first product produced by the specified object (order can change if products are added/removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of units of the first product currently stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.count@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.maxcount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of units of the first product that can be stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.maxcount@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.spacecount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Remaining space for additional units of the first product that can be stored by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.spacecount@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.name@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.name@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.cargoclass@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.cargoclass@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.cargoclass@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.cargospace@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.cargospace@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.cargospace@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.price@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Current price of the first product at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.price@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.minprice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.minprice@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.minprice@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.maxprice@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.maxprice@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.maxprice@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.image@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.image@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.image@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.value@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.products.1.price@factory}*{object.products.1.count@factory}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.value@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.minvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.products.1.minprice@factory}*{object.products.1.count@factory}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.minvalue@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.maxvalue@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {object.products.1.maxprice@factory}*{object.products.1.count@factory}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.maxvalue@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.minnotoriety@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.minnotoriety@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.minnotoriety@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;num&gt;.illegal.&lt;racelookup&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {lookup.type.illegal.argon@{object.products.1@factory}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.1.illegal.argon@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;type&gt;.exists@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified product type exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.SS_WARE_ENERGY.exists@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.products.&lt;type&gt;.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of units of the specified product currently stored by the specified object (other variables as for numbered products)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.products.SS_WARE_ENERGY.count@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.resources.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of different primary resources used by the specified object (other variables as for products)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.resources.count@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.secondaryresources.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of different secondary resources used by the specified object (other variables as for products)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.secondaryresources.count@factory}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.maxcount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of ships that can dock at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.maxcount@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.spacecount@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Remaining space for additional ships that can dock at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.spacecount@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of ships docked at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.count@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.select@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a ship docked at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.select@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.random@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random ship docked at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.random@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.random.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of a random ship docked at the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.random.name@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.&lt;num&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first ship docked the specified object (order can change if ships dock/undock)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.1@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.dockedships.&lt;num&gt;.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the first ship docked at the specified object (order can change if ships dock/undock)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.dockedships.1.name@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.count@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of ships owned by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.count@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.select@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a ship owned by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.select@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.random@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random ship owned by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.random@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.random.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of a random ship owned by the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.random.name@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.&lt;num&gt;@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first ship owned by the specified object (order can change if ships dock/undock)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.1@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{object.ownedships.&lt;num&gt;.name@&lt;object&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the first ship owned by the specified object (order can change if ships dock/undock)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {object.ownedships.1.name@station}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="groupvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to groups of named objects
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{group.object.count@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of objects in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.object.count@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.object.select@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting an object from a group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.object.select@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.object.random@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random member of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.object.random@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.object.1@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first member of the specified group (order can change if members are added/removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.object.1@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.code@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            ID code of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.code@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.class@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.class@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.class.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class name of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.class.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.isclass.&lt;classlookup&gt;@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the leader of the specified group is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.isclass.ship@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.type@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.type@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.type.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.type.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.race@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.race@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.race.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.race.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.maker@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.maker@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.maker.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.maker.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.leader.pilot@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the pilot of the leader of the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.leader.pilot@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.fastest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the fastest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.fastest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.fastest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the fastest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.fastest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.slowest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the slowest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.slowest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.slowest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the slowest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.slowest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.strongest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the strongest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.strongest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.strongest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the strongest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.strongest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.weakest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the weakest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.weakest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.weakest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the weakest object in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.weakest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.furthest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the furthest object in the specified group from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.furthest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.furthest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the furthest object in the specified group from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.furthest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.nearest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the nearest object in the specified group to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.nearest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.nearest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the nearest object in the specified group to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.nearest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.largest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the largest object in the specified group from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.largest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.largest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the largest object in the specified group from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.largest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.smallest@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the smallest object in the specified group to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.smallest@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.smallest.name@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the smallest object in the specified group to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.smallest.name@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.distance@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two objects in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.distance@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.distance.m@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two objects in the specified group in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.distance.m@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.distance.km@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two objects in the specified group in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.distance.km@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{group.jumps@&lt;group&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of jumps between any two objects in the specified group
          </xs:documentation>
          <xs:appinfo>
            <example>
              {group.jumps@enemyfleet}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="actorvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to named actors
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{actor@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.exists@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified actor exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.exists@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.race@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.race@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.race.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.race.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.gender@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gender id of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.gender@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.voice@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Voice id of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.voice@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.face@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Face id of the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.face@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.morale@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Morale level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.morale@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.aggression@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Aggression level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.aggression@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.fightskill@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Fight skill level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.fightskill@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.tradeskill@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Trade skill level of the pilot of the specified object
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.tradeskill@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.invincible@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified actor is invincible, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.invincible@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.image@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.image@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.code@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            ID code of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.code@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.class@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.class@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.class.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class name of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.class.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.isclass.&lt;classlookup&gt;@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the ship containing the specified actor is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.isclass.ship@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.type@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.type@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.type.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.type.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.race@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.race@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.race.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.race.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.maker@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.maker@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.ship.maker.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the ship containing the specified actor
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.ship.maker.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.station@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the station containing the specified actor (equivalent to actor.ship, provided for clarity)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.station@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.station@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.race@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.race@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.race.name@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.race.name@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.x@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.x@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.y@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.y@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.quota.&lt;discipline&gt;@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 another mission slot is available for the specified type of mission in the actor's sector, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.quota.TXXX@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{actor.sector.image@&lt;actor&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the sector in which the specified actor is located
          </xs:documentation>
          <xs:appinfo>
            <example>
              {actor.sector.image@bandanna}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="playervariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to the player
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{player.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.age}">
        <xs:annotation>
          <xs:documentation>
            Seconds elapsed since the start of the game
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.age}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.age.m}">
        <xs:annotation>
          <xs:documentation>
            Minutes elapsed since the start of the game
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.age.m}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.age.h}">
        <xs:annotation>
          <xs:documentation>
            Hours elapsed since the start of the game
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.age.h}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.age.d}">
        <xs:annotation>
          <xs:documentation>
            Days elapsed since the start of the game
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.age.d}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.money}">
        <xs:annotation>
          <xs:documentation>
            Money in the player's main account
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.money}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.money.formatted}">
        <xs:annotation>
          <xs:documentation>
            Money in the player's main account, formatted using digit separators
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.money.formatted}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank}">
        <xs:annotation>
          <xs:documentation>
            Fight rank of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.rank}">
        <xs:annotation>
          <xs:documentation>
            Fight rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.rank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.percent}">
        <xs:annotation>
          <xs:documentation>
            Fight rank percentage within rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.name}">
        <xs:annotation>
          <xs:documentation>
            Fight rank name of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.traderank}">
        <xs:annotation>
          <xs:documentation>
            Trade rank of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.traderank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.traderank.rank}">
        <xs:annotation>
          <xs:documentation>
            Trade rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.traderank.rank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.traderank.percent}">
        <xs:annotation>
          <xs:documentation>
            Trade rank percentage within rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.traderank.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.traderank.name}">
        <xs:annotation>
          <xs:documentation>
            Trade rank name of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.traderank.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank}">
        <xs:annotation>
          <xs:documentation>
            Fight rank of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.rank}">
        <xs:annotation>
          <xs:documentation>
            Fight rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.rank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.percent}">
        <xs:annotation>
          <xs:documentation>
            Fight rank percentage within rank number of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.fightrank.name}">
        <xs:annotation>
          <xs:documentation>
            Fight rank name of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.fightrank.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.missionrank.&lt;rank&gt;}">
        <xs:annotation>
          <xs:documentation>
            Mission rank of the player for the specified mission rank set (e.g. faction)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.missionrank.myfaction}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.missionrank.&lt;rank&gt;.rank}">
        <xs:annotation>
          <xs:documentation>
            Mission rank number of the player for the specified mission rank set (e.g. faction)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.missionrank.myfaction.rank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.missionrank.&lt;rank&gt;.percent}">
        <xs:annotation>
          <xs:documentation>
            Mission rank percentage within rank number of the player for the specified mission rank set (e.g. faction)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.missionrank.myfaction.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.missionrank.&lt;rank&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Mission rank name of the player for the specified mission rank set (e.g. faction)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.missionrank.myfaction.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart}">
        <xs:annotation>
          <xs:documentation>
            Game start id
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.name}">
        <xs:annotation>
          <xs:documentation>
            Game start name
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.description}">
        <xs:annotation>
          <xs:documentation>
            Game start description
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.description}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.difficulty}">
        <xs:annotation>
          <xs:documentation>
            Game start difficulty
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.difficulty}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.plot}">
        <xs:annotation>
          <xs:documentation>
            1 if the game start includes the plot, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.plot}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.map}">
        <xs:annotation>
          <xs:documentation>
            Game start map
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.map}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.gamestart.image}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for current game start
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.gamestart.image}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.favouriteship}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the player's favourite ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.favouriteship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.favouriteship.name}">
        <xs:annotation>
          <xs:documentation>
            Type name of the player's favourite ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.favouriteship.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.lasershots}">
        <xs:annotation>
          <xs:documentation>
            Number of laser shots fired by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.lasershots}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.missileshots}">
        <xs:annotation>
          <xs:documentation>
            Number of missile shots fired by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.missileshots}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.laserhits}">
        <xs:annotation>
          <xs:documentation>
            Number of laser shots fired by player which hit a target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.laserhits}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.laserhits.percent}">
        <xs:annotation>
          <xs:documentation>
            Percentage of laser shots fired by player which hit a target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.laserhits.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.missilehits}">
        <xs:annotation>
          <xs:documentation>
            Number of missile shots fired by player which hit a target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.missilehits}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.missilehits.percent}">
        <xs:annotation>
          <xs:documentation>
            Percentage of missile shots fired by player which hit a target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.missilehits.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.distance}">
        <xs:annotation>
          <xs:documentation>
            Distance flown by player in km
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.distance}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.destroyed.count}">
        <xs:annotation>
          <xs:documentation>
            Number of different object types destroyed by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.destroyed.count}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.destroyed.&lt;num&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the first type of object destroyed by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.destroyed.1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.destroyed.&lt;num&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Type name of the first type of object destroyed by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.destroyed.1.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.destroyed.&lt;num&gt;.count}">
        <xs:annotation>
          <xs:documentation>
            Number of objects of the first type of object destroyed by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.destroyed.1.count}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.destroyed.&lt;type&gt;.count}">
        <xs:annotation>
          <xs:documentation>
            Number of objects of the specified type destroyed by player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.destroyed.SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.&lt;stat&gt;}">
        <xs:annotation>
          <xs:documentation>
            Statistic value for the specified numbered statistic
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.5030}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.&lt;stat&gt;.formatted}">
        <xs:annotation>
          <xs:documentation>
            Statistic value for the specified numbered statistic, formatted using digit separators
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.5030.formatted}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.statistic.&lt;stat&gt;.title}">
        <xs:annotation>
          <xs:documentation>
            Statistic title for the specified numbered statistic
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.statistic.5030.title}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.menu}">
        <xs:annotation>
          <xs:documentation>
            Class id of currently open menu
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.menu}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.menu.exists}">
        <xs:annotation>
          <xs:documentation>
            1 if player currently has a menu open, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.menu.exists}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.menu.&lt;menulookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if player currently has the specified menu open, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.menu.dialog}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.licence.&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if player has a police licence for the specified race, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.licence.argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.notoriety.&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Notoriety of the player with the specified race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.notoriety.argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.notoriety.&lt;racelookup&gt;.rank}">
        <xs:annotation>
          <xs:documentation>
            Notoriety rank number of the player with the specified race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.notoriety.argon.rank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.notoriety.&lt;racelookup&gt;.percent}">
        <xs:annotation>
          <xs:documentation>
            Notoriety percentage within rank number of the player with the specified race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.notoriety.argon.percent}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.notoriety.&lt;racelookup&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Notoriety rank name of the player with the specified race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.notoriety.argon.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.code}">
        <xs:annotation>
          <xs:documentation>
            ID code of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.code}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.class}">
        <xs:annotation>
          <xs:documentation>
            Class id of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.class}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.class.name}">
        <xs:annotation>
          <xs:documentation>
            Class name of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.class.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.isclass.&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the player ship is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.isclass.ship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.type}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.type}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.type.name}">
        <xs:annotation>
          <xs:documentation>
            Type name of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.type.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.maker}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.maker}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.maker.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.maker.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.hull}">
        <xs:annotation>
          <xs:documentation>
            Current hull level of player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.hull}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.shields}">
        <xs:annotation>
          <xs:documentation>
            Current shield level of player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.shields}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.cargoclass}">
        <xs:annotation>
          <xs:documentation>
            Maximum cargo class that can be carried by the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.cargoclass}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.cargospace}">
        <xs:annotation>
          <xs:documentation>
            Cargo space free on the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.cargospace}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.maxcargospace}">
        <xs:annotation>
          <xs:documentation>
            Total cargo space on the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.maxcargospace}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.speed}">
        <xs:annotation>
          <xs:documentation>
            Current speed of the player ship
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.speed}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.basespeed}">
        <xs:annotation>
          <xs:documentation>
            Base maximum speed of the player ship without upgrades or hull damage
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.basespeed}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ship.maxspeed}">
        <xs:annotation>
          <xs:documentation>
            Current maximum speed of the player ship including upgrades and hull damage
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ship.maxspeed}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.x}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the player's current position
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.x}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.x.m}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the player's current position in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.x.m}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.x.km}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the player's current position in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.x.km}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.y}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the player's current position
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.y}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.y.m}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the player's current position in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.y.m}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.y.km}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the player's current position in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.y.km}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.z}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the player's current position
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.z}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.z.m}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the player's current position in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.z.m}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.position.z.km}">
        <xs:annotation>
          <xs:documentation>
            Z coordinate of the player's current position in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.position.z.km}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.alpha}">
        <xs:annotation>
          <xs:documentation>
            Alpha rotation of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.alpha}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.alpha.deg}">
        <xs:annotation>
          <xs:documentation>
            Alpha rotation of the player in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.alpha.deg}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.beta}">
        <xs:annotation>
          <xs:documentation>
            Beta rotation of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.beta}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.beta.deg}">
        <xs:annotation>
          <xs:documentation>
            Beta rotation of the player in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.beta.deg}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.gamma}">
        <xs:annotation>
          <xs:documentation>
            Gamma rotation of the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.gamma}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.rotation.gamma.deg}">
        <xs:annotation>
          <xs:documentation>
            Gamma rotation of the player in degrees
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.rotation.gamma.deg}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.race}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.race}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.race.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.race.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.x}">
        <xs:annotation>
          <xs:documentation>
            X coordinate of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.x}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.y}">
        <xs:annotation>
          <xs:documentation>
            Y coordinate of the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.y}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.quota.&lt;discipline&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 another mission slot is available for the specified type of mission in the player sector, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.quota.TXXX}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.sector.image}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the player's current sector
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.sector.image}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.code}">
        <xs:annotation>
          <xs:documentation>
            ID code of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.code}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.class}">
        <xs:annotation>
          <xs:documentation>
            Class id of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.class}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.class.name}">
        <xs:annotation>
          <xs:documentation>
            Class name of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.class.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.isclass.&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the object at which the player is docked is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.isclass.ship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.type}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.type}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.type.name}">
        <xs:annotation>
          <xs:documentation>
            Type name of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.type.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.race}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.race}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.race.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.race.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.maker}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.maker}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.dockobject.maker.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the object at which the player is docked
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.dockobject.maker.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.headquarters}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the player's headquarters (0 if they do not have one)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.headquarters}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.headquarters.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the player's headquarters (other variables as for objects)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.headquarters.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.headquarters.maxupgrades}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of upgrades for the player's headquarters
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.headquarters.maxupgrades}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.headquarters.upgrades}">
        <xs:annotation>
          <xs:documentation>
            Current number of upgrades for the player's headquarters
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.headquarters.upgrades}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.code}">
        <xs:annotation>
          <xs:documentation>
            ID code of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.code}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.class}">
        <xs:annotation>
          <xs:documentation>
            Class id of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.class}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.class.name}">
        <xs:annotation>
          <xs:documentation>
            Class name of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.class.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.isclass.&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the player's current target is of the specified class or a derived class, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.isclass.ship}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.type}">
        <xs:annotation>
          <xs:documentation>
            Typecode of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.type}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.type.name}">
        <xs:annotation>
          <xs:documentation>
            Type name of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.type.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.race}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.race}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.race.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.race.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.maker}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.maker}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.maker.name}">
        <xs:annotation>
          <xs:documentation>
            Race name of the maker of the player's current target
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.maker.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.distance}">
        <xs:annotation>
          <xs:documentation>
            Distance of the player's current target from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.distance}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.distance.m}">
        <xs:annotation>
          <xs:documentation>
            Distance of the player's current target from the player in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.distance.m}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.target.distance.km}">
        <xs:annotation>
          <xs:documentation>
            Distance of the player's current target from the player in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.target.distance.km}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.count}">
        <xs:annotation>
          <xs:documentation>
            Number of ships owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.count}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.select}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a ship owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.select}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.random}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random ship owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.random}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.random.name}">
        <xs:annotation>
          <xs:documentation>
            Name of a random ship owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.random.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.&lt;num&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first ship owned by the player (order can change if ships are added or removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedships.&lt;num&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the first ship owned by the player (order can change if ships are added or removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedships.1.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.count}">
        <xs:annotation>
          <xs:documentation>
            Number of stations owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.count}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.select}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a station owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.select}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.random}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random station owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.random}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.random.name}">
        <xs:annotation>
          <xs:documentation>
            Name of a random station owned by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.random.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.&lt;num&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first station owned by the player (order can change if stations are added or removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.ownedstations.&lt;num&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Name of the first station owned by the player (order can change if stations are added or removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.ownedstations.1.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.count}">
        <xs:annotation>
          <xs:documentation>
            Number of wings configured by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.count}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.select}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting a wing configured by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.select}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.random}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random wing configured by the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.random}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.random.name}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {wing.name@{player.wings.random}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.random.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.&lt;num&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first wing configured by the player (order can change if wings are added or removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{player.wings.&lt;num&gt;.name}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {wing.name@{player.wings.1}}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {player.wings.1.name}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="wingvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to wings
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{wing.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.textid@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Base text id of the specified wing (predefined wings only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.textid@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.formation@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation id of the formation being followed by the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.formation@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.formation.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation name of the formation being followed by the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.formation.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.race@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the owner of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.race@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.race.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name of the owner of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.race.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.homebase@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the object that is the homebase of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.homebase@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.homebase.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the object at that is the homebase of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.homebase.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.ship.count@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Number of ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.ship.count@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.ship.select@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            A ready-made button list for selecting an ship from a wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.ship.select@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.ship.random@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of a random member of the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.object.random@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.ship.1@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the first member of the specified wing (order can change if members are added/removed)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.ship.1@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.fastest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the fastest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.fastest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.fastest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the fastest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.fastest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.slowest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the slowest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.slowest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.slowest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the slowest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.slowest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.strongest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the strongest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.strongest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.strongest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the strongest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.strongest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.weakest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the weakest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.weakest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.weakest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the weakest ship in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.weakest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.furthest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the furthest ship in the specified wing from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.furthest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.furthest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the furthest ship in the specified wing from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.furthest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.nearest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the nearest ship in the specified wing to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.nearest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.nearest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the nearest ship in the specified wing to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.nearest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.largest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the largest ship in the specified wing from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.largest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.largest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the largest ship in the specified wing from the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.largest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.smallest@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Internal id of the smallest ship in the specified wing to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.smallest@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.smallest.name@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Name of the smallest ship in the specified wing to the player
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.smallest.name@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.distance@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two ships in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.distance@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.distance.m@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two ships in the specified wing in metres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.distance.m@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.distance.km@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum distance between any two ships in the specified wing in kilometres
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.distance.km@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{wing.jumps@&lt;winglookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum number of jumps between any two ships in the specified wing
          </xs:documentation>
          <xs:appinfo>
            <example>
              {wing.jumps@green}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="rewardvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to rewards and penalties
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{reward.money}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money reward based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.money}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.money@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money reward based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.money@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.money@&lt;levellookup&gt;.&lt;discipline&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money reward based on the player's current status and mission level/discipline
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.money@average.TXBX}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.money.&lt;racelookup&gt;@&lt;levellookup&gt;.&lt;discipline&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money reward based on the player's current status, mission level/discipline and specific race notoriety
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.money.argon@average.TXBX}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.notoriety}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety reward based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.notoriety}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.notoriety@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety reward based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.notoriety@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.notoriety.&lt;racelookup&gt;@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety reward based on the player's current status, mission level and specific race notoriety
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.notoriety.argon@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.traderank}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced trade rank reward based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.traderank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.traderank@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced trade rank reward based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.traderank@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.fightrank}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced fight rank reward based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.fightrank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{reward.fightrank@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced fight rank reward based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {reward.fightrank@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.money}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money penalty based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.money}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.money@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money penalty based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.money@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.money@&lt;levellookup&gt;.&lt;discipline&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money penalty based on the player's current status and mission level/discipline
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.money@average.TXBX}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.money.&lt;racelookup&gt;@&lt;levellookup&gt;.&lt;discipline&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced money penalty based on the player's current status, mission level/discipline and specific race notoriety
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.money.argon@average.TXBX}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.notoriety}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety penalty based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.notoriety}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.notoriety@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety penalty based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.notoriety@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.notoriety.&lt;racelookup&gt;@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced notoriety penalty based on the player's current status, mission level and specific race notoriety
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.notoriety.argon@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.traderank}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced trade rank penalty based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.traderank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.traderank@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced trade rank penalty based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.traderank@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.fightrank}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced trade rank penalty based on the player's current status
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.fightrank}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{penalty.fightrank@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Pre-balanced fight rank penalty based on the player's current status and mission level
          </xs:documentation>
          <xs:appinfo>
            <example>
              {penalty.fightrank@average}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="lookupvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to lookup values
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{lookup.class@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id associated with the specified class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.class.name@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class name associated with the specified class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class.name@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.class.name.pageid@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the specified class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class.name.pageid@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.class.name.textid@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the specified class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class.name.textid@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.class.isclass.&lt;classlookup&gt;@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the second specified class is of the first specified class or is a derived class of it, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class.isclass.fighter@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.class.image@&lt;classlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.class.image@m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Typecode associated with the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.name@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name associated with the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.name@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.name.pageid@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the specified type lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.name.pageid@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.name.textid@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the specified type lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.name.textid@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.description@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Description associated with the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.description@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.description.pageid@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the description of the specified type lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.description.pageid@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.description.textid@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the description of the specified type lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.description.textid@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.category@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Category code associated with the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.category@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.cargoclass@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo class of the specified type lookup value (cargo class carriable for ship types)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.cargoclass@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.cargospace@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo space per unit of the specified type lookup value (base cargo space for ship types)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.cargospace@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.price@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Average price per unit of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.price@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.minprice@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Minimum price per unit of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.minprice@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.maxprice@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Maximum price per unit of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.maxprice@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.minnotoriety@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Minimum notoriety required for the player to buy wares of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.minnotoriety@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.illegal.&lt;racelookup&gt;@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if specified type lookup value is illegal with the specified race, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.illegal.argon@SS_WARE_ENERGY}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.maker@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id of the maker of the specified type lookup value (only really makes sense with ships and stations)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.maker@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.class@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default class id of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.class@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.class.name@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Default class name of the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.class.name@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.type.image@&lt;type&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified type lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.type.image@SS_SH_A_M3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.category@&lt;categorylookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Category code associated with the specified category lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.category@energy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race id associated with the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.name@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race name associated with the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.name@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.name.pageid@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the name of the specified race lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.name.pageid@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.name.textid@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the name of the specified race lookup value (for use in voice actions)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.name.textid@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.mask@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Race mask of the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.mask@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.mask.&lt;racemasklookup&gt;@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified race is included in the race mask, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.mask.default@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.known@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if race is known to player, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.known@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.licence@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Ware type of police licence associated with the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.licence@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.licence.name@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Type name associated with ware type of police licence associated with the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.licence.name@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.aggression@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Aggression level (Kha'ak only)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.aggression@khaak}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.race.image@&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Thumbnail image filename for the specified race lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.race.image@argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.gender@&lt;genderlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gender id associated with the specified gender lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.gender@female}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.cargoclass@&lt;cargoclasslookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo class associated with the specified cargo class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.cargoclass@xl}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.cargoclass.name@&lt;cargoclasslookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo class name associated with the specified cargo class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.cargoclass.name@xl}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.cargoclass.description@&lt;cargoclasslookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Cargo class description associated with the specified cargo class lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.cargoclass.name@xl}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.fightrank@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Fight rank associated with the specified fight rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.fightrank@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.fightrank.rank@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Fight rank number associated with the specified fight rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.fightrank.rank@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.fightrank.name@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Fight rank name associated with the specified fight rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.fightrank.name@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.traderank@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Trade rank associated with the specified trade rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.traderank@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.traderank.rank@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Trade rank number associated with the specified trade rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.traderank.rank@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.traderank.name@&lt;ranklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Trade rank name associated with the specified trade rank lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.traderank.name@rank20}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.notoriety@&lt;notorietylookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Notoriety associated with the specified notoriety lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.notoriety@friend}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.notoriety.rank@&lt;notorietylookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Notoriety number associated with the specified notoriety lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.notoriety.rank@friend}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.notoriety.&lt;racelookup&gt;.name@&lt;notorietylookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Notoriety rank name associated with the specified notoriety lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.notoriety.argon.name@friend}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.level@&lt;levellookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Difficulty level associated with the specified difficulty level lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.level@easy}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.formation@&lt;formationlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation id associated with the specified formation lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.formation@delta}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.formation.name@&lt;formationlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Formation name associated with the specified formation lookup value
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.formation.name@delta}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.job.name@&lt;jobid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Job name of the specified job id
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.job.name@101}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.job.name.pageid@&lt;jobid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Page id of the job name of the specified job id
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.job.name.pageid@101}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.job.name.textid@&lt;jobid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text id of the job name of the specified job id
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.job.name.textid@101}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.job.script@&lt;jobid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Script used by the specified job id
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.job.script@101}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.gate@&lt;gateidlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gate id associated with the specified gate direction
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.gate@north}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.gate.name@&lt;gateidlookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Gate name associated with the specified gate direction
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.gate.name@north}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{lookup.menu@&lt;menulookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Class id of the specified menu
          </xs:documentation>
          <xs:appinfo>
            <example>
              {lookup.menu@dialog}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="randomvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to randomly generated values
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{random.pilot}">
        <xs:annotation>
          <xs:documentation>
            Random pilot name for a random race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.pilot}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{random.pilot.&lt;racelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Random pilot name for the specified race
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.pilot.argon}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{random.race}">
        <xs:annotation>
          <xs:documentation>
            Random race selected from default race mask (Argon/Boron/Paranid/Split/Teladi)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.race}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{random.race@&lt;racemasklookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Random race selected from specified race mask (multiple values may be separated by | symbols)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.race@default|xenon|pirate}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{random.type@&lt;typelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Random typename selected from specified typenames (multiple values may be separated by | symbols)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.type@SS_SH_A_M3|SS_SH_A_M3_1|SS_SH_A_M3_2|SS_SH_A_M3_3}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{random.class@&lt;typelookup&gt;}">
        <xs:annotation>
          <xs:documentation>
            Random class id selected from specified class ids (multiple values may be separated by | symbols)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {random.class@m3|m4|m5}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="valuevariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to named values
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{value@&lt;value&gt;}">
        <xs:annotation>
          <xs:documentation>
            Value of the specified global or local variable
          </xs:documentation>
          <xs:appinfo>
            <example>
              {value@myvalue}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="textvariable">
    <xs:annotation>
      <xs:documentation>
        Variables relating to text files
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="{&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Text entry from a text file
          </xs:documentation>
          <xs:appinfo>
            <example>
              {1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text@&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Equivalent to {pageid,textid}
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text@1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text.exists@&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            1 if the specified text entry exists, 0 if not
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text.exists@1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text.duration@&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Duration of speech for the specified text entry in milliseconds, -1 if the text not found or not spoken (does not take into account embedded references)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text.duration@1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text.duration.s@&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Duration of speech for the specified text entry in seconds, -1 if the text not found or not spoken (does not take into account embedded references)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text.duration.s@1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text.length@&lt;pageid&gt;,&lt;textid&gt;}">
        <xs:annotation>
          <xs:documentation>
            Length the specified text entry (useful for custom subtitle durations)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text.length@1123,1}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="{text.length@&lt;text&gt;}">
        <xs:annotation>
          <xs:documentation>
            Length the specified text (useful for custom subtitle durations)
          </xs:documentation>
          <xs:appinfo>
            <example>
              {text.length@sometext}
            </example>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <!-- numeric simple types -->

  <xs:simpleType name="rgbrange">
    <xs:restriction base="xs:integer">
      <xs:minInclusive fixed="true" value="0" />
      <xs:maxInclusive fixed="true" value="255" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="rgbcomponent">
    <xs:annotation>
      <xs:documentation>
        RGB Colour channel value (0-255 inclusive).
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="rgbrange expression" />
  </xs:simpleType>

  <!-- miscellaneous complex types -->

  <xs:complexType name="command">
    <xs:group ref="location">
      <xs:annotation>
        <xs:documentation>
          Command reference location (relevant commands only)
        </xs:documentation>
      </xs:annotation>
    </xs:group>
    <xs:attributeGroup ref="command" />
  </xs:complexType>

  <xs:complexType name="map">
    <xs:group ref="sectors" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="notoriety">
    <xs:group ref="notoriety" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="relations">
    <xs:group ref="relations" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="grouprelations">
    <xs:group ref="grouprelations" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="wares">
    <xs:group ref="wares" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="shipwares">
    <xs:group ref="shipwares" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="ejectwares">
    <xs:group ref="ejectwares" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="checkwares">
    <xs:group ref="checkwares" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <xs:complexType name="pilot">
    <xs:attributeGroup ref="pilot" />
  </xs:complexType>

  <xs:complexType name="ship">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:element name="equipment" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Equipment list
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="shipwares">
              <xs:attributeGroup ref="shiploadout" />
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="cargo" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Cargo list
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="shipwares">
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="command" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Command
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="command">
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="relations" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Object relations
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="relations">
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="pilot" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Pilot data
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="pilot">
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="shiptype" />
    <xs:attributeGroup ref="createshipclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="leader" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="hidden" />
    <xs:attributeGroup ref="scanned" />
    <xs:attributeGroup ref="part" />
    <xs:attributeGroup ref="overridename" />
    <xs:attributeGroup ref="dockobject">
      <xs:annotation>
        <xs:documentation>
          Dock object (used in preference to sector/position if supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="homebase" />
  </xs:complexType>

  <xs:complexType name="station">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:element name="equipment" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Equipment list (shields only)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="wares">
              <xs:attributeGroup ref="stationloadout" />
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="resources" type="wares" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Primary resource list
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="secondaryresources" type="wares" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Secondary resource list
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="products" type="wares" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Product list
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="relations" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Object relations
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="relations">
              <xs:attributeGroup ref="comment" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="stationtype" />
    <xs:attributeGroup ref="createstationclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
    <xs:attributeGroup ref="serial" />
  </xs:complexType>

  <xs:complexType name="asteroid">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:group ref="resource" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="asteroidtype" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="scanned" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="debris">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:group ref="resource" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="debristype" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="hidden" />
    <xs:attributeGroup ref="scanned" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="wreck">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:group ref="resource" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="wrecktype" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="hidden" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="crate">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:group ref="ware" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="hidden" />
  </xs:complexType>

  <xs:complexType name="gate">
    <xs:sequence>
      <xs:group ref="locationrotation" />
      <xs:group ref="destination" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="gatetype" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="gate" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="astronaut">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="astronauttype" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="leader" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
    <xs:attributeGroup ref="dockobject">
      <xs:annotation>
        <xs:documentation>
          Dock object (used in preference to sector/position if supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:complexType>

  <xs:complexType name="spacefly">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="leader" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="ufo">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="leader" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
    <xs:attributeGroup ref="dockobject">
      <xs:annotation>
        <xs:documentation>
          Dock object (used in preference to sector/position if supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:complexType>

  <xs:complexType name="stationary">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="stationarytype" />
    <xs:attributeGroup ref="createstationaryclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="drone">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="dronetype" />
    <xs:attributeGroup ref="createdroneclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="invincible" />
    <xs:attributeGroup ref="highlight" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <xs:complexType name="special">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="type" />
    <xs:attributeGroup ref="createobjectclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="overridename" />
    <xs:attributeGroup ref="part" />
  </xs:complexType>

  <xs:complexType name="planet">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="colourrgb" />
    <xs:attributeGroup ref="planettype" />
    <xs:attribute name="fogpercent">
      <xs:annotation>
        <xs:documentation>
          Fog percentage level (0 = max visibility, 100 = not visible)
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:minInclusive value="0" fixed="true" />
          <xs:maxInclusive value="100" fixed="true" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="sun">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="suntype" />
    <xs:attributeGroup ref="colourrgb" />
  </xs:complexType>

  <xs:complexType name="object">
    <xs:sequence>
      <xs:group ref="locationrotation" />
    </xs:sequence>
    <xs:attributeGroup ref="action" />
    <xs:attributeGroup ref="objectname" />
    <xs:attributeGroup ref="type" />
    <xs:attributeGroup ref="createobjectclass" />
    <xs:attributeGroup ref="group" />
    <xs:attributeGroup ref="known" />
    <xs:attributeGroup ref="overridename" />
  </xs:complexType>

  <!-- attribute groups -->

  <xs:attributeGroup name="instantiate">
    <xs:attribute name="instantiate" type="instantiatelookup">
      <xs:annotation>
        <xs:documentation>
          Instantiation type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="comment">
    <xs:attribute name="comment" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Comment for documentation purposes only
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="chance">
    <xs:attribute name="chance" type="expression" />
  </xs:attributeGroup>

  <xs:attributeGroup name="range">
    <xs:attribute name="exact" type="expression">
      <xs:annotation>
        <xs:documentation>
          Exact number (takes priority over list and min/max)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="list" type="expression">
      <xs:annotation>
        <xs:documentation>
          List of numbers (takes priority over min/max, ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="min" type="expression">
      <xs:annotation>
        <xs:documentation>
          Minimum number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="max" type="expression">
      <xs:annotation>
        <xs:documentation>
          Maximum number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="rangestring">
    <xs:attribute name="exact" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Exact number or text (takes priority over min/max)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="list" type="expression">
      <xs:annotation>
        <xs:documentation>
          List of numbers or text (takes priority over min/max, ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="min" type="expression">
      <xs:annotation>
        <xs:documentation>
          Minimum number (ignored if exact is set, cannot be used with text)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="max" type="expression">
      <xs:annotation>
        <xs:documentation>
          Maximum number (ignored if exact is set, cannot be used with text)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="count">
    <xs:attribute name="count" type="expression">
      <xs:annotation>
        <xs:documentation>
          Number of items
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="randomprofile">
    <xs:attribute name="profile" type="profilelookup">
      <xs:annotation>
        <xs:documentation>
          Random number profile (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="scale" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          Scale of random number profile (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="random">
    <xs:attribute name="exact" type="expression">
      <xs:annotation>
        <xs:documentation>
          Exact number (takes priority over min/max/profile/scale)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="list" type="expression">
      <xs:annotation>
        <xs:documentation>
          List of numbers (takes priority over min/max/profile/scale, ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="min" type="expression">
      <xs:annotation>
        <xs:documentation>
          Minimum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="max" type="expression">
      <xs:annotation>
        <xs:documentation>
          Maximum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="randomprofile" />
  </xs:attributeGroup>

  <xs:attributeGroup name="randomrank">
    <xs:attribute name="exact" type="ranklookupexpression">
      <xs:annotation>
        <xs:documentation>
          Exact number (takes priority over min/max/profile/scale)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="list" type="ranklookupexpression">
      <xs:annotation>
        <xs:documentation>
          List of numbers (takes priority over min/max/profile/scale, ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="min" type="ranklookupexpression">
      <xs:annotation>
        <xs:documentation>
          Minimum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="max" type="ranklookupexpression">
      <xs:annotation>
        <xs:documentation>
          Maximum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="randomprofile" />
  </xs:attributeGroup>

  <xs:attributeGroup name="randomnotoriety">
    <xs:attribute name="exact" type="notorietylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Exact number (takes priority over min/max/profile/scale)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="list" type="notorietylookupexpression">
      <xs:annotation>
        <xs:documentation>
          List of numbers (takes priority over min/max/profile/scale, ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="min" type="notorietylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Minimum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="max" type="notorietylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Maximum random number (ignored if exact is set)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="randomprofile" />
  </xs:attributeGroup>

  <xs:attributeGroup name="progress">
    <xs:attribute name="current" type="expression">
      <xs:annotation>
        <xs:documentation>
          Current progress value
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="limit" type="expression">
      <xs:annotation>
        <xs:documentation>
          Limit for progress value (100 if not supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="timer">
    <xs:attribute name="start" type="expression">
      <xs:annotation>
        <xs:documentation>
          Start time (defaults to {player.age} if not supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="expression">
      <xs:annotation>
        <xs:documentation>
          End time (ignored if duration is supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="duration" type="expression">
      <xs:annotation>
        <xs:documentation>
          Duration
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="discipline">
    <xs:attribute name="discipline" type="expression">
      <xs:annotation>
        <xs:documentation>
          Mission discipline
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="mission">
    <xs:attribute name="level" type="levellookupexpression">
      <xs:annotation>
        <xs:documentation>
          Mission difficulty level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="discipline" />
  </xs:attributeGroup>

  <xs:attributeGroup name="reward">
    <xs:attribute name="money" type="expression">
      <xs:annotation>
        <xs:documentation>
          Money reward
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="other" type="text">
      <xs:annotation>
        <xs:documentation>
          Other rewards
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="valueexpression">
    <xs:attribute name="value" type="expression">
      <xs:annotation>
        <xs:documentation>
          Value
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="valueexpressionstring">
    <xs:attribute name="value" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Number or text value
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="race">
    <xs:attribute name="race" type="racelookup">
      <xs:annotation>
        <xs:documentation>
          Race
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="subrace">
    <xs:attribute name="subrace" type="racelookup">
      <xs:annotation>
        <xs:documentation>
          Subrace
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="racemask">
    <xs:attribute name="race" type="racemasklookup">
      <xs:annotation>
        <xs:documentation>
          Race
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="maker">
    <xs:attribute name="maker" type="racelookup">
      <xs:annotation>
        <xs:documentation>
          Maker race
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="makermask">
    <xs:attribute name="maker" type="racemasklookup">
      <xs:annotation>
        <xs:documentation>
          Maker race
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="createobjectclass">
    <xs:attribute name="class" type="createobjectclasslookup">
      <xs:annotation>
        <xs:documentation>
          Object class (create)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findobjectclass">
    <xs:attribute name="class" type="findobjectclasslookup">
      <xs:annotation>
        <xs:documentation>
          Object class (find)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="createshipclass">
    <xs:attribute name="class" type="createshipclasslookup">
      <xs:annotation>
        <xs:documentation>
          Ship class (create)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findshipclass">
    <xs:attribute name="class" type="findshipclasslookup">
      <xs:annotation>
        <xs:documentation>
          Ship class (find)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="createstationclass">
    <xs:attribute name="class" type="createstationclasslookup">
      <xs:annotation>
        <xs:documentation>
          Station class (create)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findstationclass">
    <xs:attribute name="class" type="findstationclasslookup">
      <xs:annotation>
        <xs:documentation>
          Station class (find)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="createstationaryclass">
    <xs:attribute name="class" type="createstationaryclasslookup">
      <xs:annotation>
        <xs:documentation>
          Stationary object class (create)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="createdroneclass">
    <xs:attribute name="class" type="createdroneclasslookup">
      <xs:annotation>
        <xs:documentation>
          Stationary object class (create)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="gate">
    <xs:attribute name="gate" type="gateidlookup">
      <xs:annotation>
        <xs:documentation>
          Gate or gate id (direction)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="yield">
    <xs:attribute name="yield" type="expression">
      <xs:annotation>
        <xs:documentation>
          Asteroid yield
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="actor">
    <xs:attribute name="actor" type="actorname">
      <xs:annotation>
        <xs:documentation>
          Actor object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="actorname">
    <xs:attribute name="name" type="actorname">
      <xs:annotation>
        <xs:documentation>
          Actor object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="actorlocation">
    <xs:attribute name="location" type="locationlookup">
      <xs:annotation>
        <xs:documentation>
          Actor sub-location
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="character">
    <xs:attribute name="character" type="text">
      <xs:annotation>
        <xs:documentation>
          Name (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="voice">
    <xs:attribute name="voice" type="expression">
      <xs:annotation>
        <xs:documentation>
          Voice id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="face">
    <xs:attribute name="face" type="facelookup">
      <xs:annotation>
        <xs:documentation>
          Actor face
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="playface">
    <xs:attribute name="face" type="facelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Actor face
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="soundid">
    <xs:attribute name="soundid" type="soundlookup">
      <xs:annotation>
        <xs:documentation>
          Sound id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="musicid">
    <xs:attribute name="music" type="expression">
      <xs:annotation>
        <xs:documentation>
          Music track id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="dialogid">
    <xs:attribute name="dialogid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Dialog line id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="movieid">
    <xs:attribute name="movieid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Movie id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="menuid">
    <xs:attribute name="menuid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Menu id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="turret">
    <xs:attribute name="turret" type="expression">
      <xs:annotation>
        <xs:documentation>
          Turret id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="statistic">
    <xs:attribute name="statistic" type="statisticlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Player statistic counter id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="priority">
    <xs:attribute name="priority" type="expression">
      <xs:annotation>
        <xs:documentation>
          Priority
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="movie">
    <xs:attribute name="movie" type="movielookup">
      <xs:annotation>
        <xs:documentation>
          Movie type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="fileid">
    <xs:attribute name="fileid" type="expression">
      <xs:annotation>
        <xs:documentation>
          File id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="pageid">
    <xs:attribute name="pageid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Page id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="titleid">
    <xs:attribute name="titleid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Title text id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="textid">
    <xs:attribute name="textid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Text id
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="overridename">
    <xs:attributeGroup ref="textid">
      <xs:annotation>
        <xs:documentation>
          Override name
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="serial">
    <xs:attribute name="serial" type="expression">
      <xs:annotation>
        <xs:documentation>
          Serial id (0 through 23 corresponding to alpha through omega)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="missionrank">
    <xs:attribute name="name" type="missionrankname">
      <xs:annotation>
        <xs:documentation>
          Mission rank name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="object">
    <xs:attribute name="object" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="objectname">
    <xs:attribute name="name" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="objectalias">
    <xs:attribute name="alias" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Object alias
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="dockobject">
    <xs:attribute name="dockobject" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Dock object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="homebase">
    <xs:attribute name="homebase" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Homebase object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="commandobject">
    <xs:attribute name="commandobject" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Command target object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="guidanceobject">
    <xs:attribute name="guidance" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Object name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="line">
    <xs:attributeGroup ref="actor">
      <xs:annotation>
        <xs:documentation>
          If not supplied then speak as computer
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="playface">
      <xs:annotation>
        <xs:documentation>
          Ignored if actor not supplied
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="pageid">
      <xs:annotation>
        <xs:documentation>
          Ignored if actor supplied (actor page is used)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="textid" />
  </xs:attributeGroup>

  <xs:attributeGroup name="relation">
    <xs:attribute name="object" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Object to which relation should be set
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="relation" type="relationlookup">
      <xs:annotation>
        <xs:documentation>
          Relationship to object
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mutual" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Relationship is mutual
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="grouprelation">
    <xs:attribute name="group" type="groupname">
      <xs:annotation>
        <xs:documentation>
          Group to which relation should be set
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="relation" />
  </xs:attributeGroup>

  <xs:attributeGroup name="group">
    <xs:attribute name="group" type="groupname">
      <xs:annotation>
        <xs:documentation>
          Group name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="eventparams">
    <xs:attribute name="param" type="expression">
      <xs:annotation>
        <xs:documentation>
          Event parameter value (not used by all events)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="param2" type="expression">
      <xs:annotation>
        <xs:documentation>
          Second event parameter value (not used by all events)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="objectevent">
    <xs:attributeGroup ref="object">
      <xs:annotation>
        <xs:documentation>
          Event object
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="eventparams" />
  </xs:attributeGroup>

  <xs:attributeGroup name="groupevent">
    <xs:attributeGroup ref="group">
      <xs:annotation>
        <xs:documentation>
          Event group
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="eventparams" />
  </xs:attributeGroup>

  <xs:attributeGroup name="script">
    <xs:attribute name="script" type="scriptname">
      <xs:annotation>
        <xs:documentation>
          Script name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="cue">
    <xs:attribute name="cue" type="cuename">
      <xs:annotation>
        <xs:documentation>
          Cue name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="cueinstance">
    <xs:attributeGroup ref="cue">
      <xs:annotation>
        <xs:documentation>
          Cue with which to associate objective or briefing
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="instantiate">
      <xs:annotation>
        <xs:documentation>
          Objective associated with instance or static cue?
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="step">
    <xs:attribute name="step" type="expression">
      <xs:annotation>
        <xs:documentation>
          Step number
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="background">
    <xs:attribute name="background" type="expression">
      <xs:annotation>
        <xs:documentation>
          Briefing background image
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="image">
    <xs:attribute name="image" type="expression">
      <xs:annotation>
        <xs:documentation>
          Briefing thumbnail image
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="order">
    <xs:attribute name="order" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          Briefing thumbnail image order (first image is 1, last is 3)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="disabled">
    <xs:attribute name="disabled" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Is the briefing thumbnail image disabled (greyed out)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="cueevent">
    <xs:attributeGroup ref="cue">
      <xs:annotation>
        <xs:documentation>
          Cue name for event
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="value">
    <xs:attribute name="value" type="valuename">
      <xs:annotation>
        <xs:documentation>
          Value name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="valuename">
    <xs:attribute name="name" type="valuename">
      <xs:annotation>
        <xs:documentation>
          Value name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="notorietyoperation">
    <xs:attribute name="operation" type="notorietyoperationlookup">
      <xs:annotation>
        <xs:documentation>
          Operation
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="operation">
    <xs:attribute name="operation" type="operationlookup">
      <xs:annotation>
        <xs:documentation>
          Operation
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="quest">
    <xs:attribute name="quest" type="questname">
      <xs:annotation>
        <xs:documentation>
          Quest name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="questname">
    <xs:attribute name="name" type="questname">
      <xs:annotation>
        <xs:documentation>
          Quest name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="questevent">
    <xs:attributeGroup ref="quest">
      <xs:annotation>
        <xs:documentation>
          Event quest
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="questparams">
    <xs:attributeGroup ref="priority">
      <xs:annotation>
        <xs:documentation>
          Quest priority
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="max" type="expression">
      <xs:annotation>
        <xs:documentation>
          Maximum number of quest instances
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="question">
    <xs:attribute name="question" type="questionname">
      <xs:annotation>
        <xs:documentation>
          Question name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="questionname">
    <xs:attribute name="name" type="questionname">
      <xs:annotation>
        <xs:documentation>
          Question name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="answer">
    <xs:attribute name="answer" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Selected answer
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="questionevent">
    <xs:attributeGroup ref="question">
      <xs:annotation>
        <xs:documentation>
          Event question
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="conversation">
    <xs:attribute name="conversation" type="conversationname">
      <xs:annotation>
        <xs:documentation>
          Conversation name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="type">
    <xs:attribute name="typename" type="typelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Object typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="shiptype">
    <xs:attribute name="typename" type="shiplookupexpression">
      <xs:annotation>
        <xs:documentation>
          Ship typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="stationtype">
    <xs:attribute name="typename" type="stationlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Station typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="asteroidtype">
    <xs:attribute name="typename" type="asteroidlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Asteroid typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="debristype">
    <xs:attribute name="typename" type="debrislookupexpression">
      <xs:annotation>
        <xs:documentation>
          Debris typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="wrecktype">
    <xs:attribute name="typename" type="wrecklookupexpression">
      <xs:annotation>
        <xs:documentation>
          Wreck typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="cratetype">
    <xs:attribute name="typename" type="cratelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Ware crate typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findcratetype">
    <xs:attribute name="typename" type="findcratelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Ware crate typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="missiletype">
    <xs:attribute name="typename" type="missilelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Missile typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="lasertype">
    <xs:attribute name="typename" type="laserlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Laser typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="resourcetype">
    <xs:attribute name="typename" type="resourcelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Resource typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="gatetype">
    <xs:attribute name="typename" type="gatelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Gate typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="astronauttype">
    <xs:attribute name="typename" type="astronautlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Astronaut typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="spaceflytype">
    <xs:attribute name="typename" type="spaceflylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Spacefly typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="ufotype">
    <xs:attribute name="typename" type="ufolookupexpression">
      <xs:annotation>
        <xs:documentation>
          UFO typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="stationarytype">
    <xs:attribute name="typename" type="stationarylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Stationary object typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="dronetype">
    <xs:attribute name="typename" type="dronelookupexpression">
      <xs:annotation>
        <xs:documentation>
          Drone typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="planettype">
    <xs:attribute name="typename" type="planetlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Planet typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="suntype">
    <xs:attribute name="typename" type="sunlookupexpression">
      <xs:annotation>
        <xs:documentation>
          Sun typename (from types file)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="category">
    <xs:attribute name="category" type="categorylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Object category
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="stationcategory">
    <xs:attribute name="category" type="stationcategorylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Station category
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="wreckcategory">
    <xs:attribute name="category" type="wreckcategorylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Wreck category
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="cratecategory">
    <xs:attribute name="category" type="cratecategorylookupexpression">
      <xs:annotation>
        <xs:documentation>
          Crate category
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="racerelation">
    <xs:attributeGroup ref="race">
      <xs:annotation>
        <xs:documentation>
          Player notoriety with race
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="randomnotoriety">
      <xs:annotation>
        <xs:documentation>
          Notoriety points
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="ware">
    <xs:attributeGroup ref="cratetype">
      <xs:annotation>
        <xs:documentation>
          Ware type
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="random">
      <xs:annotation>
        <xs:documentation>
          Number of units
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="findware">
    <xs:attributeGroup ref="findcratetype">
      <xs:annotation>
        <xs:documentation>
          Ware type
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="range">
      <xs:annotation>
        <xs:documentation>
          Number of units
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="shipware">
    <xs:attributeGroup ref="ware" />
    <xs:attribute name="critical" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Ware is critical and cargo bay should increase in size to accommodate it if necessary
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="ejectware">
    <xs:attributeGroup ref="ware" />
    <xs:attributeGroup ref="objectname">
      <xs:annotation>
        <xs:documentation>
          Ware crate object name
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="checkware">
    <xs:attributeGroup ref="cratetype">
      <xs:annotation>
        <xs:documentation>
          Ware type
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="range">
      <xs:annotation>
        <xs:documentation>
          Number of units
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="resource">
    <xs:attributeGroup ref="resourcetype">
      <xs:annotation>
        <xs:documentation>
          Resource type
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="random">
      <xs:annotation>
        <xs:documentation>
          Number of units
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="checkresource">
    <xs:attributeGroup ref="resourcetype">
      <xs:annotation>
        <xs:documentation>
          Resource type
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="range">
      <xs:annotation>
        <xs:documentation>
          Number of units
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="scriptvalue">
    <xs:attribute name="datatype" type="datatypelookup">
      <xs:annotation>
        <xs:documentation>
          Script value data type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="datavalue" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Script value (not used if datatype='array')
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="tasks">
    <xs:attribute name="tasks" type="taskslookup">
      <xs:annotation>
        <xs:documentation>
          Tasks to start/stop (all if not supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="distance">
    <xs:attribute name="distance" type="expression">
      <xs:annotation>
        <xs:documentation>
          Distance from position
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="finddocking">
    <xs:attribute name="dockingallowed" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find objects that the find object can dock at?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findresource">
    <xs:attribute name="resource" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find station with resource (instead of product)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="duration">
    <xs:attribute name="duration" type="expression">
      <xs:annotation>
        <xs:documentation>
          Duration in milliseconds
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="position">
		<xs:attribute name="x" type="expression">
      <xs:annotation>
        <xs:documentation>
          X coordinate in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="expression">
      <xs:annotation>
        <xs:documentation>
          Y coordinate in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="z" type="expression">
      <xs:annotation>
        <xs:documentation>
          Z coordinate in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="object">
      <xs:annotation>
        <xs:documentation>
          Used in preference to coordinates if supplied
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="random">
      <xs:annotation>
        <xs:documentation>
          Distance from specified position
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="height">
      <xs:annotation>
        <xs:documentation>
          Height (y coordinate) maximum offset (distance calculated using cylinder rather than sphere if supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="rotation">
    <xs:attribute name="alpha" type="expression">
      <xs:annotation>
        <xs:documentation>
          Alpha rotation in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="beta" type="expression">
      <xs:annotation>
        <xs:documentation>
          Beta rotation in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="gamma" type="expression">
      <xs:annotation>
        <xs:documentation>
          Gamma rotation in sector space
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="object">
      <xs:annotation>
        <xs:documentation>
          Match rotation (used in preference to coordinates if supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="sectorname">
    <xs:attribute name="name" type="sectorname">
      <xs:annotation>
        <xs:documentation>
          Sector name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="sectormatch">
    <xs:attribute name="sector" type="sectorname">
      <xs:annotation>
        <xs:documentation>
          Sector name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="sectorcoords">
    <xs:attribute name="x" type="expression">
      <xs:annotation>
        <xs:documentation>
          X coordinate
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="expression">
      <xs:annotation>
        <xs:documentation>
          Y coordinate
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="sector">
    <xs:attributeGroup ref="sectormatch">
      <xs:annotation>
        <xs:documentation>
          Used in preference to coordinates if supplied
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="sectorcoords">
      <xs:annotation>
        <xs:documentation>
          Coordinates of the specified sector
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
	</xs:attributeGroup>

  <xs:attributeGroup name="shiploadout">
    <xs:attribute name="loadout" type="shiploadoutlookup">
      <xs:annotation>
        <xs:documentation>
          Base loadout level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="loadoutmask" type="loadoutmasklookupexpression">
      <xs:annotation>
        <xs:documentation>
          Base loadout mask
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="stationloadout">
    <xs:attribute name="loadout" type="stationloadoutlookup">
      <xs:annotation>
        <xs:documentation>
          Base loadout level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="leader">
    <xs:attribute name="leader" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object is group leader?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="safety">
    <xs:attribute name="safety" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object should be set to a safe position when player enters sector (default is yes except for debris)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="invincible">
    <xs:attribute name="invincible" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object is invincible?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="boardable">
    <xs:attribute name="boardable" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object can be boarded even if invincible?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="capturable">
    <xs:attribute name="capturable" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object can be captured (default is yes for small ships, no for big ships)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="sellable">
    <xs:attribute name="sellable" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object can be sold by the player (default is yes for all ships)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="minable">
    <xs:attribute name="minable" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Asteroid can be mined?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="communicates">
    <xs:attribute name="communicates" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object will communicate with the player (default is yes)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="highlight">
    <xs:attribute name="highlight" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object is highlighted in sector map?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="racelogic">
    <xs:attribute name="racelogic" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object should follow standard race logic (default is yes)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="covered">
    <xs:attribute name="covered" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object's race is covered (pirates only)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="known">
    <xs:attribute name="known" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Known to player?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="hidden">
    <xs:attribute name="hidden" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Hidden in the sector map?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="active">
    <xs:attribute name="active" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Active state (armed, mines only)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="part">
    <xs:attribute name="part" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object is a part of another object
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="warp">
    <xs:attribute name="warp" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Show warp effect?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="command">
    <xs:attribute name="command" type="commandlookup">
      <xs:annotation>
        <xs:documentation>
          Command name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="commandobject">
      <xs:annotation>
        <xs:documentation>
          Command object (relevant commands only)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="distance">
      <xs:annotation>
        <xs:documentation>
          Distance (relevant commands only)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
  </xs:attributeGroup>

  <xs:attributeGroup name="formation">
    <xs:attribute name="formation" type="formationlookup">
      <xs:annotation>
        <xs:documentation>
          Formation type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="wing">
    <xs:attribute name="wing" type="winglookupexpression">
      <xs:annotation>
        <xs:documentation>
          Wing
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="pilot">
    <xs:attribute name="name" type="text">
      <xs:annotation>
        <xs:documentation>
          Pilot name (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="voice">
      <xs:annotation>
        <xs:documentation>
          Pilot voice id
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="face">
      <xs:annotation>
        <xs:documentation>
          Pilot face id
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="voiceflags" type="expression">
      <xs:annotation>
        <xs:documentation>
          Pilot voice flags (for random voices)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="gender" type="genderlookup">
      <xs:annotation>
        <xs:documentation>
          Pilot gender
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="race">
      <xs:annotation>
        <xs:documentation>
          Pilot subrace id
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="shipname" type="text">
      <xs:annotation>
        <xs:documentation>
          Ship name (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="jobtextid" type="expression">
      <xs:annotation>
        <xs:documentation>
          Job name text id (from text page 1000)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morale" type="expression">
      <xs:annotation>
        <xs:documentation>
          Pilot morale level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="aggression" type="expression">
      <xs:annotation>
        <xs:documentation>
          Pilot aggression level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fightskill" type="expression">
      <xs:annotation>
        <xs:documentation>
          Pilot fight skill level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tradeskill" type="expression">
      <xs:annotation>
        <xs:documentation>
          Pilot trade skill level
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findobject">
    <xs:attribute name="multiple" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find multiple objects (requires a group)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="known">
      <xs:annotation>
        <xs:documentation>
          Find only objects known to player?
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="visible" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find only objects that are visible (in scanner range and not hidden) to player?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nearest" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Select result from nearest objects only?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="enemy" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find objects that are enemy to the find object?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="neutral" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find objects that are neutral to the find object?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="friend" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find objects that are friend to the find object?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="findobject" type="objectname">
      <xs:annotation>
        <xs:documentation>
          Reference object name for enemy/neutral/friend/dockingallowed
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="findsector">
    <xs:attributeGroup ref="known">
      <xs:annotation>
        <xs:documentation>
          Find only sectors known to player?
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="nearest" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Select result from nearest sectors only?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="core" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find sectors that are defined as core?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="border" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Find sectors that are defined as border?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="scanned">
    <xs:attribute name="scanned" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Object has been scanned?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="fade">
    <xs:attribute name="fade" type="fadelookup">
      <xs:annotation>
        <xs:documentation>
          Fade type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="escape">
    <xs:attribute name="escape" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Player can exit scene?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="text">
    <xs:attribute name="text" type="text">
      <xs:annotation>
        <xs:documentation>
          Message text (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="info">
    <xs:attribute name="title" type="text">
      <xs:annotation>
        <xs:documentation>
          Title (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="story" type="text">
      <xs:annotation>
        <xs:documentation>
          Story title (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="chapter" type="text">
      <xs:annotation>
        <xs:documentation>
          Chapter title (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="text" />
  </xs:attributeGroup>

  <xs:attributeGroup name="message">
		<xs:attribute name="author" type="text">
      <xs:annotation>
        <xs:documentation>
          Author (usually a textid)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="text" />
  </xs:attributeGroup>

  <xs:attributeGroup name="messageflags">
    <xs:attribute name="log" type="loglookup">
      <xs:annotation>
        <xs:documentation>
          Message log type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="silent" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Message log silent?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="temporary" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Message log temporary?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="popup" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Message log popup?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="questionflags">
    <xs:attribute name="log" type="loglookup">
      <xs:annotation>
        <xs:documentation>
          Message log type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="temporary" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Message log temporary?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="popup" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Message log popup?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="counter">
    <xs:attributeGroup ref="random" />
    <xs:attribute name="counter" type="countername">
      <xs:annotation>
        <xs:documentation>
          Counter name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="condition">
    <xs:attribute name="negate" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Negate condition?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="chance">
      <xs:annotation>
        <xs:documentation>
          Percentage chance of condition being checked (condition fails if not)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="comment" />
  </xs:attributeGroup>

  <xs:attributeGroup name="action">
    <xs:attribute name="task" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Start action as a separate task?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="chance">
      <xs:annotation>
        <xs:documentation>
          Percentage (or weighted if in &lt;do_any&gt;) chance of action being performed (action is skipped if not)
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="comment" />
  </xs:attributeGroup>

  <xs:attributeGroup name="conditionalaction">
    <xs:attribute name="negate" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Negate condition?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="valueexpressionstring">
      <xs:annotation>
        <xs:documentation>
          Value to match
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attributeGroup ref="rangestring" />
  </xs:attributeGroup>

  <xs:attributeGroup name="cutscenelinkkey">
    <xs:attribute name="key" type="CutsceneLinkKey">
      <xs:annotation>
        <xs:documentation>
          Key that links the cutscene to this cue and all subcues.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="csweight">
    <xs:attribute name="weight" type="expression">
      <xs:annotation>
        <xs:documentation>
          Percentage weight given to this group member (for use in cutscenes).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="colourrgb">
    <xs:attribute name="red" type="rgbcomponent">
      <xs:annotation>
        <xs:documentation>
          Red colour channel value.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="green" type="rgbcomponent">
      <xs:annotation>
        <xs:documentation>
          Green colour channel value.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="blue" type="rgbcomponent">
      <xs:annotation>
        <xs:documentation>
          Blue colour channel value.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="explosion">
    <xs:attribute name="explosion" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Show explosion if in sector (ignored if warp is specified)?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <!-- generic elements -->

  <xs:element name="params">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="param" minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>
              Cue/conversation parameters (when used with cues, only used if cue is a reference)
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation>
                  Parameter name
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation>
                  Parameter value
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attributeGroup ref="comment" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="scriptvalue">
    <xs:annotation>
      <xs:documentation>
        Script value
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="scriptarray" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              Array data (datatype='array' only)
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="scriptvalue" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    Script value
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attributeGroup ref="scriptvalue" />
      <xs:attributeGroup ref="comment" />
    </xs:complexType>
  </xs:element>

  <!-- generic groups -->

  <xs:group name="position">
    <xs:sequence>
      <xs:element name="position" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Position in space
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="position" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="rotation">
    <xs:sequence>
      <xs:element name="rotation" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Rotation in space
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="rotation" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="sector">
    <xs:sequence>
      <xs:element name="sector" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="sector" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="sectors">
    <xs:sequence>
      <xs:element name="sector" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="sector" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="destination">
    <xs:sequence>
      <xs:element name="destination" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Jump destination
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Destination sector
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="gate">
            <xs:annotation>
              <xs:documentation>
                Destination gate
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="location">
		<xs:sequence>
      <xs:group ref="position" />
      <xs:group ref="sector" />
		</xs:sequence>
	</xs:group>

  <xs:group name="locationrotation">
    <xs:sequence>
      <xs:group ref="position" />
      <xs:group ref="rotation" />
      <xs:group ref="sector" />
    </xs:sequence>
  </xs:group>

  <xs:group name="hull">
    <xs:sequence>
      <xs:element name="hull" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Hull value
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="random" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="shield">
    <xs:sequence>
      <xs:element name="shield" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Shield value
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="random" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="progress">
    <xs:sequence>
      <xs:element name="progress" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Progress
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="progress" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="timer">
    <xs:sequence>
      <xs:element name="timer" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Timer
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="timer" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>


  <xs:group name="thumbnails">
    <xs:sequence>
      <xs:element name="thumbnails" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Thumbnails for briefing window
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="thumbnail" minOccurs="0" maxOccurs="3" >
              <xs:annotation>
                <xs:documentation>
                  Thumbnail for briefing window
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attributeGroup ref="order" />
                <xs:attributeGroup ref="image" />
                <xs:attributeGroup ref="disabled" />
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="mission">
    <xs:sequence>
      <xs:element name="mission" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Mission
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="mission" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="reward">
    <xs:sequence>
      <xs:element name="reward" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Reward
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="reward" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="objective">
    <xs:choice>
      <xs:element name="custom" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Custom objective
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="ware" />
          </xs:sequence>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="guidanceobject" />
          <xs:attributeGroup ref="actor" />
          <xs:attribute name="icon" type="objectivelookup">
            <xs:annotation>
              <xs:documentation>
                Custom objective type icon
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="action" type="text">
            <xs:annotation>
              <xs:documentation>
                Custom objective action text (usually a text id)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="text" type="text">
            <xs:annotation>
              <xs:documentation>
                Custom objective description (usually a text id)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="deliver" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Deliver ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="ware" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="destroy" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Destroy object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="dockat" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dock at object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="flyto" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Fly to location or object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="follow" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Follow object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="kill" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Kill actor
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="talkto" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Talk to actor
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="protect" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Protect object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="find" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Find object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="buy" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Buy ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="ware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="sell" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Sell ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="ware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="build" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Build object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="ware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:group name="briefing">
    <xs:sequence>
      <xs:element name="briefing" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Briefing cue and step
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="cueinstance" />
          <xs:attributeGroup ref="step" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="findobject">
    <xs:sequence>
      <xs:element name="jumps" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of jumps (start sector only if node not specified at all)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="range" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
      <xs:element name="distance" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Distance
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="range" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="resource">
    <xs:sequence>
      <xs:element name="resource" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Resource
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="resource">
            <xs:annotation>
              <xs:documentation>
                Yield
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="findresource">
    <xs:sequence>
      <xs:element name="resource" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Resource
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="checkresource">
            <xs:annotation>
              <xs:documentation>
                Yield
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="notoriety">
    <xs:sequence>
      <xs:element name="relation" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Relation
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="racerelation" />
          <xs:attributeGroup ref="comment" />
          <xs:attributeGroup ref="notorietyoperation">
            <xs:annotation>
              <xs:documentation>
                Default operation is add
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="mutual" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Relationship is mutual (ignored unless operation is set, will also reset friend/foe when used)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="relations">
    <xs:sequence>
      <xs:element name="relation" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Object relation
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="relation" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="grouprelations">
    <xs:sequence>
      <xs:element name="relation" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Object relation
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="grouprelation" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="ware">
    <xs:sequence>
      <xs:element name="ware" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="ware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="findware">
    <xs:sequence>
      <xs:element name="ware" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="findware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="wares">
		<xs:sequence>
			<xs:element name="ware" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:attributeGroup ref="ware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

  <xs:group name="shipwares">
    <xs:sequence>
      <xs:element name="ware" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="shipware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="ejectwares">
    <xs:sequence>
      <xs:element name="ware" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="ejectware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:group name="checkwares">
    <xs:sequence>
      <xs:element name="ware" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Ware
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="checkware" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <!-- condition group -->

	<xs:group name="condition">
		<xs:choice>

      <xs:element name="check_all">
        <xs:annotation>
          <xs:documentation>
            List of conditions all of which must be met
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:group ref="condition" minOccurs="1" maxOccurs="unbounded" />
					<xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="counter">
            <xs:annotation>
              <xs:documentation>
                Loop counter
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
			</xs:element>

      <xs:element name="check_any">
        <xs:annotation>
          <xs:documentation>
            List of conditions any one of which must be met
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:group ref="condition" minOccurs="1" maxOccurs="unbounded" />
					<xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="counter">
            <xs:annotation>
              <xs:documentation>
                Loop counter
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
			</xs:element>

      <xs:element name="check_value">
        <xs:annotation>
          <xs:documentation>
            Value is in specified range (both value and range can use expressions)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="valueexpressionstring" />
          <xs:attributeGroup ref="rangestring">
            <xs:annotation>
              <xs:documentation>
                Value range
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="check_age">
        <xs:annotation>
          <xs:documentation>
            Game age value is in specified range (both value and range can use time expressions)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Game age value (usually {player.age})
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Time value range
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="check_time">
        <xs:annotation>
          <xs:documentation>
            Time value is in specified range (both value and range can use time expressions)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Time value
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Time value range
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="check_distance">
        <xs:annotation>
          <xs:documentation>
            Distance value is in specified range (both value and range can use distance expressions)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Distance value
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Distance value range
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="check_quota">
        <xs:annotation>
          <xs:documentation>
            Check whether another mission slot is available for the specified type of mission
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
	        <xs:attributeGroup ref="discipline" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_ship_count">
        <xs:annotation>
          <xs:documentation>
            Number of ships owned by a player (may be filtered)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:attributeGroup ref="condition" />
					<xs:attributeGroup ref="shiptype">
            <xs:annotation>
              <xs:documentation>
                Ship type (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
					<xs:attributeGroup ref="findshipclass">
            <xs:annotation>
              <xs:documentation>
                Ship class (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of ships
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="player_station_count">
        <xs:annotation>
          <xs:documentation>
            Number of stations owned by a player (may be filtered)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="stationtype">
            <xs:annotation>
              <xs:documentation>
                Station type (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findstationclass">
            <xs:annotation>
              <xs:documentation>
                Station class (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of stations
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="player_changed_ship">
        <xs:annotation>
          <xs:documentation>
            Event for the player changing ship
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_target_set">
        <xs:annotation>
          <xs:documentation>
            Event for the player target being set
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_target_lost">
        <xs:annotation>
          <xs:documentation>
            Event for the player target being lost
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_killed_object">
        <xs:annotation>
          <xs:documentation>
            Event for the player killing an object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_scanned_object">
        <xs:annotation>
          <xs:documentation>
            Event for the player scanning an object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="player_built_station">
        <xs:annotation>
          <xs:documentation>
            Event for the player building a station
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="check_inventory">
        <xs:annotation>
          <xs:documentation>
            Check player inventory for item
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Inventory item typename
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="pageid">
            <xs:annotation>
              <xs:documentation>
                Page id of inventory item (ignored if typename is specified, otherwise page 17 used if not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="textid">
            <xs:annotation>
              <xs:documentation>
                Text id of inventory item (ignored if typename is specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="match_sector">
        <xs:annotation>
          <xs:documentation>
            Specified sector matches the race/core/border/coordinates
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="sectormatch">
            <xs:annotation>
              <xs:documentation>
                Sector to check
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="core" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Sector is defined as core?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="border" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Sector is defined as border?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="sectorcoords">
            <xs:annotation>
              <xs:documentation>
                Base coordinates to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of jumps from base coordinates
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_sectors">
        <xs:annotation>
          <xs:documentation>
            Count matching sectors
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="jumps" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Number of jumps (start sector only if node not specified at all)
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attributeGroup ref="range" />
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findsector" />
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Start sector for search
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of sectors
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="sector_is_known">
        <xs:annotation>
          <xs:documentation>
            Specified sector is known to the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Sector to check
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_destroyed_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being destroyed by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_destroyed">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being destroyed by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_attacked_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being attacked by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_attacked">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being attacked by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_repaired_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being repaired by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_repaired">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being repaired by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_targeted">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being targeted
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_captured">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being captured
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_claimed">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being claimed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_scanned">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object being scanned
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_changed_sector">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object changing sector (also triggered when launching from docked)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_docked">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object docking
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_undocked">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object undocking
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_finished">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object finishing the current command
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_ejected">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object ejecting another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="object_collected">
        <xs:annotation>
          <xs:documentation>
            Event for the specified object collecting another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cluster_decoupled">
        <xs:annotation>
          <xs:documentation>
            Event for Kha'ak cluster decoupling
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="objectevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="match_object">
        <xs:annotation>
          <xs:documentation>
            Specified object matches the type/class/race
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="category">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findobjectclass">
            <xs:annotation>
              <xs:documentation>
                Class to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_ships">
        <xs:annotation>
          <xs:documentation>
            Count matching ships
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="shiptype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findshipclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="finddocking" />
          <xs:attribute name="includedocked" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Include ships that are docked at other ships or stations?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="racelogic">
            <xs:annotation>
              <xs:documentation>
                Find only objects where race logic is enabled?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="covered">
            <xs:annotation>
              <xs:documentation>
                Find only objects where race is covered (pirates only)?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_stations">
        <xs:annotation>
          <xs:documentation>
            Count matching stations
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findware" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="stationtype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols, unless wares are specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="stationcategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findstationclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findresource" />
          <xs:attributeGroup ref="finddocking" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_asteroids">
        <xs:annotation>
          <xs:documentation>
            Count matching asteroids
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="scanned" />
          <xs:attributeGroup ref="asteroidtype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_debris">
        <xs:annotation>
          <xs:documentation>
            Count matching debris
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="scanned" />
          <xs:attributeGroup ref="debristype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="collect" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Find only debris that can be collected?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_wrecks">
        <xs:annotation>
          <xs:documentation>
            Count matching wrecks
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="wrecktype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="wreckcategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_crates">
        <xs:annotation>
          <xs:documentation>
            Count matching crates
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="cratetype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="cratecategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="illegal" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Find only creates containing illegal wares?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_gates">
        <xs:annotation>
          <xs:documentation>
            Count matching gates
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="gatetype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="gate" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="count_objects">
        <xs:annotation>
          <xs:documentation>
            Count other matching objects
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="category">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findobjectclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of matching object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_relation">
        <xs:annotation>
          <xs:documentation>
            Relation of specified object to another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="relations">
              <xs:attributeGroup ref="condition" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to set relation for (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_can_use_equipment">
        <xs:annotation>
          <xs:documentation>
            Specified object able to use particular equipment
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Equipment ware type
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_can_carry_cargo">
        <xs:annotation>
          <xs:documentation>
            Specified object able to carry particular cargo
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Cargo ware type
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_has_equipment">
        <xs:annotation>
          <xs:documentation>
            Specified object has particular equipment installed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="checkwares">
              <xs:attributeGroup ref="condition" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to check (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_has_cargo">
        <xs:annotation>
          <xs:documentation>
            Specified object currently carrying particular cargo
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="checkwares">
              <xs:attributeGroup ref="condition" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to check (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_sector">
        <xs:annotation>
          <xs:documentation>
            Specified object is within specified range of a sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of sectors
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_position">
        <xs:annotation>
          <xs:documentation>
            Specified object is within specified range of a position or object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Distance from position
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_is_docked">
        <xs:annotation>
          <xs:documentation>
            Specified object is currently docked (optionally at a specific object)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Docked at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_is_known">
        <xs:annotation>
          <xs:documentation>
            Specified object is known to the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_docking_allowed">
        <xs:annotation>
          <xs:documentation>
            Specified object is allowed to dock at another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Object to dock at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_docking_possible">
        <xs:annotation>
          <xs:documentation>
            Specified object is physically able to dock at another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Object to dock at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_exists">
        <xs:annotation>
          <xs:documentation>
            Specified object exists
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_is_in_group">
        <xs:annotation>
          <xs:documentation>
            Object is a member of the supplied group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="group">
            <xs:annotation>
              <xs:documentation>
                Group to check
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_hull">
        <xs:annotation>
          <xs:documentation>
            Specified object has hull level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Hull percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="object_shields">
        <xs:annotation>
          <xs:documentation>
            Specified object has shield level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to check (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Hull percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_destroyed_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being destroyed by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_destroyed">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being destroyed by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_attacked_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being attacked by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_attacked">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being attacked by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_repaired_by_player">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being repaired by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_repaired">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being repaired by anything other than the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_targeted">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being targeted
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_captured">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being captured
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_claimed">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being claimed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_scanned">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group being scanned
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_changed_sector">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group changing sector (also triggered when launching from docked)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_docked">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group docking
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_undocked">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group undocking
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_finished">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group finishing the current command
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_ejected">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group ejecting another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_collected">
        <xs:annotation>
          <xs:documentation>
            Event for any object in the specified group collecting another object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_cluster_decoupled">
        <xs:annotation>
          <xs:documentation>
            Event for any Kha'ak cluster in group decoupling
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_destroyed">
        <xs:annotation>
          <xs:documentation>
            Event for all objects in group being destroyed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="groupevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_exists">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group exists
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_hull">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group has hull level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Hull percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_shields">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group has shield level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Shield percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_sector">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group is within specified range of a sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of sectors
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_position">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group is within specified range of a position or object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Distance from position
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_is_docked">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group is currently docked (optionally at a specific object)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Docked at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="any_object_is_known">
        <xs:annotation>
          <xs:documentation>
            Any object in specified group is known to the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_exist">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group exist
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="condition" />
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_hull">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group have hull level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Hull percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_shields">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group have shield level (percentage)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Shield percentage
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_sector">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group are within specified range of a sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Number of sectors
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_position">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group are within specified range of a position or object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="range">
            <xs:annotation>
              <xs:documentation>
                Distance from position
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_are_docked">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group are currently docked (optionally at a specific object)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Docked at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="all_objects_are_known">
        <xs:annotation>
          <xs:documentation>
            All objects in specified group are known to the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_activated">
        <xs:annotation>
          <xs:documentation>
            Event for cue being activated
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cueevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_completed">
        <xs:annotation>
          <xs:documentation>
            Event for cue being completed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cueevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_cancelled">
        <xs:annotation>
          <xs:documentation>
            Event for cue being cancelled
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cueevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_destroyed">
        <xs:annotation>
          <xs:documentation>
            Event for cue being destructed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cueevent" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_exists">
        <xs:annotation>
          <xs:documentation>
            Specified cue exists
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_is_active">
        <xs:annotation>
          <xs:documentation>
            Specified cue is currently active
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_is_complete">
        <xs:annotation>
          <xs:documentation>
            Specified cue is complete
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_is_cancelled">
        <xs:annotation>
          <xs:documentation>
            Specified cue is cancelled
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cue_timer">
        <xs:annotation>
          <xs:documentation>
            Specified cue timer value
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="range" />
        </xs:complexType>
      </xs:element>

      <xs:element name="question_answered">
        <xs:annotation>
          <xs:documentation>
            Question answered
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="questionevent" />
          <xs:attributeGroup ref="answer" />
        </xs:complexType>
      </xs:element>

      <xs:element name="conversation_completed">
        <xs:annotation>
          <xs:documentation>
            Conversation completed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="conversation" />
          <xs:attributeGroup ref="answer" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cutscene_started">
        <xs:annotation>
          <xs:documentation>
            A cutscene with the given linkage key has started playing.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="cutscenelinkkey" />
        </xs:complexType>
      </xs:element>

      <xs:element name="cutscene_stopped">
        <xs:annotation>
          <xs:documentation>
            A cutscene with the given linkage key has finished playing.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="cutscenelinkkey" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="objective_cancelled">
        <xs:annotation>
          <xs:documentation>
            Event for an objective being cancelled
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="briefing_viewed">
        <xs:annotation>
          <xs:documentation>
            Event for a briefing being viewed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

      <xs:element name="briefing_closed">
        <xs:annotation>
          <xs:documentation>
            Event for a briefing being closed
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="condition" />
          <xs:attributeGroup ref="cue" />
        </xs:complexType>
      </xs:element>

    </xs:choice>
	</xs:group>

  <!-- timing group -->

  <xs:group name="timing">
		<xs:sequence>

      <xs:element name="count" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Number of times to perform the action
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="random" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>

      <xs:element name="time" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Time range in milliseconds after activation
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="random" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
      </xs:element>

      <xs:element name="interval" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Interval range in milliseconds (timings are random if no interval specified)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:attributeGroup ref="random" />
          <xs:attributeGroup ref="comment" />
        </xs:complexType>
			</xs:element>

    </xs:sequence>
	</xs:group>

  <!-- action group -->

  <xs:group name="action">
		<xs:choice>

      <xs:element name="do_all">
        <xs:annotation>
          <xs:documentation>
            Actions in all sub-nodes should be performed.
          </xs:documentation>
        </xs:annotation>
				<xs:complexType>
					<xs:group ref="action" minOccurs="1" maxOccurs="unbounded" />
					<xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="counter">
            <xs:annotation>
              <xs:documentation>
                Loop counter
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
			</xs:element>

      <xs:element name="do_any">
        <xs:annotation>
          <xs:documentation>
            Actions in one randomly-selected sub-node should be performed.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:group ref="action" minOccurs="1" maxOccurs="unbounded" />
					<xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="counter">
            <xs:annotation>
              <xs:documentation>
                Loop counter
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
			</xs:element>

      <xs:element name="do_if">
        <xs:annotation>
          <xs:documentation>
            Actions should be performed only if the value matches.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="action" minOccurs="1" maxOccurs="unbounded" />
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="conditionalaction" />
        </xs:complexType>
      </xs:element>

      <xs:element name="do_choose">
        <xs:annotation>
          <xs:documentation>
            Actions in the first sub-node in which the value matches only should be perfomed.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="do_when" minOccurs="1" maxOccurs="unbounded">
              <xs:complexType>
                <xs:group ref="action" minOccurs="1" maxOccurs="unbounded" />
                <xs:attributeGroup ref="conditionalaction" />
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
            <xs:element name="do_otherwise" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:group ref="action" minOccurs="1" maxOccurs="unbounded" />
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="reward_player">
        <xs:annotation>
          <xs:documentation>
            Add reward or penalty to player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="money" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attributeGroup ref="random">
                  <xs:annotation>
                    <xs:documentation>
                      Money reward/penalty
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
            <xs:element name="traderank" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attributeGroup ref="randomrank">
                  <xs:annotation>
                    <xs:documentation>
                      Trade rank reward/penalty
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
            <xs:element name="fightrank" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attributeGroup ref="randomrank">
                  <xs:annotation>
                    <xs:documentation>
                      Fight rank reward/penalty
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
            <xs:element name="notoriety" type="notoriety" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Race notoriety list
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="equipment" type="wares" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Equipment list
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="cargo" type="wares" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Cargo list
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="property" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ship" type="ship" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        New ship(s)
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="station" type="station" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        New station(s)
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="stationary" type="stationary" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        New stationary object(s)
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="drone" type="drone" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        New drone(s) (fighter or freight)
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="object" type="object" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        New other object(s) (missile, special, etc.)
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
                <xs:attributeGroup ref="object">
                  <xs:annotation>
                    <xs:documentation>
                      Existing object
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
                <xs:attributeGroup ref="group">
                  <xs:annotation>
                    <xs:documentation>
                      Existing group of objects
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
              </xs:complexType>
            </xs:element>
            <xs:element name="map" type="map" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Sector list
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
					<xs:attributeGroup ref="action" />
				</xs:complexType>
			</xs:element>

      <xs:element name="set_race_aggression">
        <xs:annotation>
          <xs:documentation>
            Set race aggression level
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="race" />
          <xs:attributeGroup ref="random" />
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_mission_rank">
        <xs:annotation>
          <xs:documentation>
            Set player mission rank
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="missionrank" />
          <xs:attributeGroup ref="titleid" />
          <xs:attributeGroup ref="textid" />
          <xs:attributeGroup ref="randomnotoriety" />
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="increment_mission_rank">
        <xs:annotation>
          <xs:documentation>
            Increment player mission rank
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="missionrank" />
          <xs:attributeGroup ref="titleid" />
          <xs:attributeGroup ref="textid" />
          <xs:attributeGroup ref="randomnotoriety" />
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_mission_rank">
        <xs:annotation>
          <xs:documentation>
            Remove player mission rank
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="missionrank" />
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_target">
        <xs:annotation>
          <xs:documentation>
            Set player target
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to target
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
				</xs:complexType>
			</xs:element>

      <xs:element name="increment_statistic">
        <xs:annotation>
          <xs:documentation>
            Increments a player statistic counter
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="statistic" />
          <xs:attributeGroup ref="random" />
        </xs:complexType>
      </xs:element>

      <xs:element name="create_briefing">
        <xs:annotation>
          <xs:documentation>
            Create a mission briefing
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="mission" minOccurs="0" maxOccurs="1" />
            <xs:group ref="reward" minOccurs="0" maxOccurs="1" />
            <xs:group ref="timer" minOccurs="0" maxOccurs="1" />
            <xs:group ref="thumbnails" minOccurs="0" maxOccurs="1" />
            <xs:element name="objectives" minOccurs="0" maxOccurs="1" >
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="objective" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:group ref="thumbnails" minOccurs="0" maxOccurs="1" />
                        <xs:group ref="objective" minOccurs="0" maxOccurs="1" />
                      </xs:sequence>
                      <xs:attributeGroup ref="step" />
                      <xs:attributeGroup ref="background" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cueinstance" />
          <xs:attributeGroup ref="info">
            <xs:annotation>
              <xs:documentation>
                Objective title and task description
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="background" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_briefing">
        <xs:annotation>
          <xs:documentation>
            Remove mission briefing
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Briefing associated with instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_objective">
        <xs:annotation>
          <xs:documentation>
            Set current objective for a mission
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="briefing" minOccurs="0" maxOccurs="1" />
            <xs:group ref="mission" minOccurs="0" maxOccurs="1" />
            <xs:group ref="reward" minOccurs="0" maxOccurs="1" />
            <xs:group ref="timer" minOccurs="0" maxOccurs="1" />
            <xs:group ref="progress" minOccurs="0" maxOccurs="1" />
            <xs:group ref="objective" minOccurs="0" maxOccurs="1" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cueinstance" />
          <xs:attributeGroup ref="menuid" />
          <xs:attributeGroup ref="info">
            <xs:annotation>
              <xs:documentation>
                Objective title and task description
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="noabort" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Don't allow objective to be aborted.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="silent" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Stop information box from alerting player of update.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_objective">
        <xs:annotation>
          <xs:documentation>
            Remove player objective
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Objective associated with instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="status" type="objectivestatuslookupexpression">
            <xs:annotation>
              <xs:documentation>
                Objective status
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_offer">
        <xs:annotation>
          <xs:documentation>
            Create a mission offer
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="params" minOccurs="0" maxOccurs="1" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="conversation" />
          <xs:attributeGroup ref="cueinstance" />
          <xs:attributeGroup ref="discipline" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_offer">
        <xs:annotation>
          <xs:documentation>
            Remove a mission offer
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="conversation" />
          <xs:attributeGroup ref="discipline" />
        </xs:complexType>
      </xs:element>

      <xs:element name="load_text">
        <xs:annotation>
          <xs:documentation>
            Loads a text file
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="fileid">
            <xs:annotation>
              <xs:documentation>
                File id of file to load
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="incoming_message">
        <xs:annotation>
          <xs:documentation>
            Send incoming message to player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:attributeGroup ref="action" />
					<xs:attributeGroup ref="message" />
          <xs:attributeGroup ref="messageflags" />
				</xs:complexType>
			</xs:element>

      <xs:element name="warp_player">
        <xs:annotation>
          <xs:documentation>
            Warp player to specified sector and location
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
					<xs:group ref="locationrotation" />
					<xs:attributeGroup ref="action" />
				</xs:complexType>
			</xs:element>

      <xs:element name="add_inventory">
        <xs:annotation>
          <xs:documentation>
            Add item to player inventory
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Inventory item typename
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="pageid">
            <xs:annotation>
              <xs:documentation>
                Page id of inventory item (ignored if typename is specified, otherwise page 17 used if not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="textid">
            <xs:annotation>
              <xs:documentation>
                Text id of inventory item (ignored if typename is specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_inventory">
        <xs:annotation>
          <xs:documentation>
            Add item to player inventory
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Inventory item typename
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="pageid">
            <xs:annotation>
              <xs:documentation>
                Page id of inventory item (ignored if typename is specified, otherwise page 17 used if not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="textid">
            <xs:annotation>
              <xs:documentation>
                Text id of inventory item (ignored if typename is specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_headquarters_upgrades">
        <xs:annotation>
          <xs:documentation>
            Set number of upgrades for the player's headquarters
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attribute name="upgrades" type="expression">
            <xs:annotation>
              <xs:documentation>
                Number of upgrades
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="add_blueprints_to_headquarters">
        <xs:annotation>
          <xs:documentation>
            Add blueprints for object to the player's headquarters
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Object typename that the headquarters will be able to produce
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_sector">
        <xs:annotation>
          <xs:documentation>
            Set sector from expression
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="sectorname" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Expression returning internal id of a sector
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_sector">
        <xs:annotation>
          <xs:documentation>
            Find sector and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findsector" />
          <xs:attributeGroup ref="sectorname" />
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Start sector for search
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="random">
            <xs:annotation>
              <xs:documentation>
                Number of jumps
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
			</xs:element>

      <xs:element name="add_map">
        <xs:annotation>
          <xs:documentation>
            Add sectors to map
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="sectors" minOccurs="0" maxOccurs="1" />
          <xs:attributeGroup ref="action" />
        </xs:complexType>
      </xs:element>

      <xs:element name="alter_sector">
        <xs:annotation>
          <xs:documentation>
            Alter sector properties
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Sector to change
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object defining sector to change (ignored if sector is supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="background" type="backgroundlookupexpression">
            <xs:annotation>
              <xs:documentation>
                Sector background type
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="size" type="expression">
            <xs:annotation>
              <xs:documentation>
                Sector size
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="population" type="expression">
            <xs:annotation>
              <xs:documentation>
                Sector population
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="musicid">
            <xs:annotation>
              <xs:documentation>
                Sector music
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_sector_owner">
        <xs:annotation>
          <xs:documentation>
            Set owner race of specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="sector">
            <xs:annotation>
              <xs:documentation>
                Sector to set owner of
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="race" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_object">
        <xs:annotation>
          <xs:documentation>
            Set object from expression
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="leader" />
          <xs:attributeGroup ref="csweight" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Expression returning internal id of an object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_ship">
        <xs:annotation>
          <xs:documentation>
            Create a ship
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ship">
              <xs:sequence>
                <xs:group ref="hull" minOccurs="0" maxOccurs="1" />
                <xs:group ref="shield" minOccurs="0" maxOccurs="1" />
              </xs:sequence>
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="wing" />
              <xs:attributeGroup ref="racelogic" />
              <xs:attributeGroup ref="covered" />
              <xs:attributeGroup ref="boardable" />
              <xs:attributeGroup ref="capturable" />
              <xs:attributeGroup ref="sellable" />
              <xs:attributeGroup ref="communicates" />
              <xs:attributeGroup ref="warp" />
              <xs:attributeGroup ref="csweight" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_station">
        <xs:annotation>
          <xs:documentation>
            Create a station
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="station">
              <xs:sequence>
                <xs:group ref="hull" minOccurs="0" maxOccurs="1" />
                <xs:group ref="shield" minOccurs="0" maxOccurs="1" />
              </xs:sequence>
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="csweight" />
              <xs:attributeGroup ref="safety" />
              <xs:attributeGroup ref="tasks">
                <xs:annotation>
                  <xs:documentation>
                    All tasks will be started if not supplied
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_asteroid">
        <xs:annotation>
          <xs:documentation>
            Create an asteroid
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="asteroid">
              <xs:attributeGroup ref="safety" />
              <xs:attributeGroup ref="minable" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_debris">
        <xs:annotation>
          <xs:documentation>
            Create debris
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="debris">
              <xs:sequence>
                <xs:group ref="hull" minOccurs="0" maxOccurs="1" />
              </xs:sequence>
              <xs:attributeGroup ref="safety" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_wreck">
        <xs:annotation>
          <xs:documentation>
            Create station/ship wreck
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="wreck">
              <xs:sequence>
                <xs:group ref="hull" minOccurs="0" maxOccurs="1" />
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_crate">
        <xs:annotation>
          <xs:documentation>
            Create ware crate
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="crate">
              <xs:sequence>
                <xs:group ref="hull" minOccurs="0" maxOccurs="1" />
              </xs:sequence>
              <xs:attribute name="secret" type="boolean">
                <xs:annotation>
                  <xs:documentation>
                    Secret container?
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_gate">
        <xs:annotation>
          <xs:documentation>
            Create gate
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="gate">
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="safety" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_astronaut">
        <xs:annotation>
          <xs:documentation>
            Create astronaut
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="astronaut">
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="racelogic" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_spacefly">
        <xs:annotation>
          <xs:documentation>
            Create spacefly
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="spacefly">
              <xs:attribute name="swarm" type="boolean">
                <xs:annotation>
                  <xs:documentation>
                    Create swarm (swarm members other than leader are not tracked by MD)?
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_ufo">
        <xs:annotation>
          <xs:documentation>
            Create UFO
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ufo">
              <xs:attributeGroup ref="racelogic" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_stationary">
        <xs:annotation>
          <xs:documentation>
            Create stationary object (beacon, mine, lasertower or satellite)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="stationary">
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="racelogic" />
              <xs:attributeGroup ref="active" /> 
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_drone">
        <xs:annotation>
          <xs:documentation>
            Create drone (fighter or freight)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="drone">
              <xs:attributeGroup ref="race">
                <xs:annotation>
                  <xs:documentation>
                    Owner
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="racelogic" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_special">
        <xs:annotation>
          <xs:documentation>
            Create special object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="object">
              <xs:sequence>
                <xs:element name="parts" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="ship" type="ship" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                          <xs:documentation>
                            Parts based on the ship class
                          </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="special" type="special" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                          <xs:documentation>
                            Parts based on the special class
                          </xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute name="channel" type="expression">
                <xs:annotation>
                  <xs:documentation>
                    Video channel (positive number for video, negative for video list, only applies to certain objects e.g. ad signs)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_planet">
        <xs:annotation>
          <xs:documentation>
            Create planet scenery
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="planet">
              <!-- no extensions currently -->
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_sun">
        <xs:annotation>
          <xs:documentation>
            Create sun scenery
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="sun">
              <!-- no extensions currently -->
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_object">
        <xs:annotation>
          <xs:documentation>
            Create other object (missile etc.)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="object">
              <!-- no extensions currently -->
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_ship">
        <xs:annotation>
          <xs:documentation>
            Find ship and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="shiptype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findshipclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="finddocking" />
          <xs:attribute name="includedocked" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Include ships that are docked at other ships or stations?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="racelogic">
            <xs:annotation>
              <xs:documentation>
                Find only objects where race logic is enabled?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="covered">
            <xs:annotation>
              <xs:documentation>
                Find only objects where race is covered (pirates only)?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_station">
        <xs:annotation>
          <xs:documentation>
            Find station and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findware" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="stationtype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols, unless wares are specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="stationcategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findstationclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="makermask">
            <xs:annotation>
              <xs:documentation>
                Maker race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="serial" />
          <xs:attributeGroup ref="findresource" />
          <xs:attributeGroup ref="finddocking" />
        </xs:complexType>
      </xs:element>

      <xs:element name="find_asteroid">
        <xs:annotation>
          <xs:documentation>
            Find asteroid and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="scanned" />
          <xs:attributeGroup ref="asteroidtype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_debris">
        <xs:annotation>
          <xs:documentation>
            Find debris and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="scanned" />
          <xs:attributeGroup ref="debristype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="collect" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Find only debris that can be collected?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_wreck">
        <xs:annotation>
          <xs:documentation>
            Find wreck and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
            <xs:group ref="findresource" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="wrecktype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="wreckcategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_crate">
        <xs:annotation>
          <xs:documentation>
            Find crate and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="cratetype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="cratecategory">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="illegal" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Find only creates containing illegal wares?
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="find_gate">
        <xs:annotation>
          <xs:documentation>
            Find gate and assign name
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gatetype">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="gate" />
        </xs:complexType>
      </xs:element>

      <xs:element name="find_object">
        <xs:annotation>
          <xs:documentation>
            Find other object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="location" />
            <xs:group ref="findobject" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="findobject" />
          <xs:attributeGroup ref="objectname" />
          <xs:attributeGroup ref="group" />
          <xs:attribute name="max" type="expression">
            <xs:annotation>
              <xs:documentation>
                Maximum number of objects to find
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="type">
            <xs:annotation>
              <xs:documentation>
                Type to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="category">
            <xs:annotation>
              <xs:documentation>
                Category to match (ignored if type supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="findobjectclass">
            <xs:annotation>
              <xs:documentation>
                Class to match
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="racemask">
            <xs:annotation>
              <xs:documentation>
                Race to match (multiple values may be separated by | symbols)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="destroy_object">
        <xs:annotation>
          <xs:documentation>
            Destroy specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="warp" />
          <xs:attributeGroup ref="explosion" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_object">
        <xs:annotation>
          <xs:documentation>
            Remove object from cue tracking (does not destroy it)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_owner">
        <xs:annotation>
          <xs:documentation>
            Set owner race of specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to set owner of
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="race" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_relation">
        <xs:annotation>
          <xs:documentation>
            Set relation of specified object to another object or group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="grouprelations">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to set relation for (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_wing">
        <xs:annotation>
          <xs:documentation>
            Set wing membership for specified ship
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to set wing for
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="wing" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_hull">
        <xs:annotation>
          <xs:documentation>
            Set hull level (percentage) of specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to set (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="random" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_shield">
        <xs:annotation>
          <xs:documentation>
            Set shield level (percentage) of specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object to set (player ship if not specified)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="random" />
        </xs:complexType>
      </xs:element>

      <xs:element name="add_cargo">
        <xs:annotation>
          <xs:documentation>
            Add cargo to specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="shipwares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to add to (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="add_equipment">
        <xs:annotation>
          <xs:documentation>
            Add equipment to specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="shipwares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to add to (player ship if not specified)
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="add_resources">
        <xs:annotation>
          <xs:documentation>
            Add primary resources to specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="wares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to add to
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="add_secondary_resources">
        <xs:annotation>
          <xs:documentation>
            Add secondary resources to specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="wares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to add to
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="add_products">
        <xs:annotation>
          <xs:documentation>
            Add products to specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="wares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to add to
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="start_tasks">
        <xs:annotation>
          <xs:documentation>
            Start tasks on a station
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="tasks" />
        </xs:complexType>
      </xs:element>

      <xs:element name="stop_tasks">
        <xs:annotation>
          <xs:documentation>
            Stop tasks on a station
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="tasks" />
        </xs:complexType>
      </xs:element>

      <xs:element name="eject_cargo">
        <xs:annotation>
          <xs:documentation>
            Eject cargo as ware crate(s)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ejectwares">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object">
                <xs:annotation>
                  <xs:documentation>
                    Object to eject from
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
              <xs:attributeGroup ref="group">
                <xs:annotation>
                  <xs:documentation>
                    Group for created ware crates
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_command">
        <xs:annotation>
          <xs:documentation>
            Set command for specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="command">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="object" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_safety">
        <xs:annotation>
          <xs:documentation>
            Set whether specified should be set to a safe position when player enters sector
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="safety" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_invincible">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object is invincible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="invincible" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_boardable">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object can be boarded even if invincible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="boardable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_capturable">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object can be captured
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="capturable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_sellable">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object can be sold by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="sellable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_minable">
        <xs:annotation>
          <xs:documentation>
            Set whether specified asteroid can be mined
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="minable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_communicates">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object will communicate with the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="communicates" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_highlight">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object is highlighted in sector map
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="highlight" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_racelogic">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object should follow standard race logic
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="racelogic" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_covered">
        <xs:annotation>
          <xs:documentation>
            Set whether specified object's race should be covered (pirates only)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="covered" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_override_name">
        <xs:annotation>
          <xs:documentation>
            Set override name for the specified object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="overridename" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_pilot_data">
        <xs:annotation>
          <xs:documentation>
            Set object pilot data
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="pilot" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_known">
        <xs:annotation>
          <xs:documentation>
            Set whether object is known to player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="known" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_hidden">
        <xs:annotation>
          <xs:documentation>
            Set whether object is hidden in the sector map
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="hidden" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_active">
        <xs:annotation>
          <xs:documentation>
            Set whether object is active (armed, mines only)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="active" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_scanned">
        <xs:annotation>
          <xs:documentation>
            Set whether an asteroid or debris has been scanned by the player, or whether a ship's cargo is visible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="scanned" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_homebase">
        <xs:annotation>
          <xs:documentation>
            Set homebase of object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="homebase" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_state">
        <xs:annotation>
          <xs:documentation>
            Set object state
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="gate">
            <xs:annotation>
              <xs:documentation>
                Hub gate for which to set lock state (ignored if lock state not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="lock" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Hub gate lock state (ignored if gate not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="realign" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Allow immediate hub gate realignment
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="realign_gate">
        <xs:annotation>
          <xs:documentation>
            Realign gate using hub
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="destination" />
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Hub station
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="gate">
            <xs:annotation>
              <xs:documentation>
                Hub gate
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="force" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Ignore wait time and energy requirements
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="decouple_cluster">
        <xs:annotation>
          <xs:documentation>
            Decouple Kha'ak cluster
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
        </xs:complexType>
      </xs:element>

      <xs:element name="warp_object">
        <xs:annotation>
          <xs:documentation>
            Warp specified object to specified sector and location
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="locationrotation" />
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="dockobject">
            <xs:annotation>
              <xs:documentation>
                Dock at
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="abandon_ship">
        <xs:annotation>
          <xs:documentation>
            Force pilot to leave ship
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="objectname">
            <xs:annotation>
              <xs:documentation>
                Object name to assign to ejected pilot
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="leader" />
          <xs:attributeGroup ref="csweight" />
        </xs:complexType>
      </xs:element>

      <xs:element name="fire_laser">
        <xs:annotation>
          <xs:documentation>
            Fire laser
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="commandobject" />
          <xs:attributeGroup ref="turret" />
        </xs:complexType>
      </xs:element>

      <xs:element name="fire_missile">
        <xs:annotation>
          <xs:documentation>
            Fire missile
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="commandobject" />
          <xs:attributeGroup ref="turret" />
          <xs:attributeGroup ref="missiletype" />
          <xs:attributeGroup ref="objectname">
            <xs:annotation>
              <xs:documentation>
                Object name to assign to missile (only works in-sector)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="destroy_group">
        <xs:annotation>
          <xs:documentation>
            Destroy all objects in specified group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="warp" />
          <xs:attributeGroup ref="explosion" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_group">
        <xs:annotation>
          <xs:documentation>
            Remove all objects in specified group from cue tracking (does not destroy them)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="copy_group">
        <xs:annotation>
          <xs:documentation>
            Create an exact copy of an existing group under a new name (source and destination groups must have the same scope)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Name of the new group (copy).
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="add_object_to_group">
        <xs:annotation>
          <xs:documentation>
            Add object to group (object and group must have the same scope)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="csweight" />
        </xs:complexType>
      </xs:element>

      <xs:element name="add_wing_to_group">
        <xs:annotation>
          <xs:documentation>
            Add all members of wing to group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="wing" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="csweight" />
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_object_from_group">
        <xs:annotation>
          <xs:documentation>
            Remove object from group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_leader">
        <xs:annotation>
          <xs:documentation>
            Set leader for specified group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_formation">
        <xs:annotation>
          <xs:documentation>
            Set formation for specified group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="formation" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_wing">
        <xs:annotation>
          <xs:documentation>
            Set wing for specified group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="wing" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_command">
        <xs:annotation>
          <xs:documentation>
            Set command for specified group (commands for individual objects will be set appropriately)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="command">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="group" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_owner">
        <xs:annotation>
          <xs:documentation>
            Set the owner race of all objects in specified group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="race" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_relation">
        <xs:annotation>
          <xs:documentation>
            Set relation of specified group to another object or group
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="grouprelations">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="group">
                <xs:annotation>
                  <xs:documentation>
                    Group to set relation for
                  </xs:documentation>
                </xs:annotation>
              </xs:attributeGroup>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_invincible">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group are invincible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="invincible" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_boardable">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group can be boarded even if invincible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="boardable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_capturable">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group can be captured
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="capturable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_sellable">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group can be sold by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="sellable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_minable">
        <xs:annotation>
          <xs:documentation>
            Set whether all asteroids in specified group can be mined
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="minable" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_communicates">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group will communicate with the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="communicates" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_highlight">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group are highlighted in sector map
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="highlight" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_racelogic">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group should follow standard race logic
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="racelogic" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_covered">
        <xs:annotation>
          <xs:documentation>
            Set whether all objects in specified group's race should be covered (pirates only)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="covered" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_known">
        <xs:annotation>
          <xs:documentation>
            Set whether group is known to player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="known" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_hidden">
        <xs:annotation>
          <xs:documentation>
            Set whether group is hidden in the sector map
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="hidden" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_active">
        <xs:annotation>
          <xs:documentation>
            Set whether group is active (armed, mines only)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="active" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_scanned">
        <xs:annotation>
          <xs:documentation>
            Set whether group has been scanned by the player
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="scanned" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_group_homebase">
        <xs:annotation>
          <xs:documentation>
            Set group homebase
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
          <xs:attributeGroup ref="homebase" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_wing_command">
        <xs:annotation>
          <xs:documentation>
            Set command for specified wing
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="command">
              <xs:attributeGroup ref="action" />
              <xs:attributeGroup ref="wing" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>

      <xs:element name="warp_group">
        <xs:annotation>
          <xs:documentation>
            Warp all objects in specified group to specified sector and location
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="location" />
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="group" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_actor">
        <xs:annotation>
          <xs:documentation>
            Set actor from expression
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actorname" />
          <xs:attributeGroup ref="valueexpression">
            <xs:annotation>
              <xs:documentation>
                Expression returning internal id of an actor
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="create_actor">
        <xs:annotation>
          <xs:documentation>
            Create actor object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actorname" />
          <xs:attributeGroup ref="race" />
          <xs:attributeGroup ref="subrace" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Location for actor
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="actorlocation">
            <xs:annotation>
              <xs:documentation>
                Sub-location for actor
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="character" />
          <xs:attributeGroup ref="voice" />
          <xs:attributeGroup ref="face">
            <xs:annotation>
              <xs:documentation>
                Actor face id
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="voiceflags" type="expression">
            <xs:annotation>
              <xs:documentation>
                Actor voice flags (for random voices)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="gender" type="genderlookup">
            <xs:annotation>
              <xs:documentation>
                Actor gender
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="invincible" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_actor_location">
        <xs:annotation>
          <xs:documentation>
            Set location of actor object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Location for actor
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="actorlocation">
            <xs:annotation>
              <xs:documentation>
                Sub-location for actor
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="clear_actor_location">
        <xs:annotation>
          <xs:documentation>
            Clear location of actor object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
        </xs:complexType>
      </xs:element>

      <xs:element name="destroy_actor">
        <xs:annotation>
          <xs:documentation>
            Destroy actor object
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_actor_invincible">
        <xs:annotation>
          <xs:documentation>
            Set whether specified actor is invincible
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="actor" />
          <xs:attributeGroup ref="invincible" />
        </xs:complexType>
      </xs:element>

      <xs:element name="show_help">
        <xs:annotation>
          <xs:documentation>
            Show popup help message
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="textid">
            <xs:annotation>
              <xs:documentation>
                Help text id
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="force" type="boolean">
            <xs:annotation>
              <xs:documentation>
                Force tip to be redisplayed (only used with help text id)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="key" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Virtual key id (ignored if text id is provided)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="preferred" type="expression">
            <xs:annotation>
              <xs:documentation>
                Preferred raw key id (only used with virtual key id)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="text">
            <xs:annotation>
              <xs:documentation>
                Custom help text (ignored if help text id or virtual key id is provided)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="duration">
            <xs:annotation>
              <xs:documentation>
                Popup duration (only used with custom help text, default is calculated from custom help text length)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="fade_scene">
        <xs:annotation>
          <xs:documentation>
            Fade scene in/out
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="fade" />
        </xs:complexType>
      </xs:element>

      <xs:element name="play_sound">
        <xs:annotation>
          <xs:documentation>
            Play sound
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="soundid" />
        </xs:complexType>
      </xs:element>

      <xs:element name="play_music">
        <xs:annotation>
          <xs:documentation>
            Play a music track
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="musicid">
            <xs:annotation>
              <xs:documentation>
                Music track (omit to restore default music)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="play_text">
        <xs:annotation>
          <xs:documentation>
            Play (speak) text (subtitles only if no voice recording is associated with text)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="line" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attributeGroup ref="line"/>
                <xs:attributeGroup ref="comment"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="line">
            <xs:annotation>
              <xs:documentation>
                Single line (additional lines ignored if single line supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="priority" />
        </xs:complexType>
      </xs:element>

      <xs:element name="play_movie">
        <xs:annotation>
          <xs:documentation>
            Play movie
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="movie" />
          <xs:attributeGroup ref="movieid" />
          <xs:attributeGroup ref="fade" />
        </xs:complexType>
      </xs:element>

      <xs:element name="play_cinematic">
        <xs:annotation>
          <xs:documentation>
            Play cinematic
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="position" />
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Target object
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="distance">
            <xs:annotation>
              <xs:documentation>
                Distance from target
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="duration">
            <xs:annotation>
              <xs:documentation>
                Cinematic timing
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="play_subtitles">
        <xs:annotation>
          <xs:documentation>
            Play subtitles
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="message">
            <xs:annotation>
              <xs:documentation>
                Subtitle text
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="duration">
            <xs:annotation>
              <xs:documentation>
                Subtitle duration
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="play_cutscene">
        <xs:annotation>
          <xs:documentation>
            Play cutscene
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="object" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  Cutscene objects
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attributeGroup ref="object" />
                <xs:attributeGroup ref="objectalias">
                  <xs:annotation>
                    <xs:documentation>
                      Alias used in cutscene
                    </xs:documentation>
                  </xs:annotation>
                </xs:attributeGroup>
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="file" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Cutscene file
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="cutscene_event">
        <xs:annotation>
          <xs:documentation>
            Trigger a timing event in the linked cutscene
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="event" type="cseventname">
            <xs:annotation>
              <xs:documentation>
                Name of the timing event to trigger.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="set_cutscene_sector">
        <xs:annotation>
          <xs:documentation>
            Add a named sector that corresponds to a cutscene environment
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="sectorname" />
          <xs:attribute name="environment" type="csenvname">
            <xs:annotation>
              <xs:documentation>
                Name of the environment in the cutscene.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="run_script">
        <xs:annotation>
          <xs:documentation>
            Run script
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="scriptargs" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Script arguments
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element ref="scriptvalue" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="comment" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="script" />
          <xs:attributeGroup ref="object">
            <xs:annotation>
              <xs:documentation>
                Object on which to run script (runs globally if not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attribute name="taskid" type="expression">
            <xs:annotation>
              <xs:documentation>
                Script task id (uses task 0 if not supplied)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="complete_cue">
        <xs:annotation>
          <xs:documentation>
            Complete cue
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Complete instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="cancel_cue">
        <xs:annotation>
          <xs:documentation>
            Cancel cue
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Cancel instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="reset_cue">
        <xs:annotation>
          <xs:documentation>
            Reset cue
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Reset instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="destroy_cue">
        <xs:annotation>
          <xs:documentation>
            Destroy cue (should normally only be used in patching)
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="cue" />
          <xs:attributeGroup ref="instantiate">
            <xs:annotation>
              <xs:documentation>
                Destroy instance or static cue?
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="enable_gamestart">
        <xs:annotation>
          <xs:documentation>
            Enable gamestart
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attribute name="requirements" type="expression">
            <xs:annotation>
              <xs:documentation>
                Requirements mask (to match requirements masks in gamestarts.xml)
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>

      <xs:element name="ask_question">
        <xs:annotation>
          <xs:documentation>
            Ask question
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="questionname" />
          <xs:attributeGroup ref="message" />
          <xs:attributeGroup ref="questionflags" />
        </xs:complexType>
      </xs:element>

      <xs:element name="set_value">
        <xs:annotation>
          <xs:documentation>
            Set local/global value
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="valuename" />
          <xs:attributeGroup ref="operation">
            <xs:annotation>
              <xs:documentation>
                Default operation is set
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
          <xs:attributeGroup ref="random">
            <xs:annotation>
              <xs:documentation>
                Value
              </xs:documentation>
            </xs:annotation>
          </xs:attributeGroup>
        </xs:complexType>
      </xs:element>

      <xs:element name="remove_value">
        <xs:annotation>
          <xs:documentation>
            Remove local/global value
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attributeGroup ref="action" />
          <xs:attributeGroup ref="value" />
        </xs:complexType>
      </xs:element>


  </xs:choice>
  </xs:group>

  <!-- main complex types -->

	<xs:complexType name="cue">
		<xs:sequence>

      <xs:element name="documentation" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="content" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attribute name="reference" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Cue reference
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Cue name
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="cuetype">
                  <xs:annotation>
                    <xs:documentation>
                      Cue type
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="version" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attribute name="number" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Internal version number
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="date" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Date of current version
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="status" type="versionstatus">
                  <xs:annotation>
                    <xs:documentation>
                      Status of current version
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="params" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="param" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Parameter name
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="description" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Parameter description
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="type" type="paramtype">
                        <xs:annotation>
                          <xs:documentation>
                            Parameter data type
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="default" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Default parameter value
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="compulsory" type="boolean">
                        <xs:annotation>
                          <xs:documentation>
                            Parameter must be supplied?
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="returns" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="return" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Return value name
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="description" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Return value description
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="type" type="returntype">
                        <xs:annotation>
                          <xs:documentation>
                            Return value data type
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="history" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="change" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="author" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Author name
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="date" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Date of change
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="description" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Change description
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="todo" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="item" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="author" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Author name
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="date" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Date of change
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="description" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Description of change
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="priority" type="todopriority">
                        <xs:annotation>
                          <xs:documentation>
                            Priority of change
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:choice>

        <xs:element ref="params"  minOccurs="0" maxOccurs="1" />

        <xs:sequence>

          <xs:element name="condition" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Cue condition
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:element ref="params"  minOccurs="0" maxOccurs="1" />
                <xs:group ref="condition" minOccurs="0" maxOccurs="1" />
              </xs:choice>
              <xs:attribute name="ref" type="cuename">
                <xs:annotation>
                  <xs:documentation>
                    Library cue name (all other condition data is ignored if this is present)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attributeGroup ref="comment" />
            </xs:complexType>
          </xs:element>

          <xs:element name="timing" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Cue timing
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:element ref="params"  minOccurs="0" maxOccurs="1" />
                <xs:group ref="timing" minOccurs="0" maxOccurs="1" />
              </xs:choice>
              <xs:attribute name="ref" type="cuename">
                <xs:annotation>
                  <xs:documentation>
                    Library cue name (all other timing data is ignored if this is present)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attributeGroup ref="comment" />
            </xs:complexType>
          </xs:element>

          <xs:element name="action" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Cue action
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:element ref="params"  minOccurs="0" maxOccurs="1" />
                <xs:group ref="action" minOccurs="0" maxOccurs="1" />
              </xs:choice>
              <xs:attribute name="ref" type="cuename">
                <xs:annotation>
                  <xs:documentation>
                    Library cue name (all other action data is ignored if this is present)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attributeGroup ref="comment" />
            </xs:complexType>
          </xs:element>

          <xs:element name="force" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Cue force action (for debugging)
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:element ref="params"  minOccurs="0" maxOccurs="1" />
                <xs:group ref="action" minOccurs="0" maxOccurs="1" />
              </xs:choice>
              <xs:attribute name="ref" type="cuename">
                <xs:annotation>
                  <xs:documentation>
                    Library cue name (all other force data is ignored if this is present)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attributeGroup ref="comment" />
            </xs:complexType>
          </xs:element>

          <xs:element name="patch" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Cue patch action
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:element ref="params"  minOccurs="0" maxOccurs="1" />
                <xs:group ref="action" minOccurs="0" maxOccurs="1" />
              </xs:choice>
              <xs:attribute name="ref" type="cuename">
                <xs:annotation>
                  <xs:documentation>
                    Library cue name (all other action data is ignored if this is present)
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attributeGroup ref="comment" />
            </xs:complexType>
          </xs:element>

          <xs:element name="cues" type="cues" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Sub-cues
              </xs:documentation>
            </xs:annotation>
          </xs:element>

        </xs:sequence>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="ref" type="cuename">
      <xs:annotation>
        <xs:documentation>
          Library cue name (all other cue data is ignored if this is present)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="cuename">
      <xs:annotation>
        <xs:documentation>
          Cue name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="library" type="boolean">
      <xs:annotation>
        <xs:documentation>
          Is this just a library cue?
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          Cue version number
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="game" type="gamelookup">
      <xs:annotation>
        <xs:documentation>
          Game type
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="map" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Map name (default plot map if "default", all maps if "all" or not supplied)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="instantiate">
      <xs:annotation>
        <xs:documentation>
          Create a new cue instance when activating?
        </xs:documentation>
      </xs:annotation>
    </xs:attributeGroup>
    <xs:attribute name="delay" type="expression">
      <xs:annotation>
        <xs:documentation>
          Delay between condition checks (do not use with cues containing event conditions)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="check" type="checklookup">
      <xs:annotation>
        <xs:documentation>
          Action after first time condition is checked
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="comment" />
	</xs:complexType>

	<xs:complexType name="cues">
		<xs:sequence>
			<xs:element name="cue" type="cue" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="director">
		<xs:sequence>
      <xs:element name="documentation" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="author" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Author details
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="name" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Author name
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="alias" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Author alias
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="contact" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Author contact details
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="content" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attribute name="reference" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      File reference
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      File name
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="description" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      File description
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="version" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attribute name="number" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Internal version number
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="date" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Date of current version
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="status" type="versionstatus">
                  <xs:annotation>
                    <xs:documentation>
                      Status of current version
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cues" type="cues" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Cues
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="signature" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Signature
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
		<xs:attribute name="name" type="directorname" />
		<xs:attributeGroup ref="comment" />
	</xs:complexType>

	<!-- main director element -->

  <xs:element name="director" type="director">
    <xs:annotation>
      <xs:documentation>
        Mission Director
      </xs:documentation>
    </xs:annotation>
  </xs:element>

</xs:schema>